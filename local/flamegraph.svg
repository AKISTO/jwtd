<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="710" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="693.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="693.00"> </text><svg id="frames" x="10" width="1180" total_samples="20859"><g><title>0x700004413970 (16 samples, 0.08%)</title><rect x="0.0192%" y="645" width="0.0767%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="16"/><text x="0.2692%" y="655.50"></text></g><g><title>jwtd`GFp_bn_power5 (16 samples, 0.08%)</title><rect x="0.0192%" y="629" width="0.0767%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="16"/><text x="0.2692%" y="639.50"></text></g><g><title>jwtd`GFp_bn_power5 (31 samples, 0.15%)</title><rect x="0.0959%" y="629" width="0.1486%" height="15" fill="rgb(221,193,54)" fg:x="20" fg:w="31"/><text x="0.3459%" y="639.50"></text></g><g><title>0x7000044139b0 (33 samples, 0.16%)</title><rect x="0.0959%" y="645" width="0.1582%" height="15" fill="rgb(248,212,6)" fg:x="20" fg:w="33"/><text x="0.3459%" y="655.50"></text></g><g><title>0x700004413a70 (4 samples, 0.02%)</title><rect x="0.2541%" y="645" width="0.0192%" height="15" fill="rgb(208,68,35)" fg:x="53" fg:w="4"/><text x="0.5041%" y="655.50"></text></g><g><title>jwtd`mul4x_internal (3 samples, 0.01%)</title><rect x="0.2589%" y="629" width="0.0144%" height="15" fill="rgb(232,128,0)" fg:x="54" fg:w="3"/><text x="0.5089%" y="639.50"></text></g><g><title>jwtd`GFp_bn_power5 (7 samples, 0.03%)</title><rect x="0.2829%" y="629" width="0.0336%" height="15" fill="rgb(207,160,47)" fg:x="59" fg:w="7"/><text x="0.5329%" y="639.50"></text></g><g><title>0x700004616930 (8 samples, 0.04%)</title><rect x="0.2829%" y="645" width="0.0384%" height="15" fill="rgb(228,23,34)" fg:x="59" fg:w="8"/><text x="0.5329%" y="655.50"></text></g><g><title>jwtd`GFp_bn_power5 (16 samples, 0.08%)</title><rect x="0.3212%" y="629" width="0.0767%" height="15" fill="rgb(218,30,26)" fg:x="67" fg:w="16"/><text x="0.5712%" y="639.50"></text></g><g><title>0x700004616970 (17 samples, 0.08%)</title><rect x="0.3212%" y="645" width="0.0815%" height="15" fill="rgb(220,122,19)" fg:x="67" fg:w="17"/><text x="0.5712%" y="655.50"></text></g><g><title>jwtd`GFp_bn_power5 (29 samples, 0.14%)</title><rect x="0.4027%" y="629" width="0.1390%" height="15" fill="rgb(250,228,42)" fg:x="84" fg:w="29"/><text x="0.6527%" y="639.50"></text></g><g><title>0x7000046169b0 (31 samples, 0.15%)</title><rect x="0.4027%" y="645" width="0.1486%" height="15" fill="rgb(240,193,28)" fg:x="84" fg:w="31"/><text x="0.6527%" y="655.50"></text></g><g><title>0x700004616a70 (8 samples, 0.04%)</title><rect x="0.5513%" y="645" width="0.0384%" height="15" fill="rgb(216,20,37)" fg:x="115" fg:w="8"/><text x="0.8013%" y="655.50"></text></g><g><title>jwtd`mul4x_internal (5 samples, 0.02%)</title><rect x="0.5657%" y="629" width="0.0240%" height="15" fill="rgb(206,188,39)" fg:x="118" fg:w="5"/><text x="0.8157%" y="639.50"></text></g><g><title>0x700004819930 (5 samples, 0.02%)</title><rect x="0.5945%" y="645" width="0.0240%" height="15" fill="rgb(217,207,13)" fg:x="124" fg:w="5"/><text x="0.8445%" y="655.50"></text></g><g><title>jwtd`GFp_bn_power5 (5 samples, 0.02%)</title><rect x="0.5945%" y="629" width="0.0240%" height="15" fill="rgb(231,73,38)" fg:x="124" fg:w="5"/><text x="0.8445%" y="639.50"></text></g><g><title>0x700004819970 (7 samples, 0.03%)</title><rect x="0.6184%" y="645" width="0.0336%" height="15" fill="rgb(225,20,46)" fg:x="129" fg:w="7"/><text x="0.8684%" y="655.50"></text></g><g><title>jwtd`GFp_bn_power5 (7 samples, 0.03%)</title><rect x="0.6184%" y="629" width="0.0336%" height="15" fill="rgb(210,31,41)" fg:x="129" fg:w="7"/><text x="0.8684%" y="639.50"></text></g><g><title>0x7000048199b0 (38 samples, 0.18%)</title><rect x="0.6520%" y="645" width="0.1822%" height="15" fill="rgb(221,200,47)" fg:x="136" fg:w="38"/><text x="0.9020%" y="655.50"></text></g><g><title>jwtd`GFp_bn_power5 (38 samples, 0.18%)</title><rect x="0.6520%" y="629" width="0.1822%" height="15" fill="rgb(226,26,5)" fg:x="136" fg:w="38"/><text x="0.9020%" y="639.50"></text></g><g><title>0x700004819a70 (6 samples, 0.03%)</title><rect x="0.8390%" y="645" width="0.0288%" height="15" fill="rgb(249,33,26)" fg:x="175" fg:w="6"/><text x="1.0890%" y="655.50"></text></g><g><title>jwtd`mul4x_internal (6 samples, 0.03%)</title><rect x="0.8390%" y="629" width="0.0288%" height="15" fill="rgb(235,183,28)" fg:x="175" fg:w="6"/><text x="1.0890%" y="639.50"></text></g><g><title>jwtd`GFp_bn_power5 (10 samples, 0.05%)</title><rect x="0.8869%" y="629" width="0.0479%" height="15" fill="rgb(221,5,38)" fg:x="185" fg:w="10"/><text x="1.1369%" y="639.50"></text></g><g><title>0x700004a1c970 (11 samples, 0.05%)</title><rect x="0.8869%" y="645" width="0.0527%" height="15" fill="rgb(247,18,42)" fg:x="185" fg:w="11"/><text x="1.1369%" y="655.50"></text></g><g><title>jwtd`GFp_bn_power5 (27 samples, 0.13%)</title><rect x="0.9396%" y="629" width="0.1294%" height="15" fill="rgb(241,131,45)" fg:x="196" fg:w="27"/><text x="1.1896%" y="639.50"></text></g><g><title>0x700004a1c9b0 (29 samples, 0.14%)</title><rect x="0.9396%" y="645" width="0.1390%" height="15" fill="rgb(249,31,29)" fg:x="196" fg:w="29"/><text x="1.1896%" y="655.50"></text></g><g><title>0x700004a1ca70 (7 samples, 0.03%)</title><rect x="1.0787%" y="645" width="0.0336%" height="15" fill="rgb(225,111,53)" fg:x="225" fg:w="7"/><text x="1.3287%" y="655.50"></text></g><g><title>jwtd`mul4x_internal (6 samples, 0.03%)</title><rect x="1.0835%" y="629" width="0.0288%" height="15" fill="rgb(238,160,17)" fg:x="226" fg:w="6"/><text x="1.3335%" y="639.50"></text></g><g><title>jwtd`&lt;hyper::common::exec::Exec as hyper::common::exec::NewSvcExec&lt;I,N,S,E,W&gt;&gt;::execute_new_svc (3 samples, 0.01%)</title><rect x="1.1602%" y="405" width="0.0144%" height="15" fill="rgb(214,148,48)" fg:x="242" fg:w="3"/><text x="1.4102%" y="415.50"></text></g><g><title>jwtd`tokio::task::spawn::spawn (3 samples, 0.01%)</title><rect x="1.1602%" y="389" width="0.0144%" height="15" fill="rgb(232,36,49)" fg:x="242" fg:w="3"/><text x="1.4102%" y="399.50"></text></g><g><title>jwtd`tokio::runtime::spawner::Spawner::spawn (3 samples, 0.01%)</title><rect x="1.1602%" y="373" width="0.0144%" height="15" fill="rgb(209,103,24)" fg:x="242" fg:w="3"/><text x="1.4102%" y="383.50"></text></g><g><title>jwtd`tokio::runtime::thread_pool::Spawner::spawn (3 samples, 0.01%)</title><rect x="1.1602%" y="357" width="0.0144%" height="15" fill="rgb(229,88,8)" fg:x="242" fg:w="3"/><text x="1.4102%" y="367.50"></text></g><g><title>jwtd`mio::net::tcp::listener::TcpListener::accept (5 samples, 0.02%)</title><rect x="1.1746%" y="373" width="0.0240%" height="15" fill="rgb(213,181,19)" fg:x="245" fg:w="5"/><text x="1.4246%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__accept (3 samples, 0.01%)</title><rect x="1.1841%" y="357" width="0.0144%" height="15" fill="rgb(254,191,54)" fg:x="247" fg:w="3"/><text x="1.4341%" y="367.50"></text></g><g><title>jwtd`tokio::net::tcp::listener::TcpListener::poll_accept (6 samples, 0.03%)</title><rect x="1.1746%" y="389" width="0.0288%" height="15" fill="rgb(241,83,37)" fg:x="245" fg:w="6"/><text x="1.4246%" y="399.50"></text></g><g><title>jwtd`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.06%)</title><rect x="1.1506%" y="453" width="0.0575%" height="15" fill="rgb(233,36,39)" fg:x="240" fg:w="12"/><text x="1.4006%" y="463.50"></text></g><g><title>jwtd`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.06%)</title><rect x="1.1506%" y="437" width="0.0575%" height="15" fill="rgb(226,3,54)" fg:x="240" fg:w="12"/><text x="1.4006%" y="447.50"></text></g><g><title>jwtd`hyper::server::conn::SpawnAll&lt;I,S,E&gt;::poll_watch (11 samples, 0.05%)</title><rect x="1.1554%" y="421" width="0.0527%" height="15" fill="rgb(245,192,40)" fg:x="241" fg:w="11"/><text x="1.4054%" y="431.50"></text></g><g><title>jwtd`&lt;hyper::server::tcp::AddrIncoming as hyper::server::accept::Accept&gt;::poll_accept (7 samples, 0.03%)</title><rect x="1.1746%" y="405" width="0.0336%" height="15" fill="rgb(238,167,29)" fg:x="245" fg:w="7"/><text x="1.4246%" y="415.50"></text></g><g><title>jwtd`openssl_sys::init (7 samples, 0.03%)</title><rect x="1.2225%" y="421" width="0.0336%" height="15" fill="rgb(232,182,51)" fg:x="255" fg:w="7"/><text x="1.4725%" y="431.50"></text></g><g><title>jwtd`std::sync::once::Once::call_inner (7 samples, 0.03%)</title><rect x="1.2225%" y="405" width="0.0336%" height="15" fill="rgb(231,60,39)" fg:x="255" fg:w="7"/><text x="1.4725%" y="415.50"></text></g><g><title>libssl.3.dylib`OPENSSL_init_ssl (6 samples, 0.03%)</title><rect x="1.2273%" y="389" width="0.0288%" height="15" fill="rgb(208,69,12)" fg:x="256" fg:w="6"/><text x="1.4773%" y="399.50"></text></g><g><title>libcrypto.3.dylib`OPENSSL_init_crypto (4 samples, 0.02%)</title><rect x="1.2369%" y="373" width="0.0192%" height="15" fill="rgb(235,93,37)" fg:x="258" fg:w="4"/><text x="1.4869%" y="383.50"></text></g><g><title>libcrypto.3.dylib`CRYPTO_THREAD_run_once (4 samples, 0.02%)</title><rect x="1.2369%" y="357" width="0.0192%" height="15" fill="rgb(213,116,39)" fg:x="258" fg:w="4"/><text x="1.4869%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (4 samples, 0.02%)</title><rect x="1.2369%" y="341" width="0.0192%" height="15" fill="rgb(222,207,29)" fg:x="258" fg:w="4"/><text x="1.4869%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (4 samples, 0.02%)</title><rect x="1.2369%" y="325" width="0.0192%" height="15" fill="rgb(206,96,30)" fg:x="258" fg:w="4"/><text x="1.4869%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`__pthread_once_handler (4 samples, 0.02%)</title><rect x="1.2369%" y="309" width="0.0192%" height="15" fill="rgb(218,138,4)" fg:x="258" fg:w="4"/><text x="1.4869%" y="319.50"></text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.12%)</title><rect x="1.1506%" y="469" width="0.1151%" height="15" fill="rgb(250,191,14)" fg:x="240" fg:w="24"/><text x="1.4006%" y="479.50"></text></g><g><title>jwtd`jwtd::to_public_key (9 samples, 0.04%)</title><rect x="1.2225%" y="453" width="0.0431%" height="15" fill="rgb(239,60,40)" fg:x="255" fg:w="9"/><text x="1.4725%" y="463.50"></text></g><g><title>jwtd`openssl::rsa::Rsa&lt;openssl::pkey::Private&gt;::private_key_from_pem (9 samples, 0.04%)</title><rect x="1.2225%" y="437" width="0.0431%" height="15" fill="rgb(206,27,48)" fg:x="255" fg:w="9"/><text x="1.4725%" y="447.50"></text></g><g><title>jwtd`tokio::runtime::Runtime::block_on (25 samples, 0.12%)</title><rect x="1.1506%" y="533" width="0.1199%" height="15" fill="rgb(225,35,8)" fg:x="240" fg:w="25"/><text x="1.4006%" y="543.50"></text></g><g><title>jwtd`tokio::runtime::thread_pool::ThreadPool::block_on (25 samples, 0.12%)</title><rect x="1.1506%" y="517" width="0.1199%" height="15" fill="rgb(250,213,24)" fg:x="240" fg:w="25"/><text x="1.4006%" y="527.50"></text></g><g><title>jwtd`tokio::park::thread::CachedParkThread::block_on (25 samples, 0.12%)</title><rect x="1.1506%" y="501" width="0.1199%" height="15" fill="rgb(247,123,22)" fg:x="240" fg:w="25"/><text x="1.4006%" y="511.50"></text></g><g><title>jwtd`std::thread::local::LocalKey&lt;T&gt;::with (25 samples, 0.12%)</title><rect x="1.1506%" y="485" width="0.1199%" height="15" fill="rgb(231,138,38)" fg:x="240" fg:w="25"/><text x="1.4006%" y="495.50"></text></g><g><title>jwtd`0x1 (28 samples, 0.13%)</title><rect x="1.1410%" y="645" width="0.1342%" height="15" fill="rgb(231,145,46)" fg:x="238" fg:w="28"/><text x="1.3910%" y="655.50"></text></g><g><title>libdyld.dylib`start (28 samples, 0.13%)</title><rect x="1.1410%" y="629" width="0.1342%" height="15" fill="rgb(251,118,11)" fg:x="238" fg:w="28"/><text x="1.3910%" y="639.50"></text></g><g><title>jwtd`main (28 samples, 0.13%)</title><rect x="1.1410%" y="613" width="0.1342%" height="15" fill="rgb(217,147,25)" fg:x="238" fg:w="28"/><text x="1.3910%" y="623.50"></text></g><g><title>jwtd`std::rt::lang_start_internal (27 samples, 0.13%)</title><rect x="1.1458%" y="597" width="0.1294%" height="15" fill="rgb(247,81,37)" fg:x="239" fg:w="27"/><text x="1.3958%" y="607.50"></text></g><g><title>jwtd`std::rt::lang_start::_{{closure}} (26 samples, 0.12%)</title><rect x="1.1506%" y="581" width="0.1246%" height="15" fill="rgb(209,12,38)" fg:x="240" fg:w="26"/><text x="1.4006%" y="591.50"></text></g><g><title>jwtd`std::sys_common::backtrace::__rust_begin_short_backtrace (26 samples, 0.12%)</title><rect x="1.1506%" y="565" width="0.1246%" height="15" fill="rgb(227,1,9)" fg:x="240" fg:w="26"/><text x="1.4006%" y="575.50"></text></g><g><title>jwtd`jwtd::main (26 samples, 0.12%)</title><rect x="1.1506%" y="549" width="0.1246%" height="15" fill="rgb(248,47,43)" fg:x="240" fg:w="26"/><text x="1.4006%" y="559.50"></text></g><g><title>jwtd`GFp_bn_power5 (189 samples, 0.91%)</title><rect x="1.2752%" y="645" width="0.9061%" height="15" fill="rgb(221,10,30)" fg:x="266" fg:w="189"/><text x="1.5252%" y="655.50"></text></g><g><title>jwtd`_bn_post4x_internal (1,156 samples, 5.54%)</title><rect x="2.1813%" y="645" width="5.5420%" height="15" fill="rgb(210,229,1)" fg:x="455" fg:w="1156"/><text x="2.4313%" y="655.50">jwtd`_b..</text></g><g><title>jwtd`_bn_sqr8x_internal (4,054 samples, 19.44%)</title><rect x="7.7233%" y="645" width="19.4353%" height="15" fill="rgb(222,148,37)" fg:x="1611" fg:w="4054"/><text x="7.9733%" y="655.50">jwtd`_bn_sqr8x_internal</text></g><g><title>jwtd`_bn_sqr8x_reduction (3,882 samples, 18.61%)</title><rect x="27.1585%" y="645" width="18.6107%" height="15" fill="rgb(234,67,33)" fg:x="5665" fg:w="3882"/><text x="27.4085%" y="655.50">jwtd`_bn_sqr8x_reduction</text></g><g><title>jwtd`bn_from_mont8x (4 samples, 0.02%)</title><rect x="45.7692%" y="645" width="0.0192%" height="15" fill="rgb(247,98,35)" fg:x="9547" fg:w="4"/><text x="46.0192%" y="655.50"></text></g><g><title>jwtd`bn_mul4x_mont (10 samples, 0.05%)</title><rect x="45.7884%" y="645" width="0.0479%" height="15" fill="rgb(247,138,52)" fg:x="9551" fg:w="10"/><text x="46.0384%" y="655.50"></text></g><g><title>jwtd`bn_mul4x_mont_gather5 (11 samples, 0.05%)</title><rect x="45.8363%" y="645" width="0.0527%" height="15" fill="rgb(213,79,30)" fg:x="9561" fg:w="11"/><text x="46.0863%" y="655.50"></text></g><g><title>jwtd`bn_sqr8x_mont (78 samples, 0.37%)</title><rect x="45.8891%" y="645" width="0.3739%" height="15" fill="rgb(246,177,23)" fg:x="9572" fg:w="78"/><text x="46.1391%" y="655.50"></text></g><g><title>jwtd`mul4x_internal (1,117 samples, 5.36%)</title><rect x="46.2630%" y="645" width="5.3550%" height="15" fill="rgb(230,62,27)" fg:x="9650" fg:w="1117"/><text x="46.5130%" y="655.50">jwtd`mu..</text></g><g><title>jwtd`tokio::runtime::queue::Local&lt;T&gt;::pop (4 samples, 0.02%)</title><rect x="51.6707%" y="437" width="0.0192%" height="15" fill="rgb(216,154,8)" fg:x="10778" fg:w="4"/><text x="51.9207%" y="447.50"></text></g><g><title>jwtd`mio::event::event::Event::is_read_closed (3 samples, 0.01%)</title><rect x="51.6947%" y="389" width="0.0144%" height="15" fill="rgb(244,35,45)" fg:x="10783" fg:w="3"/><text x="51.9447%" y="399.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt; (3 samples, 0.01%)</title><rect x="51.7906%" y="357" width="0.0144%" height="15" fill="rgb(251,115,12)" fg:x="10803" fg:w="3"/><text x="52.0406%" y="367.50"></text></g><g><title> 32]&gt; (3 samples, 0.01%)</title><rect x="51.7906%" y="341" width="0.0144%" height="15" fill="rgb(240,54,50)" fg:x="10803" fg:w="3"/><text x="52.0406%" y="351.50"></text></g><g><title>jwtd`tokio::io::driver::scheduled_io::ScheduledIo::wake0 (17 samples, 0.08%)</title><rect x="51.7666%" y="373" width="0.0815%" height="15" fill="rgb(233,84,52)" fg:x="10798" fg:w="17"/><text x="52.0166%" y="383.50"></text></g><g><title>jwtd`tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (9 samples, 0.04%)</title><rect x="51.8050%" y="357" width="0.0431%" height="15" fill="rgb(207,117,47)" fg:x="10806" fg:w="9"/><text x="52.0550%" y="367.50"></text></g><g><title>jwtd`tokio::runtime::task::state::State::transition_to_notified (8 samples, 0.04%)</title><rect x="51.8098%" y="341" width="0.0384%" height="15" fill="rgb(249,43,39)" fg:x="10807" fg:w="8"/><text x="52.0598%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`kevent (97 samples, 0.47%)</title><rect x="51.8481%" y="373" width="0.4650%" height="15" fill="rgb(209,38,44)" fg:x="10815" fg:w="97"/><text x="52.0981%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (12 samples, 0.06%)</title><rect x="52.3132%" y="373" width="0.0575%" height="15" fill="rgb(236,212,23)" fg:x="10912" fg:w="12"/><text x="52.5632%" y="383.50"></text></g><g><title>jwtd`tokio::io::driver::Driver::turn (138 samples, 0.66%)</title><rect x="51.7187%" y="389" width="0.6616%" height="15" fill="rgb(242,79,21)" fg:x="10788" fg:w="138"/><text x="51.9687%" y="399.50"></text></g><g><title>jwtd`&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park_timeout (144 samples, 0.69%)</title><rect x="51.6947%" y="421" width="0.6903%" height="15" fill="rgb(211,96,35)" fg:x="10783" fg:w="144"/><text x="51.9447%" y="431.50"></text></g><g><title>jwtd`tokio::time::driver::Driver&lt;P&gt;::park_internal (144 samples, 0.69%)</title><rect x="51.6947%" y="405" width="0.6903%" height="15" fill="rgb(253,215,40)" fg:x="10783" fg:w="144"/><text x="51.9447%" y="415.50"></text></g><g><title>jwtd`tokio::runtime::thread_pool::worker::Context::park_timeout (146 samples, 0.70%)</title><rect x="51.6899%" y="437" width="0.6999%" height="15" fill="rgb(211,81,21)" fg:x="10782" fg:w="146"/><text x="51.9399%" y="447.50"></text></g><g><title>jwtd`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (3 samples, 0.01%)</title><rect x="52.6391%" y="341" width="0.0144%" height="15" fill="rgb(208,190,38)" fg:x="10980" fg:w="3"/><text x="52.8891%" y="351.50"></text></g><g><title>jwtd`&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::is_client (3 samples, 0.01%)</title><rect x="52.6535%" y="341" width="0.0144%" height="15" fill="rgb(235,213,38)" fg:x="10983" fg:w="3"/><text x="52.9035%" y="351.50"></text></g><g><title>jwtd`core::ptr::drop_in_place$LT$warp..filter..service..FilteredFuture$LT$warp..filter..or..EitherFuture$LT$warp..filter..or..Or$LT$warp..filter..or..Or$LT$warp..filter..or..Or$LT$warp..filter..and_then..AndThen$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filters..any..Any$C$warp..filters..path..Exact$LT$warp..filters..path..internal..Opaque$LT$jwtd..main..$u7b$$u7b$closure$u7d$$u7d$..__StaticPath$GT$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..path..end..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..method..method_is$LT$warp..filters..method..post..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..untuple_one..UntupleOne$LT$warp..filter..and_then..AndThen$LT$warp..filter..map_err..MapErr$LT$warp..filter..FilterFn$LT$warp..filter..filter_fn_one$LT$warp..filters..header..header2$LT$headers..common..content_length..ContentL� (3 samples, 0.01%)</title><rect x="52.6871%" y="341" width="0.0144%" height="15" fill="rgb(237,122,38)" fg:x="10990" fg:w="3"/><text x="52.9371%" y="351.50"></text></g><g><title>jwtd`hyper::body::body::Body::new_channel (4 samples, 0.02%)</title><rect x="52.7398%" y="341" width="0.0192%" height="15" fill="rgb(244,218,35)" fg:x="11001" fg:w="4"/><text x="52.9898%" y="351.50"></text></g><g><title>jwtd`hyper::proto::h1::Wants::contains (3 samples, 0.01%)</title><rect x="52.7734%" y="341" width="0.0144%" height="15" fill="rgb(240,68,47)" fg:x="11008" fg:w="3"/><text x="53.0234%" y="351.50"></text></g><g><title>jwtd`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (6 samples, 0.03%)</title><rect x="52.7974%" y="341" width="0.0288%" height="15" fill="rgb(210,16,53)" fg:x="11013" fg:w="6"/><text x="53.0474%" y="351.50"></text></g><g><title>jwtd`&lt;T as hyper::service::http::HttpService&lt;B1&gt;&gt;::call (3 samples, 0.01%)</title><rect x="53.2816%" y="325" width="0.0144%" height="15" fill="rgb(235,124,12)" fg:x="11114" fg:w="3"/><text x="53.5316%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.01%)</title><rect x="53.5596%" y="261" width="0.0144%" height="15" fill="rgb(224,169,11)" fg:x="11172" fg:w="3"/><text x="53.8096%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (3 samples, 0.01%)</title><rect x="53.5596%" y="245" width="0.0144%" height="15" fill="rgb(250,166,2)" fg:x="11172" fg:w="3"/><text x="53.8096%" y="255.50"></text></g><g><title>jwtd`&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="53.5596%" y="277" width="0.0240%" height="15" fill="rgb(242,216,29)" fg:x="11172" fg:w="5"/><text x="53.8096%" y="287.50"></text></g><g><title>jwtd`scoped_tls::ScopedKey&lt;T&gt;::with (9 samples, 0.04%)</title><rect x="53.5884%" y="277" width="0.0431%" height="15" fill="rgb(230,116,27)" fg:x="11178" fg:w="9"/><text x="53.8384%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.03%)</title><rect x="53.6028%" y="261" width="0.0288%" height="15" fill="rgb(228,99,48)" fg:x="11181" fg:w="6"/><text x="53.8528%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (9 samples, 0.04%)</title><rect x="53.7562%" y="213" width="0.0431%" height="15" fill="rgb(253,11,6)" fg:x="11213" fg:w="9"/><text x="54.0062%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (31 samples, 0.15%)</title><rect x="53.7178%" y="229" width="0.1486%" height="15" fill="rgb(247,143,39)" fg:x="11205" fg:w="31"/><text x="53.9678%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (12 samples, 0.06%)</title><rect x="53.8089%" y="213" width="0.0575%" height="15" fill="rgb(236,97,10)" fg:x="11224" fg:w="12"/><text x="54.0589%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (8 samples, 0.04%)</title><rect x="53.8281%" y="197" width="0.0384%" height="15" fill="rgb(233,208,19)" fg:x="11228" fg:w="8"/><text x="54.0781%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (66 samples, 0.32%)</title><rect x="53.6411%" y="277" width="0.3164%" height="15" fill="rgb(216,164,2)" fg:x="11189" fg:w="66"/><text x="53.8911%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (63 samples, 0.30%)</title><rect x="53.6555%" y="261" width="0.3020%" height="15" fill="rgb(220,129,5)" fg:x="11192" fg:w="63"/><text x="53.9055%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (53 samples, 0.25%)</title><rect x="53.7034%" y="245" width="0.2541%" height="15" fill="rgb(242,17,10)" fg:x="11202" fg:w="53"/><text x="53.9534%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.09%)</title><rect x="53.8664%" y="229" width="0.0911%" height="15" fill="rgb(242,107,0)" fg:x="11236" fg:w="19"/><text x="54.1164%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.03%)</title><rect x="53.9240%" y="213" width="0.0336%" height="15" fill="rgb(251,28,31)" fg:x="11248" fg:w="7"/><text x="54.1740%" y="223.50"></text></g><g><title>jwtd`&lt;warp::filter::or::Or&lt;T,U&gt; as warp::filter::FilterBase&gt;::filter (171 samples, 0.82%)</title><rect x="53.4350%" y="293" width="0.8198%" height="15" fill="rgb(233,223,10)" fg:x="11146" fg:w="171"/><text x="53.6850%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (62 samples, 0.30%)</title><rect x="53.9575%" y="277" width="0.2972%" height="15" fill="rgb(215,21,27)" fg:x="11255" fg:w="62"/><text x="54.2075%" y="287.50"></text></g><g><title>jwtd`scoped_tls::ScopedKey&lt;T&gt;::with (3 samples, 0.01%)</title><rect x="54.2596%" y="293" width="0.0144%" height="15" fill="rgb(232,23,21)" fg:x="11318" fg:w="3"/><text x="54.5096%" y="303.50"></text></g><g><title>jwtd`&lt;T as hyper::service::http::HttpService&lt;B1&gt;&gt;::call (207 samples, 0.99%)</title><rect x="53.3535%" y="309" width="0.9924%" height="15" fill="rgb(244,5,23)" fg:x="11129" fg:w="207"/><text x="53.6035%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.04%)</title><rect x="54.3027%" y="293" width="0.0431%" height="15" fill="rgb(226,81,46)" fg:x="11327" fg:w="9"/><text x="54.5527%" y="303.50"></text></g><g><title>jwtd`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="54.3458%" y="309" width="0.0192%" height="15" fill="rgb(247,70,30)" fg:x="11336" fg:w="4"/><text x="54.5958%" y="319.50"></text></g><g><title>jwtd`&lt;scoped_tls::ScopedKey&lt;T&gt;::set::Reset as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="54.3650%" y="309" width="0.0192%" height="15" fill="rgb(212,68,19)" fg:x="11340" fg:w="4"/><text x="54.6150%" y="319.50"></text></g><g><title>jwtd`bytes::bytes::static_drop (4 samples, 0.02%)</title><rect x="54.3890%" y="309" width="0.0192%" height="15" fill="rgb(240,187,13)" fg:x="11345" fg:w="4"/><text x="54.6390%" y="319.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (7 samples, 0.03%)</title><rect x="54.4082%" y="309" width="0.0336%" height="15" fill="rgb(223,113,26)" fg:x="11349" fg:w="7"/><text x="54.6582%" y="319.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (3 samples, 0.01%)</title><rect x="54.4417%" y="309" width="0.0144%" height="15" fill="rgb(206,192,2)" fg:x="11356" fg:w="3"/><text x="54.6917%" y="319.50"></text></g><g><title>jwtd`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (254 samples, 1.22%)</title><rect x="53.3055%" y="325" width="1.2177%" height="15" fill="rgb(241,108,4)" fg:x="11119" fg:w="254"/><text x="53.5555%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.06%)</title><rect x="54.4657%" y="309" width="0.0575%" height="15" fill="rgb(247,173,49)" fg:x="11361" fg:w="12"/><text x="54.7157%" y="319.50"></text></g><g><title>jwtd`&lt;warp::filter::or::EitherFuture&lt;T,U&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="54.5280%" y="325" width="0.0240%" height="15" fill="rgb(224,114,35)" fg:x="11374" fg:w="5"/><text x="54.7780%" y="335.50"></text></g><g><title>jwtd`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.01%)</title><rect x="54.5999%" y="309" width="0.0144%" height="15" fill="rgb(245,159,27)" fg:x="11389" fg:w="3"/><text x="54.8499%" y="319.50"></text></g><g><title>jwtd`&lt;scoped_tls::ScopedKey&lt;T&gt;::set::Reset as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="54.6143%" y="309" width="0.0288%" height="15" fill="rgb(245,172,44)" fg:x="11392" fg:w="6"/><text x="54.8643%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.02%)</title><rect x="54.6239%" y="293" width="0.0192%" height="15" fill="rgb(236,23,11)" fg:x="11394" fg:w="4"/><text x="54.8739%" y="303.50"></text></g><g><title>jwtd`&lt;warp::filter::and_then::AndThenFuture&lt;T,F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.04%)</title><rect x="54.6431%" y="309" width="0.0431%" height="15" fill="rgb(205,117,38)" fg:x="11398" fg:w="9"/><text x="54.8931%" y="319.50"></text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="54.8732%" y="293" width="0.0240%" height="15" fill="rgb(237,72,25)" fg:x="11446" fg:w="5"/><text x="55.1232%" y="303.50"></text></g><g><title>jwtd`&lt;warp::filter::and::AndFuture&lt;T,U&gt; as core::future::future::Future&gt;::poll (6 samples, 0.03%)</title><rect x="54.8972%" y="293" width="0.0288%" height="15" fill="rgb(244,70,9)" fg:x="11451" fg:w="6"/><text x="55.1472%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc (25 samples, 0.12%)</title><rect x="55.1560%" y="229" width="0.1199%" height="15" fill="rgb(217,125,39)" fg:x="11505" fg:w="25"/><text x="55.4060%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (24 samples, 0.12%)</title><rect x="55.1608%" y="213" width="0.1151%" height="15" fill="rgb(235,36,10)" fg:x="11506" fg:w="24"/><text x="55.4108%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.11%)</title><rect x="55.1704%" y="197" width="0.1055%" height="15" fill="rgb(251,123,47)" fg:x="11508" fg:w="22"/><text x="55.4204%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.09%)</title><rect x="55.1896%" y="181" width="0.0863%" height="15" fill="rgb(221,13,13)" fg:x="11512" fg:w="18"/><text x="55.4396%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.02%)</title><rect x="55.2519%" y="165" width="0.0240%" height="15" fill="rgb(238,131,9)" fg:x="11525" fg:w="5"/><text x="55.5019%" y="175.50"></text></g><g><title>jwtd`&lt;alloc::string::String as core::clone::Clone&gt;::clone (31 samples, 0.15%)</title><rect x="55.1417%" y="245" width="0.1486%" height="15" fill="rgb(211,50,8)" fg:x="11502" fg:w="31"/><text x="55.3917%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="55.2759%" y="229" width="0.0144%" height="15" fill="rgb(245,182,24)" fg:x="11530" fg:w="3"/><text x="55.5259%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (20 samples, 0.10%)</title><rect x="55.3382%" y="213" width="0.0959%" height="15" fill="rgb(242,14,37)" fg:x="11543" fg:w="20"/><text x="55.5882%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (19 samples, 0.09%)</title><rect x="55.3430%" y="197" width="0.0911%" height="15" fill="rgb(246,228,12)" fg:x="11544" fg:w="19"/><text x="55.5930%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.08%)</title><rect x="55.3526%" y="181" width="0.0815%" height="15" fill="rgb(213,55,15)" fg:x="11546" fg:w="17"/><text x="55.6026%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.08%)</title><rect x="55.3574%" y="165" width="0.0767%" height="15" fill="rgb(209,9,3)" fg:x="11547" fg:w="16"/><text x="55.6074%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.02%)</title><rect x="55.4101%" y="149" width="0.0240%" height="15" fill="rgb(230,59,30)" fg:x="11558" fg:w="5"/><text x="55.6601%" y="159.50"></text></g><g><title>jwtd`&lt;alloc::string::String as core::clone::Clone&gt;::clone (21 samples, 0.10%)</title><rect x="55.3382%" y="229" width="0.1007%" height="15" fill="rgb(209,121,21)" fg:x="11543" fg:w="21"/><text x="55.5882%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (7 samples, 0.03%)</title><rect x="55.4437%" y="213" width="0.0336%" height="15" fill="rgb(220,109,13)" fg:x="11565" fg:w="7"/><text x="55.6937%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.03%)</title><rect x="55.4485%" y="197" width="0.0288%" height="15" fill="rgb(232,18,1)" fg:x="11566" fg:w="6"/><text x="55.6985%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.03%)</title><rect x="55.4485%" y="181" width="0.0288%" height="15" fill="rgb(215,41,42)" fg:x="11566" fg:w="6"/><text x="55.6985%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (9 samples, 0.04%)</title><rect x="55.4389%" y="229" width="0.0431%" height="15" fill="rgb(224,123,36)" fg:x="11564" fg:w="9"/><text x="55.6889%" y="239.50"></text></g><g><title>jwtd`alloc::slice::hack::to_vec (40 samples, 0.19%)</title><rect x="55.2999%" y="245" width="0.1918%" height="15" fill="rgb(240,125,3)" fg:x="11535" fg:w="40"/><text x="55.5499%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.02%)</title><rect x="55.5492%" y="181" width="0.0192%" height="15" fill="rgb(205,98,50)" fg:x="11587" fg:w="4"/><text x="55.7992%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (19 samples, 0.09%)</title><rect x="55.4916%" y="245" width="0.0911%" height="15" fill="rgb(205,185,37)" fg:x="11575" fg:w="19"/><text x="55.7416%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (12 samples, 0.06%)</title><rect x="55.5252%" y="229" width="0.0575%" height="15" fill="rgb(238,207,15)" fg:x="11582" fg:w="12"/><text x="55.7752%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.06%)</title><rect x="55.5252%" y="213" width="0.0575%" height="15" fill="rgb(213,199,42)" fg:x="11582" fg:w="12"/><text x="55.7752%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.06%)</title><rect x="55.5252%" y="197" width="0.0575%" height="15" fill="rgb(235,201,11)" fg:x="11582" fg:w="12"/><text x="55.7752%" y="207.50"></text></g><g><title>jwtd`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (106 samples, 0.51%)</title><rect x="55.0793%" y="261" width="0.5082%" height="15" fill="rgb(207,46,11)" fg:x="11489" fg:w="106"/><text x="55.3293%" y="271.50"></text></g><g><title>jwtd`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (5 samples, 0.02%)</title><rect x="55.6498%" y="245" width="0.0240%" height="15" fill="rgb(241,35,35)" fg:x="11608" fg:w="5"/><text x="55.8998%" y="255.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.02%)</title><rect x="55.7265%" y="229" width="0.0240%" height="15" fill="rgb(243,32,47)" fg:x="11624" fg:w="5"/><text x="55.9765%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.06%)</title><rect x="55.7553%" y="229" width="0.0575%" height="15" fill="rgb(247,202,23)" fg:x="11630" fg:w="12"/><text x="56.0053%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.04%)</title><rect x="55.7697%" y="213" width="0.0431%" height="15" fill="rgb(219,102,11)" fg:x="11633" fg:w="9"/><text x="56.0197%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.01%)</title><rect x="55.8656%" y="213" width="0.0144%" height="15" fill="rgb(243,110,44)" fg:x="11653" fg:w="3"/><text x="56.1156%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (37 samples, 0.18%)</title><rect x="55.8128%" y="229" width="0.1774%" height="15" fill="rgb(222,74,54)" fg:x="11642" fg:w="37"/><text x="56.0628%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (23 samples, 0.11%)</title><rect x="55.8800%" y="213" width="0.1103%" height="15" fill="rgb(216,99,12)" fg:x="11656" fg:w="23"/><text x="56.1300%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (4 samples, 0.02%)</title><rect x="55.9710%" y="197" width="0.0192%" height="15" fill="rgb(226,22,26)" fg:x="11675" fg:w="4"/><text x="56.2210%" y="207.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (67 samples, 0.32%)</title><rect x="55.6738%" y="245" width="0.3212%" height="15" fill="rgb(217,163,10)" fg:x="11613" fg:w="67"/><text x="55.9238%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (6 samples, 0.03%)</title><rect x="55.9950%" y="245" width="0.0288%" height="15" fill="rgb(213,25,53)" fg:x="11680" fg:w="6"/><text x="56.2450%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (4 samples, 0.02%)</title><rect x="56.1005%" y="229" width="0.0192%" height="15" fill="rgb(252,105,26)" fg:x="11702" fg:w="4"/><text x="56.3505%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (38 samples, 0.18%)</title><rect x="56.0238%" y="245" width="0.1822%" height="15" fill="rgb(220,39,43)" fg:x="11686" fg:w="38"/><text x="56.2738%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (18 samples, 0.09%)</title><rect x="56.1197%" y="229" width="0.0863%" height="15" fill="rgb(229,68,48)" fg:x="11706" fg:w="18"/><text x="56.3697%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.03%)</title><rect x="56.3018%" y="229" width="0.0336%" height="15" fill="rgb(252,8,32)" fg:x="11744" fg:w="7"/><text x="56.5518%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (83 samples, 0.40%)</title><rect x="56.2060%" y="245" width="0.3979%" height="15" fill="rgb(223,20,43)" fg:x="11724" fg:w="83"/><text x="56.4560%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (56 samples, 0.27%)</title><rect x="56.3354%" y="229" width="0.2685%" height="15" fill="rgb(229,81,49)" fg:x="11751" fg:w="56"/><text x="56.5854%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (10 samples, 0.05%)</title><rect x="56.5559%" y="213" width="0.0479%" height="15" fill="rgb(236,28,36)" fg:x="11797" fg:w="10"/><text x="56.8059%" y="223.50"></text></g><g><title>jwtd`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (214 samples, 1.03%)</title><rect x="55.5875%" y="261" width="1.0259%" height="15" fill="rgb(249,185,26)" fg:x="11595" fg:w="214"/><text x="55.8375%" y="271.50"></text></g><g><title>jwtd`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (5 samples, 0.02%)</title><rect x="56.6326%" y="261" width="0.0240%" height="15" fill="rgb(249,174,33)" fg:x="11813" fg:w="5"/><text x="56.8826%" y="271.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;jsonwebtoken::header::Header&gt; (3 samples, 0.01%)</title><rect x="56.6614%" y="261" width="0.0144%" height="15" fill="rgb(233,201,37)" fg:x="11819" fg:w="3"/><text x="56.9114%" y="271.50"></text></g><g><title>jwtd`alloc::str::_&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (5 samples, 0.02%)</title><rect x="56.7237%" y="245" width="0.0240%" height="15" fill="rgb(221,78,26)" fg:x="11832" fg:w="5"/><text x="56.9737%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="56.7669%" y="229" width="0.0240%" height="15" fill="rgb(250,127,30)" fg:x="11841" fg:w="5"/><text x="57.0169%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.02%)</title><rect x="56.7669%" y="213" width="0.0240%" height="15" fill="rgb(230,49,44)" fg:x="11841" fg:w="5"/><text x="57.0169%" y="223.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;jsonwebtoken::header::Header&gt; (22 samples, 0.11%)</title><rect x="56.7573%" y="245" width="0.1055%" height="15" fill="rgb(229,67,23)" fg:x="11839" fg:w="22"/><text x="57.0073%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.07%)</title><rect x="56.7908%" y="229" width="0.0719%" height="15" fill="rgb(249,83,47)" fg:x="11846" fg:w="15"/><text x="57.0408%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.05%)</title><rect x="56.8148%" y="213" width="0.0479%" height="15" fill="rgb(215,43,3)" fg:x="11851" fg:w="10"/><text x="57.0648%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.02%)</title><rect x="56.8388%" y="197" width="0.0240%" height="15" fill="rgb(238,154,13)" fg:x="11856" fg:w="5"/><text x="57.0888%" y="207.50"></text></g><g><title>jwtd`jsonwebtoken::crypto::sign (4 samples, 0.02%)</title><rect x="56.8627%" y="245" width="0.0192%" height="15" fill="rgb(219,56,2)" fg:x="11861" fg:w="4"/><text x="57.1127%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="56.9730%" y="149" width="0.0144%" height="15" fill="rgb(233,0,4)" fg:x="11884" fg:w="3"/><text x="57.2230%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (9 samples, 0.04%)</title><rect x="56.9538%" y="213" width="0.0431%" height="15" fill="rgb(235,30,7)" fg:x="11880" fg:w="9"/><text x="57.2038%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (8 samples, 0.04%)</title><rect x="56.9586%" y="197" width="0.0384%" height="15" fill="rgb(250,79,13)" fg:x="11881" fg:w="8"/><text x="57.2086%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.04%)</title><rect x="56.9586%" y="181" width="0.0384%" height="15" fill="rgb(211,146,34)" fg:x="11881" fg:w="8"/><text x="57.2086%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.03%)</title><rect x="56.9634%" y="165" width="0.0336%" height="15" fill="rgb(228,22,38)" fg:x="11882" fg:w="7"/><text x="57.2134%" y="175.50"></text></g><g><title>jwtd`alloc::str::_&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (16 samples, 0.08%)</title><rect x="56.9347%" y="229" width="0.0767%" height="15" fill="rgb(235,168,5)" fg:x="11876" fg:w="16"/><text x="57.1847%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="56.9970%" y="213" width="0.0144%" height="15" fill="rgb(221,155,16)" fg:x="11889" fg:w="3"/><text x="57.2470%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="57.1168%" y="149" width="0.0144%" height="15" fill="rgb(215,215,53)" fg:x="11914" fg:w="3"/><text x="57.3668%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (19 samples, 0.09%)</title><rect x="57.0593%" y="213" width="0.0911%" height="15" fill="rgb(223,4,10)" fg:x="11902" fg:w="19"/><text x="57.3093%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (18 samples, 0.09%)</title><rect x="57.0641%" y="197" width="0.0863%" height="15" fill="rgb(234,103,6)" fg:x="11903" fg:w="18"/><text x="57.3141%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.08%)</title><rect x="57.0737%" y="181" width="0.0767%" height="15" fill="rgb(227,97,0)" fg:x="11905" fg:w="16"/><text x="57.3237%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15 samples, 0.07%)</title><rect x="57.0785%" y="165" width="0.0719%" height="15" fill="rgb(234,150,53)" fg:x="11906" fg:w="15"/><text x="57.3285%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.01%)</title><rect x="57.1360%" y="149" width="0.0144%" height="15" fill="rgb(228,201,54)" fg:x="11918" fg:w="3"/><text x="57.3860%" y="159.50"></text></g><g><title>jwtd`alloc::str::join_generic_copy (34 samples, 0.16%)</title><rect x="57.0114%" y="229" width="0.1630%" height="15" fill="rgb(222,22,37)" fg:x="11892" fg:w="34"/><text x="57.2614%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="57.1504%" y="213" width="0.0240%" height="15" fill="rgb(237,53,32)" fg:x="11921" fg:w="5"/><text x="57.4004%" y="223.50"></text></g><g><title>jwtd`__rdl_dealloc (3 samples, 0.01%)</title><rect x="57.1935%" y="213" width="0.0144%" height="15" fill="rgb(233,25,53)" fg:x="11930" fg:w="3"/><text x="57.4435%" y="223.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;ring::rsa::signing::RsaKeyPair&gt; (3 samples, 0.01%)</title><rect x="57.2175%" y="213" width="0.0144%" height="15" fill="rgb(210,40,34)" fg:x="11935" fg:w="3"/><text x="57.4675%" y="223.50"></text></g><g><title>jwtd`&lt;ring::rsa::padding::PKCS1 as ring::rsa::padding::Padding&gt;::digest_alg (3 samples, 0.01%)</title><rect x="57.2894%" y="197" width="0.0144%" height="15" fill="rgb(241,220,44)" fg:x="11950" fg:w="3"/><text x="57.5394%" y="207.50"></text></g><g><title>jwtd`GFp_bn_mul_mont (4 samples, 0.02%)</title><rect x="57.3134%" y="197" width="0.0192%" height="15" fill="rgb(235,28,35)" fg:x="11955" fg:w="4"/><text x="57.5634%" y="207.50"></text></g><g><title>jwtd`LIMBS_equal (3 samples, 0.01%)</title><rect x="57.3374%" y="197" width="0.0144%" height="15" fill="rgb(210,56,17)" fg:x="11960" fg:w="3"/><text x="57.5874%" y="207.50"></text></g><g><title>jwtd`__rdl_dealloc (5 samples, 0.02%)</title><rect x="57.3565%" y="197" width="0.0240%" height="15" fill="rgb(224,130,29)" fg:x="11964" fg:w="5"/><text x="57.6065%" y="207.50"></text></g><g><title>jwtd`base64::encode::encode_with_padding (40 samples, 0.19%)</title><rect x="57.3949%" y="181" width="0.1918%" height="15" fill="rgb(235,212,8)" fg:x="11972" fg:w="40"/><text x="57.6449%" y="191.50"></text></g><g><title>jwtd`core::str::converts::from_utf8 (11 samples, 0.05%)</title><rect x="57.5867%" y="181" width="0.0527%" height="15" fill="rgb(223,33,50)" fg:x="12012" fg:w="11"/><text x="57.8367%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_calloc (3 samples, 0.01%)</title><rect x="57.6394%" y="165" width="0.0144%" height="15" fill="rgb(219,149,13)" fg:x="12023" fg:w="3"/><text x="57.8894%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.01%)</title><rect x="57.6969%" y="117" width="0.0144%" height="15" fill="rgb(250,156,29)" fg:x="12035" fg:w="3"/><text x="57.9469%" y="127.50"></text></g><g><title>jwtd`base64::encode::encode_config (71 samples, 0.34%)</title><rect x="57.3805%" y="197" width="0.3404%" height="15" fill="rgb(216,193,19)" fg:x="11969" fg:w="71"/><text x="57.6305%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`calloc (17 samples, 0.08%)</title><rect x="57.6394%" y="181" width="0.0815%" height="15" fill="rgb(216,135,14)" fg:x="12023" fg:w="17"/><text x="57.8894%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (14 samples, 0.07%)</title><rect x="57.6538%" y="165" width="0.0671%" height="15" fill="rgb(241,47,5)" fg:x="12026" fg:w="14"/><text x="57.9038%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.06%)</title><rect x="57.6634%" y="149" width="0.0575%" height="15" fill="rgb(233,42,35)" fg:x="12028" fg:w="12"/><text x="57.9134%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.06%)</title><rect x="57.6634%" y="133" width="0.0575%" height="15" fill="rgb(231,13,6)" fg:x="12028" fg:w="12"/><text x="57.9134%" y="143.50"></text></g><g><title>jwtd`base64::encode::encoded_size (3 samples, 0.01%)</title><rect x="57.7305%" y="197" width="0.0144%" height="15" fill="rgb(207,181,40)" fg:x="12042" fg:w="3"/><text x="57.9805%" y="207.50"></text></g><g><title>jwtd`bn_mul4x_mont (12 samples, 0.06%)</title><rect x="57.7449%" y="197" width="0.0575%" height="15" fill="rgb(254,173,49)" fg:x="12045" fg:w="12"/><text x="57.9949%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="57.8168%" y="181" width="0.0144%" height="15" fill="rgb(221,1,38)" fg:x="12060" fg:w="3"/><text x="58.0668%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.02%)</title><rect x="57.8839%" y="165" width="0.0240%" height="15" fill="rgb(206,124,46)" fg:x="12074" fg:w="5"/><text x="58.1339%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (35 samples, 0.17%)</title><rect x="57.8312%" y="181" width="0.1678%" height="15" fill="rgb(249,21,11)" fg:x="12063" fg:w="35"/><text x="58.0812%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (19 samples, 0.09%)</title><rect x="57.9079%" y="165" width="0.0911%" height="15" fill="rgb(222,201,40)" fg:x="12079" fg:w="19"/><text x="58.1579%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.02%)</title><rect x="58.1811%" y="165" width="0.0192%" height="15" fill="rgb(235,61,29)" fg:x="12136" fg:w="4"/><text x="58.4311%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (118 samples, 0.57%)</title><rect x="57.9989%" y="181" width="0.5657%" height="15" fill="rgb(219,207,3)" fg:x="12098" fg:w="118"/><text x="58.2489%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (74 samples, 0.35%)</title><rect x="58.2099%" y="165" width="0.3548%" height="15" fill="rgb(222,56,46)" fg:x="12142" fg:w="74"/><text x="58.4599%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (30 samples, 0.14%)</title><rect x="58.4208%" y="149" width="0.1438%" height="15" fill="rgb(239,76,54)" fg:x="12186" fg:w="30"/><text x="58.6708%" y="159.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;ring::rsa::signing::RsaKeyPair&gt; (161 samples, 0.77%)</title><rect x="57.8024%" y="197" width="0.7718%" height="15" fill="rgb(231,124,27)" fg:x="12057" fg:w="161"/><text x="58.0524%" y="207.50"></text></g><g><title>jwtd`&lt;ring::arithmetic::bigint::Elem&lt;M,E&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="58.6749%" y="165" width="0.0144%" height="15" fill="rgb(249,195,6)" fg:x="12239" fg:w="3"/><text x="58.9249%" y="175.50"></text></g><g><title>jwtd`LIMBS_less_than (3 samples, 0.01%)</title><rect x="58.6893%" y="165" width="0.0144%" height="15" fill="rgb(237,174,47)" fg:x="12242" fg:w="3"/><text x="58.9393%" y="175.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Nonnegative::from_be_bytes_with_bit_length (5 samples, 0.02%)</title><rect x="58.7133%" y="165" width="0.0240%" height="15" fill="rgb(206,201,31)" fg:x="12247" fg:w="5"/><text x="58.9633%" y="175.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::elem_mul (7 samples, 0.03%)</title><rect x="58.7468%" y="165" width="0.0336%" height="15" fill="rgb(231,57,52)" fg:x="12254" fg:w="7"/><text x="58.9968%" y="175.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::verify_inverses_consttime (3 samples, 0.01%)</title><rect x="58.7804%" y="165" width="0.0144%" height="15" fill="rgb(248,177,22)" fg:x="12261" fg:w="3"/><text x="59.0304%" y="175.50"></text></g><g><title>jwtd`ring::io::der::positive_integer (3 samples, 0.01%)</title><rect x="58.7948%" y="165" width="0.0144%" height="15" fill="rgb(215,211,37)" fg:x="12264" fg:w="3"/><text x="59.0448%" y="175.50"></text></g><g><title>jwtd`ring::io::der::read_tag_and_get_value (6 samples, 0.03%)</title><rect x="58.8091%" y="165" width="0.0288%" height="15" fill="rgb(241,128,51)" fg:x="12267" fg:w="6"/><text x="59.0591%" y="175.50"></text></g><g><title>jwtd`ring::rsa::signing::PrivatePrime&lt;M&gt;::new (4 samples, 0.02%)</title><rect x="58.8379%" y="165" width="0.0192%" height="15" fill="rgb(227,165,31)" fg:x="12273" fg:w="4"/><text x="59.0879%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.02%)</title><rect x="59.0728%" y="69" width="0.0192%" height="15" fill="rgb(228,167,24)" fg:x="12322" fg:w="4"/><text x="59.3228%" y="79.50"></text></g><g><title>jwtd`&lt;ring::arithmetic::bigint::Elem&lt;M,E&gt; as core::clone::Clone&gt;::clone (17 samples, 0.08%)</title><rect x="59.0297%" y="149" width="0.0815%" height="15" fill="rgb(228,143,12)" fg:x="12313" fg:w="17"/><text x="59.2797%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (17 samples, 0.08%)</title><rect x="59.0297%" y="133" width="0.0815%" height="15" fill="rgb(249,149,8)" fg:x="12313" fg:w="17"/><text x="59.2797%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (15 samples, 0.07%)</title><rect x="59.0393%" y="117" width="0.0719%" height="15" fill="rgb(243,35,44)" fg:x="12315" fg:w="15"/><text x="59.2893%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.07%)</title><rect x="59.0393%" y="101" width="0.0719%" height="15" fill="rgb(246,89,9)" fg:x="12315" fg:w="15"/><text x="59.2893%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15 samples, 0.07%)</title><rect x="59.0393%" y="85" width="0.0719%" height="15" fill="rgb(233,213,13)" fg:x="12315" fg:w="15"/><text x="59.2893%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.01%)</title><rect x="59.0968%" y="69" width="0.0144%" height="15" fill="rgb(233,141,41)" fg:x="12327" fg:w="3"/><text x="59.3468%" y="79.50"></text></g><g><title>jwtd`GFp_bn_mul_mont (6 samples, 0.03%)</title><rect x="59.1256%" y="149" width="0.0288%" height="15" fill="rgb(239,167,4)" fg:x="12333" fg:w="6"/><text x="59.3756%" y="159.50"></text></g><g><title>jwtd`LIMBS_are_zero (8 samples, 0.04%)</title><rect x="59.1687%" y="149" width="0.0384%" height="15" fill="rgb(209,217,16)" fg:x="12342" fg:w="8"/><text x="59.4187%" y="159.50"></text></g><g><title>jwtd`LIMBS_less_than (17 samples, 0.08%)</title><rect x="59.2071%" y="149" width="0.0815%" height="15" fill="rgb(219,88,35)" fg:x="12350" fg:w="17"/><text x="59.4571%" y="159.50"></text></g><g><title>jwtd`LIMB_shr (4 samples, 0.02%)</title><rect x="59.3029%" y="149" width="0.0192%" height="15" fill="rgb(220,193,23)" fg:x="12370" fg:w="4"/><text x="59.5529%" y="159.50"></text></g><g><title>jwtd`__rdl_alloc_zeroed (3 samples, 0.01%)</title><rect x="59.3317%" y="149" width="0.0144%" height="15" fill="rgb(230,90,52)" fg:x="12376" fg:w="3"/><text x="59.5817%" y="159.50"></text></g><g><title>jwtd`__rust_alloc (3 samples, 0.01%)</title><rect x="59.3557%" y="149" width="0.0144%" height="15" fill="rgb(252,106,19)" fg:x="12381" fg:w="3"/><text x="59.6057%" y="159.50"></text></g><g><title>jwtd`bn_sqr8x_mont (7 samples, 0.03%)</title><rect x="59.3892%" y="149" width="0.0336%" height="15" fill="rgb(206,74,20)" fg:x="12388" fg:w="7"/><text x="59.6392%" y="159.50"></text></g><g><title>jwtd`LIMBS_less_than (4 samples, 0.02%)</title><rect x="59.5522%" y="133" width="0.0192%" height="15" fill="rgb(230,138,44)" fg:x="12422" fg:w="4"/><text x="59.8022%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="59.6146%" y="69" width="0.0144%" height="15" fill="rgb(235,182,43)" fg:x="12435" fg:w="3"/><text x="59.8646%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`calloc (13 samples, 0.06%)</title><rect x="59.5714%" y="133" width="0.0623%" height="15" fill="rgb(242,16,51)" fg:x="12426" fg:w="13"/><text x="59.8214%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (12 samples, 0.06%)</title><rect x="59.5762%" y="117" width="0.0575%" height="15" fill="rgb(248,9,4)" fg:x="12427" fg:w="12"/><text x="59.8262%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.05%)</title><rect x="59.5810%" y="101" width="0.0527%" height="15" fill="rgb(210,31,22)" fg:x="12428" fg:w="11"/><text x="59.8310%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.05%)</title><rect x="59.5810%" y="85" width="0.0527%" height="15" fill="rgb(239,54,39)" fg:x="12428" fg:w="11"/><text x="59.8310%" y="95.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::BoxedLimbs&lt;M&gt;::from_be_bytes_padded_less_than (46 samples, 0.22%)</title><rect x="59.4228%" y="149" width="0.2205%" height="15" fill="rgb(230,99,41)" fg:x="12395" fg:w="46"/><text x="59.6728%" y="159.50"></text></g><g><title>jwtd`GFp_bn_neg_inv_mod_r_u64 (12 samples, 0.06%)</title><rect x="59.7152%" y="133" width="0.0575%" height="15" fill="rgb(253,106,12)" fg:x="12456" fg:w="12"/><text x="59.9652%" y="143.50"></text></g><g><title>jwtd`LIMBS_less_than_limb (9 samples, 0.04%)</title><rect x="59.7728%" y="133" width="0.0431%" height="15" fill="rgb(213,46,41)" fg:x="12468" fg:w="9"/><text x="60.0228%" y="143.50"></text></g><g><title>jwtd`LIMBS_shl_mod (41 samples, 0.20%)</title><rect x="59.8159%" y="133" width="0.1966%" height="15" fill="rgb(215,133,35)" fg:x="12477" fg:w="41"/><text x="60.0659%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`calloc (10 samples, 0.05%)</title><rect x="60.0125%" y="133" width="0.0479%" height="15" fill="rgb(213,28,5)" fg:x="12518" fg:w="10"/><text x="60.2625%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (9 samples, 0.04%)</title><rect x="60.0173%" y="117" width="0.0431%" height="15" fill="rgb(215,77,49)" fg:x="12519" fg:w="9"/><text x="60.2673%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.04%)</title><rect x="60.0221%" y="101" width="0.0384%" height="15" fill="rgb(248,100,22)" fg:x="12520" fg:w="8"/><text x="60.2721%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.03%)</title><rect x="60.0268%" y="85" width="0.0336%" height="15" fill="rgb(208,67,9)" fg:x="12521" fg:w="7"/><text x="60.2768%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.03%)</title><rect x="60.0700%" y="133" width="0.0336%" height="15" fill="rgb(219,133,21)" fg:x="12530" fg:w="7"/><text x="60.3200%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.02%)</title><rect x="60.0844%" y="117" width="0.0192%" height="15" fill="rgb(246,46,29)" fg:x="12533" fg:w="4"/><text x="60.3344%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.10%)</title><rect x="60.1036%" y="133" width="0.0959%" height="15" fill="rgb(246,185,52)" fg:x="12537" fg:w="20"/><text x="60.3536%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.07%)</title><rect x="60.1323%" y="117" width="0.0671%" height="15" fill="rgb(252,136,11)" fg:x="12543" fg:w="14"/><text x="60.3823%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.02%)</title><rect x="60.1755%" y="101" width="0.0240%" height="15" fill="rgb(219,138,53)" fg:x="12552" fg:w="5"/><text x="60.4255%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.02%)</title><rect x="60.2761%" y="69" width="0.0192%" height="15" fill="rgb(211,51,23)" fg:x="12573" fg:w="4"/><text x="60.5261%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (26 samples, 0.12%)</title><rect x="60.2138%" y="101" width="0.1246%" height="15" fill="rgb(247,221,28)" fg:x="12560" fg:w="26"/><text x="60.4638%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (26 samples, 0.12%)</title><rect x="60.2138%" y="85" width="0.1246%" height="15" fill="rgb(251,222,45)" fg:x="12560" fg:w="26"/><text x="60.4638%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.04%)</title><rect x="60.2953%" y="69" width="0.0431%" height="15" fill="rgb(217,162,53)" fg:x="12577" fg:w="9"/><text x="60.5453%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (30 samples, 0.14%)</title><rect x="60.2042%" y="117" width="0.1438%" height="15" fill="rgb(229,93,14)" fg:x="12558" fg:w="30"/><text x="60.4542%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc (32 samples, 0.15%)</title><rect x="60.1994%" y="133" width="0.1534%" height="15" fill="rgb(209,67,49)" fg:x="12557" fg:w="32"/><text x="60.4494%" y="143.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Elem&lt;M&gt;::into_modulus (153 samples, 0.73%)</title><rect x="59.6433%" y="149" width="0.7335%" height="15" fill="rgb(213,87,29)" fg:x="12441" fg:w="153"/><text x="59.8933%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="60.3624%" y="133" width="0.0144%" height="15" fill="rgb(205,151,52)" fg:x="12591" fg:w="3"/><text x="60.6124%" y="143.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Modulus&lt;M&gt;::from_be_bytes_with_bit_length (3 samples, 0.01%)</title><rect x="60.3768%" y="149" width="0.0144%" height="15" fill="rgb(253,215,39)" fg:x="12594" fg:w="3"/><text x="60.6268%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="60.4487%" y="69" width="0.0144%" height="15" fill="rgb(221,220,41)" fg:x="12609" fg:w="3"/><text x="60.6987%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc (15 samples, 0.07%)</title><rect x="60.4104%" y="133" width="0.0719%" height="15" fill="rgb(218,133,21)" fg:x="12601" fg:w="15"/><text x="60.6604%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (14 samples, 0.07%)</title><rect x="60.4152%" y="117" width="0.0671%" height="15" fill="rgb(221,193,43)" fg:x="12602" fg:w="14"/><text x="60.6652%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.07%)</title><rect x="60.4152%" y="101" width="0.0671%" height="15" fill="rgb(240,128,52)" fg:x="12602" fg:w="14"/><text x="60.6652%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.06%)</title><rect x="60.4200%" y="85" width="0.0623%" height="15" fill="rgb(253,114,12)" fg:x="12603" fg:w="13"/><text x="60.6700%" y="95.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Modulus&lt;M&gt;::to_elem (18 samples, 0.09%)</title><rect x="60.4008%" y="149" width="0.0863%" height="15" fill="rgb(215,223,47)" fg:x="12599" fg:w="18"/><text x="60.6508%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_calloc (3 samples, 0.01%)</title><rect x="60.9953%" y="101" width="0.0144%" height="15" fill="rgb(248,225,23)" fg:x="12723" fg:w="3"/><text x="61.2453%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.02%)</title><rect x="61.0815%" y="69" width="0.0240%" height="15" fill="rgb(250,108,0)" fg:x="12741" fg:w="5"/><text x="61.3315%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`calloc (33 samples, 0.16%)</title><rect x="60.9617%" y="133" width="0.1582%" height="15" fill="rgb(228,208,7)" fg:x="12716" fg:w="33"/><text x="61.2117%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (31 samples, 0.15%)</title><rect x="60.9713%" y="117" width="0.1486%" height="15" fill="rgb(244,45,10)" fg:x="12718" fg:w="31"/><text x="61.2213%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.11%)</title><rect x="61.0096%" y="101" width="0.1103%" height="15" fill="rgb(207,125,25)" fg:x="12726" fg:w="23"/><text x="61.2596%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.10%)</title><rect x="61.0240%" y="85" width="0.0959%" height="15" fill="rgb(210,195,18)" fg:x="12729" fg:w="20"/><text x="61.2740%" y="95.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Nonnegative::from_be_bytes_with_bit_length (136 samples, 0.65%)</title><rect x="60.4871%" y="149" width="0.6520%" height="15" fill="rgb(249,80,12)" fg:x="12617" fg:w="136"/><text x="60.7371%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (4 samples, 0.02%)</title><rect x="61.1199%" y="133" width="0.0192%" height="15" fill="rgb(221,65,9)" fg:x="12749" fg:w="4"/><text x="61.3699%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.02%)</title><rect x="61.2158%" y="69" width="0.0240%" height="15" fill="rgb(235,49,36)" fg:x="12769" fg:w="5"/><text x="61.4658%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.08%)</title><rect x="61.1966%" y="85" width="0.0767%" height="15" fill="rgb(225,32,20)" fg:x="12765" fg:w="16"/><text x="61.4466%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="61.2589%" y="69" width="0.0144%" height="15" fill="rgb(215,141,46)" fg:x="12778" fg:w="3"/><text x="61.5089%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`calloc (25 samples, 0.12%)</title><rect x="61.1583%" y="133" width="0.1199%" height="15" fill="rgb(250,160,47)" fg:x="12757" fg:w="25"/><text x="61.4083%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (21 samples, 0.10%)</title><rect x="61.1774%" y="117" width="0.1007%" height="15" fill="rgb(216,222,40)" fg:x="12761" fg:w="21"/><text x="61.4274%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.09%)</title><rect x="61.1870%" y="101" width="0.0911%" height="15" fill="rgb(234,217,39)" fg:x="12763" fg:w="19"/><text x="61.4370%" y="111.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Nonnegative::to_elem (32 samples, 0.15%)</title><rect x="61.1391%" y="149" width="0.1534%" height="15" fill="rgb(207,178,40)" fg:x="12753" fg:w="32"/><text x="61.3891%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="61.2781%" y="133" width="0.0144%" height="15" fill="rgb(221,136,13)" fg:x="12782" fg:w="3"/><text x="61.5281%" y="143.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::PrivateExponent&lt;M&gt;::from_be_bytes_padded (3 samples, 0.01%)</title><rect x="61.2925%" y="149" width="0.0144%" height="15" fill="rgb(249,199,10)" fg:x="12785" fg:w="3"/><text x="61.5425%" y="159.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::elem_mul (3 samples, 0.01%)</title><rect x="61.3069%" y="149" width="0.0144%" height="15" fill="rgb(249,222,13)" fg:x="12788" fg:w="3"/><text x="61.5569%" y="159.50"></text></g><g><title>jwtd`LIMBS_equal_limb (8 samples, 0.04%)</title><rect x="61.3260%" y="133" width="0.0384%" height="15" fill="rgb(244,185,38)" fg:x="12792" fg:w="8"/><text x="61.5760%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.02%)</title><rect x="61.3788%" y="133" width="0.0240%" height="15" fill="rgb(236,202,9)" fg:x="12803" fg:w="5"/><text x="61.6288%" y="143.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::verify_inverses_consttime (18 samples, 0.09%)</title><rect x="61.3213%" y="149" width="0.0863%" height="15" fill="rgb(250,229,37)" fg:x="12791" fg:w="18"/><text x="61.5713%" y="159.50"></text></g><g><title>jwtd`ring::io::der::positive_integer (9 samples, 0.04%)</title><rect x="61.4075%" y="149" width="0.0431%" height="15" fill="rgb(206,174,23)" fg:x="12809" fg:w="9"/><text x="61.6575%" y="159.50"></text></g><g><title>jwtd`ring::io::der::read_tag_and_get_value (5 samples, 0.02%)</title><rect x="61.4507%" y="149" width="0.0240%" height="15" fill="rgb(211,33,43)" fg:x="12818" fg:w="5"/><text x="61.7007%" y="159.50"></text></g><g><title>jwtd`ring::io::der_writer::write_all (4 samples, 0.02%)</title><rect x="61.4747%" y="149" width="0.0192%" height="15" fill="rgb(245,58,50)" fg:x="12823" fg:w="4"/><text x="61.7247%" y="159.50"></text></g><g><title>jwtd`GFp_bn_mul_mont (3 samples, 0.01%)</title><rect x="61.5514%" y="133" width="0.0144%" height="15" fill="rgb(244,68,36)" fg:x="12839" fg:w="3"/><text x="61.8014%" y="143.50"></text></g><g><title>jwtd`LIMBS_are_even (3 samples, 0.01%)</title><rect x="61.5705%" y="133" width="0.0144%" height="15" fill="rgb(232,229,15)" fg:x="12843" fg:w="3"/><text x="61.8205%" y="143.50"></text></g><g><title>jwtd`bn_sqr8x_mont (7 samples, 0.03%)</title><rect x="61.6137%" y="133" width="0.0336%" height="15" fill="rgb(254,30,23)" fg:x="12852" fg:w="7"/><text x="61.8637%" y="143.50"></text></g><g><title>jwtd`LIMBS_less_than (3 samples, 0.01%)</title><rect x="61.7527%" y="117" width="0.0144%" height="15" fill="rgb(235,160,14)" fg:x="12881" fg:w="3"/><text x="62.0027%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`calloc (4 samples, 0.02%)</title><rect x="61.7671%" y="117" width="0.0192%" height="15" fill="rgb(212,155,44)" fg:x="12884" fg:w="4"/><text x="62.0171%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (3 samples, 0.01%)</title><rect x="61.7719%" y="101" width="0.0144%" height="15" fill="rgb(226,2,50)" fg:x="12885" fg:w="3"/><text x="62.0219%" y="111.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::BoxedLimbs&lt;M&gt;::from_be_bytes_padded_less_than (31 samples, 0.15%)</title><rect x="61.6473%" y="133" width="0.1486%" height="15" fill="rgb(234,177,6)" fg:x="12859" fg:w="31"/><text x="61.8973%" y="143.50"></text></g><g><title>jwtd`GFp_bn_neg_inv_mod_r_u64 (44 samples, 0.21%)</title><rect x="61.8917%" y="117" width="0.2109%" height="15" fill="rgb(217,24,9)" fg:x="12910" fg:w="44"/><text x="62.1417%" y="127.50"></text></g><g><title>jwtd`LIMBS_less_than_limb (13 samples, 0.06%)</title><rect x="62.1027%" y="117" width="0.0623%" height="15" fill="rgb(220,13,46)" fg:x="12954" fg:w="13"/><text x="62.3527%" y="127.50"></text></g><g><title>jwtd`LIMBS_shl_mod (50 samples, 0.24%)</title><rect x="62.1650%" y="117" width="0.2397%" height="15" fill="rgb(239,221,27)" fg:x="12967" fg:w="50"/><text x="62.4150%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.01%)</title><rect x="62.4766%" y="53" width="0.0144%" height="15" fill="rgb(222,198,25)" fg:x="13032" fg:w="3"/><text x="62.7266%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (15 samples, 0.07%)</title><rect x="62.4287%" y="101" width="0.0719%" height="15" fill="rgb(211,99,13)" fg:x="13022" fg:w="15"/><text x="62.6787%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.07%)</title><rect x="62.4335%" y="85" width="0.0671%" height="15" fill="rgb(232,111,31)" fg:x="13023" fg:w="14"/><text x="62.6835%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.07%)</title><rect x="62.4335%" y="69" width="0.0671%" height="15" fill="rgb(245,82,37)" fg:x="13023" fg:w="14"/><text x="62.6835%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`calloc (19 samples, 0.09%)</title><rect x="62.4143%" y="117" width="0.0911%" height="15" fill="rgb(227,149,46)" fg:x="13019" fg:w="19"/><text x="62.6643%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.04%)</title><rect x="62.5102%" y="117" width="0.0384%" height="15" fill="rgb(218,36,50)" fg:x="13039" fg:w="8"/><text x="62.7602%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.01%)</title><rect x="62.5342%" y="101" width="0.0144%" height="15" fill="rgb(226,80,48)" fg:x="13044" fg:w="3"/><text x="62.7842%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.01%)</title><rect x="62.5485%" y="117" width="0.0144%" height="15" fill="rgb(238,224,15)" fg:x="13047" fg:w="3"/><text x="62.7985%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.02%)</title><rect x="62.5917%" y="53" width="0.0192%" height="15" fill="rgb(241,136,10)" fg:x="13056" fg:w="4"/><text x="62.8417%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (17 samples, 0.08%)</title><rect x="62.5677%" y="101" width="0.0815%" height="15" fill="rgb(208,32,45)" fg:x="13051" fg:w="17"/><text x="62.8177%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.08%)</title><rect x="62.5677%" y="85" width="0.0815%" height="15" fill="rgb(207,135,9)" fg:x="13051" fg:w="17"/><text x="62.8177%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.08%)</title><rect x="62.5725%" y="69" width="0.0767%" height="15" fill="rgb(206,86,44)" fg:x="13052" fg:w="16"/><text x="62.8225%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.04%)</title><rect x="62.6109%" y="53" width="0.0384%" height="15" fill="rgb(245,177,15)" fg:x="13060" fg:w="8"/><text x="62.8609%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc (19 samples, 0.09%)</title><rect x="62.5629%" y="117" width="0.0911%" height="15" fill="rgb(206,64,50)" fg:x="13050" fg:w="19"/><text x="62.8129%" y="127.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Modulus&lt;M&gt;::from_nonnegative_with_bit_length (183 samples, 0.88%)</title><rect x="61.7959%" y="133" width="0.8773%" height="15" fill="rgb(234,36,40)" fg:x="12890" fg:w="183"/><text x="62.0459%" y="143.50"></text></g><g><title>jwtd`LIMBS_less_than (4 samples, 0.02%)</title><rect x="62.7978%" y="117" width="0.0192%" height="15" fill="rgb(213,64,8)" fg:x="13099" fg:w="4"/><text x="63.0478%" y="127.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::PrivateExponent&lt;M&gt;::from_be_bytes_padded (38 samples, 0.18%)</title><rect x="62.6732%" y="133" width="0.1822%" height="15" fill="rgb(210,75,36)" fg:x="13073" fg:w="38"/><text x="62.9232%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`calloc (6 samples, 0.03%)</title><rect x="62.8266%" y="117" width="0.0288%" height="15" fill="rgb(229,88,21)" fg:x="13105" fg:w="6"/><text x="63.0766%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (6 samples, 0.03%)</title><rect x="62.8266%" y="101" width="0.0288%" height="15" fill="rgb(252,204,47)" fg:x="13105" fg:w="6"/><text x="63.0766%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.02%)</title><rect x="62.8314%" y="85" width="0.0240%" height="15" fill="rgb(208,77,27)" fg:x="13106" fg:w="5"/><text x="63.0814%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.02%)</title><rect x="62.8314%" y="69" width="0.0240%" height="15" fill="rgb(221,76,26)" fg:x="13106" fg:w="5"/><text x="63.0814%" y="79.50"></text></g><g><title>jwtd`ring::rsa::signing::PrivatePrime&lt;M&gt;::new (288 samples, 1.38%)</title><rect x="61.4938%" y="149" width="1.3807%" height="15" fill="rgb(225,139,18)" fg:x="12827" fg:w="288"/><text x="61.7438%" y="159.50"></text></g><g><title>jwtd`&lt;ring::io::writer::Writer as ring::io::writer::Accumulator&gt;::write_byte (5 samples, 0.02%)</title><rect x="62.8841%" y="133" width="0.0240%" height="15" fill="rgb(230,137,11)" fg:x="13117" fg:w="5"/><text x="63.1341%" y="143.50"></text></g><g><title>jwtd`alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (3 samples, 0.01%)</title><rect x="62.9512%" y="117" width="0.0144%" height="15" fill="rgb(212,28,1)" fg:x="13131" fg:w="3"/><text x="63.2012%" y="127.50"></text></g><g><title>jwtd`ring::io::der_writer::write_positive_integer (13 samples, 0.06%)</title><rect x="62.9656%" y="117" width="0.0623%" height="15" fill="rgb(248,164,17)" fg:x="13134" fg:w="13"/><text x="63.2156%" y="127.50"></text></g><g><title>jwtd`&lt;ring::io::writer::Writer as ring::io::writer::Accumulator&gt;::write_bytes (3 samples, 0.01%)</title><rect x="63.0136%" y="101" width="0.0144%" height="15" fill="rgb(222,171,42)" fg:x="13144" fg:w="3"/><text x="63.2636%" y="111.50"></text></g><g><title>jwtd`&lt;ring::io::writer::LengthMeasurement as ring::io::writer::Accumulator&gt;::write_byte (6 samples, 0.03%)</title><rect x="63.0279%" y="101" width="0.0288%" height="15" fill="rgb(243,84,45)" fg:x="13147" fg:w="6"/><text x="63.2779%" y="111.50"></text></g><g><title>jwtd`ring::rsa::signing::RsaSubjectPublicKey::from_n_and_e::_{{closure}} (19 samples, 0.09%)</title><rect x="63.0279%" y="117" width="0.0911%" height="15" fill="rgb(252,49,23)" fg:x="13147" fg:w="19"/><text x="63.2779%" y="127.50"></text></g><g><title>jwtd`ring::io::der_writer::write_positive_integer (10 samples, 0.05%)</title><rect x="63.0711%" y="101" width="0.0479%" height="15" fill="rgb(215,19,7)" fg:x="13156" fg:w="10"/><text x="63.3211%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.02%)</title><rect x="63.1190%" y="85" width="0.0240%" height="15" fill="rgb(238,81,41)" fg:x="13166" fg:w="5"/><text x="63.3690%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.02%)</title><rect x="63.1238%" y="69" width="0.0192%" height="15" fill="rgb(210,199,37)" fg:x="13167" fg:w="4"/><text x="63.3738%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (6 samples, 0.03%)</title><rect x="63.1190%" y="101" width="0.0288%" height="15" fill="rgb(244,192,49)" fg:x="13166" fg:w="6"/><text x="63.3690%" y="111.50"></text></g><g><title>jwtd`ring::io::der_writer::write_all (50 samples, 0.24%)</title><rect x="62.9129%" y="133" width="0.2397%" height="15" fill="rgb(226,211,11)" fg:x="13123" fg:w="50"/><text x="63.1629%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.03%)</title><rect x="63.1190%" y="117" width="0.0336%" height="15" fill="rgb(236,162,54)" fg:x="13166" fg:w="7"/><text x="63.3690%" y="127.50"></text></g><g><title>jwtd`ring::rsa::signing::RsaSubjectPublicKey::from_n_and_e (62 samples, 0.30%)</title><rect x="62.8745%" y="149" width="0.2972%" height="15" fill="rgb(220,229,9)" fg:x="13115" fg:w="62"/><text x="63.1245%" y="159.50"></text></g><g><title>jwtd`ring::rsa::signing::RsaSubjectPublicKey::from_n_and_e::_{{closure}} (3 samples, 0.01%)</title><rect x="63.1574%" y="133" width="0.0144%" height="15" fill="rgb(250,87,22)" fg:x="13174" fg:w="3"/><text x="63.4074%" y="143.50"></text></g><g><title>jwtd`LIMBS_are_even (4 samples, 0.02%)</title><rect x="63.1957%" y="133" width="0.0192%" height="15" fill="rgb(239,43,17)" fg:x="13182" fg:w="4"/><text x="63.4457%" y="143.50"></text></g><g><title>jwtd`GFp_bn_mul_mont (4 samples, 0.02%)</title><rect x="63.5217%" y="117" width="0.0192%" height="15" fill="rgb(231,177,25)" fg:x="13250" fg:w="4"/><text x="63.7717%" y="127.50"></text></g><g><title>jwtd`GFp_bn_neg_inv_mod_r_u64 (15 samples, 0.07%)</title><rect x="63.5409%" y="117" width="0.0719%" height="15" fill="rgb(219,179,1)" fg:x="13254" fg:w="15"/><text x="63.7909%" y="127.50"></text></g><g><title>jwtd`LIMBS_less_than_limb (9 samples, 0.04%)</title><rect x="63.6128%" y="117" width="0.0431%" height="15" fill="rgb(238,219,53)" fg:x="13269" fg:w="9"/><text x="63.8628%" y="127.50"></text></g><g><title>jwtd`LIMBS_shl_mod (62 samples, 0.30%)</title><rect x="63.6560%" y="117" width="0.2972%" height="15" fill="rgb(232,167,36)" fg:x="13278" fg:w="62"/><text x="63.9060%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.04%)</title><rect x="63.9964%" y="69" width="0.0431%" height="15" fill="rgb(244,19,51)" fg:x="13349" fg:w="9"/><text x="64.2464%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.03%)</title><rect x="64.0059%" y="53" width="0.0336%" height="15" fill="rgb(224,6,22)" fg:x="13351" fg:w="7"/><text x="64.2559%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (11 samples, 0.05%)</title><rect x="63.9916%" y="85" width="0.0527%" height="15" fill="rgb(224,145,5)" fg:x="13348" fg:w="11"/><text x="64.2416%" y="95.50"></text></g><g><title>jwtd`alloc::vec::from_elem (18 samples, 0.09%)</title><rect x="63.9628%" y="117" width="0.0863%" height="15" fill="rgb(234,130,49)" fg:x="13342" fg:w="18"/><text x="64.2128%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`calloc (12 samples, 0.06%)</title><rect x="63.9916%" y="101" width="0.0575%" height="15" fill="rgb(254,6,2)" fg:x="13348" fg:w="12"/><text x="64.2416%" y="111.50"></text></g><g><title>jwtd`bn_sqr8x_mont (10 samples, 0.05%)</title><rect x="64.0491%" y="117" width="0.0479%" height="15" fill="rgb(208,96,46)" fg:x="13360" fg:w="10"/><text x="64.2991%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.03%)</title><rect x="64.1354%" y="101" width="0.0288%" height="15" fill="rgb(239,3,39)" fg:x="13378" fg:w="6"/><text x="64.3854%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.01%)</title><rect x="64.1498%" y="85" width="0.0144%" height="15" fill="rgb(233,210,1)" fg:x="13381" fg:w="3"/><text x="64.3998%" y="95.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::elem_exp_vartime_ (21 samples, 0.10%)</title><rect x="64.0970%" y="117" width="0.1007%" height="15" fill="rgb(244,137,37)" fg:x="13370" fg:w="21"/><text x="64.3470%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.03%)</title><rect x="64.1641%" y="101" width="0.0336%" height="15" fill="rgb(240,136,2)" fg:x="13384" fg:w="7"/><text x="64.4141%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (7 samples, 0.03%)</title><rect x="64.1641%" y="85" width="0.0336%" height="15" fill="rgb(239,18,37)" fg:x="13384" fg:w="7"/><text x="64.4141%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.03%)</title><rect x="64.1641%" y="69" width="0.0336%" height="15" fill="rgb(218,185,22)" fg:x="13384" fg:w="7"/><text x="64.4141%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.03%)</title><rect x="64.1641%" y="53" width="0.0336%" height="15" fill="rgb(225,218,4)" fg:x="13384" fg:w="7"/><text x="64.4141%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.01%)</title><rect x="64.1833%" y="37" width="0.0144%" height="15" fill="rgb(230,182,32)" fg:x="13388" fg:w="3"/><text x="64.4333%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="64.2504%" y="53" width="0.0144%" height="15" fill="rgb(242,56,43)" fg:x="13402" fg:w="3"/><text x="64.5004%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`calloc (15 samples, 0.07%)</title><rect x="64.2025%" y="117" width="0.0719%" height="15" fill="rgb(233,99,24)" fg:x="13392" fg:w="15"/><text x="64.4525%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (15 samples, 0.07%)</title><rect x="64.2025%" y="101" width="0.0719%" height="15" fill="rgb(234,209,42)" fg:x="13392" fg:w="15"/><text x="64.4525%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.05%)</title><rect x="64.2217%" y="85" width="0.0527%" height="15" fill="rgb(227,7,12)" fg:x="13396" fg:w="11"/><text x="64.4717%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.05%)</title><rect x="64.2217%" y="69" width="0.0527%" height="15" fill="rgb(245,203,43)" fg:x="13396" fg:w="11"/><text x="64.4717%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.01%)</title><rect x="64.2792%" y="117" width="0.0144%" height="15" fill="rgb(238,205,33)" fg:x="13408" fg:w="3"/><text x="64.5292%" y="127.50"></text></g><g><title>jwtd`ring::rsa::verification::Key::from_modulus_and_exponent (237 samples, 1.14%)</title><rect x="63.1718%" y="149" width="1.1362%" height="15" fill="rgb(231,56,7)" fg:x="13177" fg:w="237"/><text x="63.4218%" y="159.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Modulus&lt;M&gt;::from_be_bytes_with_bit_length (221 samples, 1.06%)</title><rect x="63.2485%" y="133" width="1.0595%" height="15" fill="rgb(244,186,29)" fg:x="13193" fg:w="221"/><text x="63.4985%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`calloc (4 samples, 0.02%)</title><rect x="64.3080%" y="149" width="0.0192%" height="15" fill="rgb(234,111,31)" fg:x="13414" fg:w="4"/><text x="64.5580%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.06%)</title><rect x="64.3319%" y="149" width="0.0623%" height="15" fill="rgb(241,149,10)" fg:x="13419" fg:w="13"/><text x="64.5819%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.01%)</title><rect x="64.3799%" y="133" width="0.0144%" height="15" fill="rgb(249,206,44)" fg:x="13429" fg:w="3"/><text x="64.6299%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.09%)</title><rect x="64.3943%" y="149" width="0.0863%" height="15" fill="rgb(251,153,30)" fg:x="13432" fg:w="18"/><text x="64.6443%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.06%)</title><rect x="64.4182%" y="133" width="0.0623%" height="15" fill="rgb(239,152,38)" fg:x="13437" fg:w="13"/><text x="64.6682%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.01%)</title><rect x="64.4806%" y="149" width="0.0144%" height="15" fill="rgb(249,139,47)" fg:x="13450" fg:w="3"/><text x="64.7306%" y="159.50"></text></g><g><title>jwtd`ring::rsa::signing::RsaKeyPair::from_der_reader (1,184 samples, 5.68%)</title><rect x="58.8571%" y="165" width="5.6762%" height="15" fill="rgb(244,64,35)" fg:x="12277" fg:w="1184"/><text x="59.1071%" y="175.50">jwtd`ri..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="64.5093%" y="149" width="0.0240%" height="15" fill="rgb(216,46,15)" fg:x="13456" fg:w="5"/><text x="64.7593%" y="159.50"></text></g><g><title>jwtd`ring::rsa::signing::RsaSubjectPublicKey::from_n_and_e (3 samples, 0.01%)</title><rect x="64.5333%" y="165" width="0.0144%" height="15" fill="rgb(250,74,19)" fg:x="13461" fg:w="3"/><text x="64.7833%" y="175.50"></text></g><g><title>jwtd`untrusted::Input::read_all (1,243 samples, 5.96%)</title><rect x="58.6461%" y="181" width="5.9591%" height="15" fill="rgb(249,42,33)" fg:x="12233" fg:w="1243"/><text x="58.8961%" y="191.50">jwtd`unt..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.04%)</title><rect x="64.5669%" y="165" width="0.0384%" height="15" fill="rgb(242,149,17)" fg:x="13468" fg:w="8"/><text x="64.8169%" y="175.50"></text></g><g><title>jwtd`ring::rsa::signing::RsaKeyPair::from_der (1,252 samples, 6.00%)</title><rect x="58.6222%" y="197" width="6.0022%" height="15" fill="rgb(244,29,21)" fg:x="12228" fg:w="1252"/><text x="58.8722%" y="207.50">jwtd`rin..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.02%)</title><rect x="64.6052%" y="181" width="0.0192%" height="15" fill="rgb(220,130,37)" fg:x="13476" fg:w="4"/><text x="64.8552%" y="191.50"></text></g><g><title>jwtd`ring::rsa::signing::RsaKeyPair::public_modulus_len (8 samples, 0.04%)</title><rect x="64.6244%" y="197" width="0.0384%" height="15" fill="rgb(211,67,2)" fg:x="13480" fg:w="8"/><text x="64.8744%" y="207.50"></text></g><g><title>jwtd`untrusted::Input::read_all (4 samples, 0.02%)</title><rect x="64.6436%" y="181" width="0.0192%" height="15" fill="rgb(235,68,52)" fg:x="13484" fg:w="4"/><text x="64.8936%" y="191.50"></text></g><g><title>jwtd`&lt;ring::rsa::padding::PKCS1 as ring::rsa::padding::RsaEncoding&gt;::encode (21 samples, 0.10%)</title><rect x="64.8209%" y="181" width="0.1007%" height="15" fill="rgb(246,142,3)" fg:x="13521" fg:w="21"/><text x="65.0709%" y="191.50"></text></g><g><title>jwtd`ring::rsa::padding::pkcs1_encode (21 samples, 0.10%)</title><rect x="64.8209%" y="165" width="0.1007%" height="15" fill="rgb(241,25,7)" fg:x="13521" fg:w="21"/><text x="65.0709%" y="175.50"></text></g><g><title>jwtd`DYLD-STUB$$memcpy (3 samples, 0.01%)</title><rect x="64.9360%" y="181" width="0.0144%" height="15" fill="rgb(242,119,39)" fg:x="13545" fg:w="3"/><text x="65.1860%" y="191.50"></text></g><g><title>jwtd`GFp_bn_from_montgomery_in_place (180 samples, 0.86%)</title><rect x="64.9504%" y="181" width="0.8629%" height="15" fill="rgb(241,98,45)" fg:x="13548" fg:w="180"/><text x="65.2004%" y="191.50"></text></g><g><title>jwtd`GFp_limbs_mul_add_limb (144 samples, 0.69%)</title><rect x="65.1230%" y="165" width="0.6903%" height="15" fill="rgb(254,28,30)" fg:x="13584" fg:w="144"/><text x="65.3730%" y="175.50"></text></g><g><title>jwtd`GFp_bn_gather5 (520 samples, 2.49%)</title><rect x="65.8133%" y="181" width="2.4929%" height="15" fill="rgb(241,142,54)" fg:x="13728" fg:w="520"/><text x="66.0633%" y="191.50">jw..</text></g><g><title>jwtd`GFp_bn_mul_mont (9 samples, 0.04%)</title><rect x="68.3062%" y="181" width="0.0431%" height="15" fill="rgb(222,85,15)" fg:x="14248" fg:w="9"/><text x="68.5562%" y="191.50"></text></g><g><title>jwtd`GFp_bn_mul_mont_gather5 (6 samples, 0.03%)</title><rect x="68.3494%" y="181" width="0.0288%" height="15" fill="rgb(210,85,47)" fg:x="14257" fg:w="6"/><text x="68.5994%" y="191.50"></text></g><g><title>jwtd`GFp_bn_scatter5 (102 samples, 0.49%)</title><rect x="68.3782%" y="181" width="0.4890%" height="15" fill="rgb(224,206,25)" fg:x="14263" fg:w="102"/><text x="68.6282%" y="191.50"></text></g><g><title>jwtd`GFp_sha256_block_data_order_avx (5 samples, 0.02%)</title><rect x="68.8863%" y="181" width="0.0240%" height="15" fill="rgb(243,201,19)" fg:x="14369" fg:w="5"/><text x="69.1363%" y="191.50"></text></g><g><title>jwtd`LIMBS_add_mod (26 samples, 0.12%)</title><rect x="68.9103%" y="181" width="0.1246%" height="15" fill="rgb(236,59,4)" fg:x="14374" fg:w="26"/><text x="69.1603%" y="191.50"></text></g><g><title>jwtd`LIMBS_equal (15 samples, 0.07%)</title><rect x="69.0349%" y="181" width="0.0719%" height="15" fill="rgb(254,179,45)" fg:x="14400" fg:w="15"/><text x="69.2849%" y="191.50"></text></g><g><title>jwtd`LIMBS_sub_mod (10 samples, 0.05%)</title><rect x="69.1117%" y="181" width="0.0479%" height="15" fill="rgb(226,14,10)" fg:x="14416" fg:w="10"/><text x="69.3617%" y="191.50"></text></g><g><title>jwtd`__rdl_alloc_zeroed (4 samples, 0.02%)</title><rect x="69.1644%" y="181" width="0.0192%" height="15" fill="rgb(244,27,41)" fg:x="14427" fg:w="4"/><text x="69.4144%" y="191.50"></text></g><g><title>jwtd`__rdl_dealloc (7 samples, 0.03%)</title><rect x="69.1836%" y="181" width="0.0336%" height="15" fill="rgb(235,35,32)" fg:x="14431" fg:w="7"/><text x="69.4336%" y="191.50"></text></g><g><title>jwtd`__rust_dealloc (4 samples, 0.02%)</title><rect x="69.2171%" y="181" width="0.0192%" height="15" fill="rgb(218,68,31)" fg:x="14438" fg:w="4"/><text x="69.4671%" y="191.50"></text></g><g><title>jwtd`bn_mul4x_mont (6 samples, 0.03%)</title><rect x="69.2411%" y="181" width="0.0288%" height="15" fill="rgb(207,120,37)" fg:x="14443" fg:w="6"/><text x="69.4911%" y="191.50"></text></g><g><title>jwtd`bn_mul4x_mont_gather5 (9 samples, 0.04%)</title><rect x="69.2699%" y="181" width="0.0431%" height="15" fill="rgb(227,98,0)" fg:x="14449" fg:w="9"/><text x="69.5199%" y="191.50"></text></g><g><title>jwtd`bn_sqr8x_mont (21 samples, 0.10%)</title><rect x="69.3130%" y="181" width="0.1007%" height="15" fill="rgb(207,7,3)" fg:x="14458" fg:w="21"/><text x="69.5630%" y="191.50"></text></g><g><title>jwtd`LIMBS_less_than (7 samples, 0.03%)</title><rect x="69.6198%" y="165" width="0.0336%" height="15" fill="rgb(206,98,19)" fg:x="14522" fg:w="7"/><text x="69.8698%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="69.7013%" y="101" width="0.0144%" height="15" fill="rgb(217,5,26)" fg:x="14539" fg:w="3"/><text x="69.9513%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`calloc (15 samples, 0.07%)</title><rect x="69.6534%" y="165" width="0.0719%" height="15" fill="rgb(235,190,38)" fg:x="14529" fg:w="15"/><text x="69.9034%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (15 samples, 0.07%)</title><rect x="69.6534%" y="149" width="0.0719%" height="15" fill="rgb(247,86,24)" fg:x="14529" fg:w="15"/><text x="69.9034%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.07%)</title><rect x="69.6582%" y="133" width="0.0671%" height="15" fill="rgb(205,101,16)" fg:x="14530" fg:w="14"/><text x="69.9082%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.07%)</title><rect x="69.6582%" y="117" width="0.0671%" height="15" fill="rgb(246,168,33)" fg:x="14530" fg:w="14"/><text x="69.9082%" y="127.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Elem&lt;M&gt;::from_be_bytes_padded (70 samples, 0.34%)</title><rect x="69.4137%" y="181" width="0.3356%" height="15" fill="rgb(231,114,1)" fg:x="14479" fg:w="70"/><text x="69.6637%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="69.7253%" y="165" width="0.0240%" height="15" fill="rgb(207,184,53)" fg:x="14544" fg:w="5"/><text x="69.9753%" y="175.50"></text></g><g><title>jwtd`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="70.1280%" y="165" width="0.0144%" height="15" fill="rgb(224,95,51)" fg:x="14628" fg:w="3"/><text x="70.3780%" y="175.50"></text></g><g><title>jwtd`GFp_bn_gather5 (37 samples, 0.18%)</title><rect x="70.1424%" y="165" width="0.1774%" height="15" fill="rgb(212,188,45)" fg:x="14631" fg:w="37"/><text x="70.3924%" y="175.50"></text></g><g><title>jwtd`LIMBS_window5_split_window (5 samples, 0.02%)</title><rect x="71.8826%" y="133" width="0.0240%" height="15" fill="rgb(223,154,38)" fg:x="14994" fg:w="5"/><text x="72.1326%" y="143.50"></text></g><g><title>jwtd`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (359 samples, 1.72%)</title><rect x="70.3725%" y="149" width="1.7211%" height="15" fill="rgb(251,22,52)" fg:x="14679" fg:w="359"/><text x="70.6225%" y="159.50"></text></g><g><title>jwtd`LIMBS_window5_unsplit_window (39 samples, 0.19%)</title><rect x="71.9066%" y="133" width="0.1870%" height="15" fill="rgb(229,209,22)" fg:x="14999" fg:w="39"/><text x="72.1566%" y="143.50"></text></g><g><title>jwtd`GFp_bn_power5 (229 samples, 1.10%)</title><rect x="72.0936%" y="149" width="1.0978%" height="15" fill="rgb(234,138,34)" fg:x="15038" fg:w="229"/><text x="72.3436%" y="159.50"></text></g><g><title>jwtd`ring::limb::fold_5_bit_windows (620 samples, 2.97%)</title><rect x="70.3198%" y="165" width="2.9723%" height="15" fill="rgb(212,95,11)" fg:x="14668" fg:w="620"/><text x="70.5698%" y="175.50">jwt..</text></g><g><title>jwtd`LIMBS_window5_unsplit_window (20 samples, 0.10%)</title><rect x="73.1962%" y="149" width="0.0959%" height="15" fill="rgb(240,179,47)" fg:x="15268" fg:w="20"/><text x="73.4462%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (22 samples, 0.11%)</title><rect x="73.3832%" y="101" width="0.1055%" height="15" fill="rgb(240,163,11)" fg:x="15307" fg:w="22"/><text x="73.6332%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (9 samples, 0.04%)</title><rect x="73.4455%" y="85" width="0.0431%" height="15" fill="rgb(236,37,12)" fg:x="15320" fg:w="9"/><text x="73.6955%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (52 samples, 0.25%)</title><rect x="73.3400%" y="117" width="0.2493%" height="15" fill="rgb(232,164,16)" fg:x="15298" fg:w="52"/><text x="73.5900%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (21 samples, 0.10%)</title><rect x="73.4887%" y="101" width="0.1007%" height="15" fill="rgb(244,205,15)" fg:x="15329" fg:w="21"/><text x="73.7387%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`calloc (63 samples, 0.30%)</title><rect x="73.2921%" y="165" width="0.3020%" height="15" fill="rgb(223,117,47)" fg:x="15288" fg:w="63"/><text x="73.5421%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (63 samples, 0.30%)</title><rect x="73.2921%" y="149" width="0.3020%" height="15" fill="rgb(244,107,35)" fg:x="15288" fg:w="63"/><text x="73.5421%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (59 samples, 0.28%)</title><rect x="73.3113%" y="133" width="0.2829%" height="15" fill="rgb(205,140,8)" fg:x="15292" fg:w="59"/><text x="73.5613%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_size (11 samples, 0.05%)</title><rect x="73.6373%" y="149" width="0.0527%" height="15" fill="rgb(228,84,46)" fg:x="15360" fg:w="11"/><text x="73.8873%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.01%)</title><rect x="73.6900%" y="149" width="0.0144%" height="15" fill="rgb(254,188,9)" fg:x="15371" fg:w="3"/><text x="73.9400%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (25 samples, 0.12%)</title><rect x="73.5941%" y="165" width="0.1199%" height="15" fill="rgb(206,112,54)" fg:x="15351" fg:w="25"/><text x="73.8441%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_small (23 samples, 0.11%)</title><rect x="73.7140%" y="165" width="0.1103%" height="15" fill="rgb(216,84,49)" fg:x="15376" fg:w="23"/><text x="73.9640%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (4 samples, 0.02%)</title><rect x="73.8051%" y="149" width="0.0192%" height="15" fill="rgb(214,194,35)" fg:x="15395" fg:w="4"/><text x="74.0551%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (14 samples, 0.07%)</title><rect x="73.8242%" y="165" width="0.0671%" height="15" fill="rgb(249,28,3)" fg:x="15399" fg:w="14"/><text x="74.0742%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (4 samples, 0.02%)</title><rect x="73.8914%" y="165" width="0.0192%" height="15" fill="rgb(222,56,52)" fg:x="15413" fg:w="4"/><text x="74.1414%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.03%)</title><rect x="73.9105%" y="165" width="0.0288%" height="15" fill="rgb(245,217,50)" fg:x="15417" fg:w="6"/><text x="74.1605%" y="175.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::elem_exp_consttime (878 samples, 4.21%)</title><rect x="69.7493%" y="181" width="4.2092%" height="15" fill="rgb(213,201,24)" fg:x="14549" fg:w="878"/><text x="69.9993%" y="191.50">jwtd`..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.02%)</title><rect x="73.9393%" y="165" width="0.0192%" height="15" fill="rgb(248,116,28)" fg:x="15423" fg:w="4"/><text x="74.1893%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.03%)</title><rect x="74.0160%" y="165" width="0.0288%" height="15" fill="rgb(219,72,43)" fg:x="15439" fg:w="6"/><text x="74.2660%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.02%)</title><rect x="74.0256%" y="149" width="0.0192%" height="15" fill="rgb(209,138,14)" fg:x="15441" fg:w="4"/><text x="74.2756%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="74.0592%" y="133" width="0.0144%" height="15" fill="rgb(222,18,33)" fg:x="15448" fg:w="3"/><text x="74.3092%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (11 samples, 0.05%)</title><rect x="74.0448%" y="165" width="0.0527%" height="15" fill="rgb(213,199,7)" fg:x="15445" fg:w="11"/><text x="74.2948%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (8 samples, 0.04%)</title><rect x="74.0592%" y="149" width="0.0384%" height="15" fill="rgb(250,110,10)" fg:x="15448" fg:w="8"/><text x="74.3092%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.02%)</title><rect x="74.0735%" y="133" width="0.0240%" height="15" fill="rgb(248,123,6)" fg:x="15451" fg:w="5"/><text x="74.3235%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.02%)</title><rect x="74.0735%" y="117" width="0.0240%" height="15" fill="rgb(206,91,31)" fg:x="15451" fg:w="5"/><text x="74.3235%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.02%)</title><rect x="74.0783%" y="101" width="0.0192%" height="15" fill="rgb(211,154,13)" fg:x="15452" fg:w="4"/><text x="74.3283%" y="111.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::elem_exp_vartime_ (35 samples, 0.17%)</title><rect x="73.9585%" y="181" width="0.1678%" height="15" fill="rgb(225,148,7)" fg:x="15427" fg:w="35"/><text x="74.2085%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.03%)</title><rect x="74.0975%" y="165" width="0.0288%" height="15" fill="rgb(220,160,43)" fg:x="15456" fg:w="6"/><text x="74.3475%" y="175.50"></text></g><g><title>jwtd`LIMBS_reduce_once (22 samples, 0.11%)</title><rect x="74.1407%" y="165" width="0.1055%" height="15" fill="rgb(213,52,39)" fg:x="15465" fg:w="22"/><text x="74.3907%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="74.3037%" y="101" width="0.0144%" height="15" fill="rgb(243,137,7)" fg:x="15499" fg:w="3"/><text x="74.5537%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (16 samples, 0.08%)</title><rect x="74.2461%" y="165" width="0.0767%" height="15" fill="rgb(230,79,13)" fg:x="15487" fg:w="16"/><text x="74.4961%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (13 samples, 0.06%)</title><rect x="74.2605%" y="149" width="0.0623%" height="15" fill="rgb(247,105,23)" fg:x="15490" fg:w="13"/><text x="74.5105%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.04%)</title><rect x="74.2797%" y="133" width="0.0431%" height="15" fill="rgb(223,179,41)" fg:x="15494" fg:w="9"/><text x="74.5297%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.04%)</title><rect x="74.2845%" y="117" width="0.0384%" height="15" fill="rgb(218,9,34)" fg:x="15495" fg:w="8"/><text x="74.5345%" y="127.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::elem_reduced_once (46 samples, 0.22%)</title><rect x="74.1263%" y="181" width="0.2205%" height="15" fill="rgb(222,106,8)" fg:x="15462" fg:w="46"/><text x="74.3763%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="74.3228%" y="165" width="0.0240%" height="15" fill="rgb(211,220,0)" fg:x="15503" fg:w="5"/><text x="74.5728%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (7 samples, 0.03%)</title><rect x="74.5194%" y="101" width="0.0336%" height="15" fill="rgb(229,52,16)" fg:x="15544" fg:w="7"/><text x="74.7694%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.06%)</title><rect x="74.5530%" y="101" width="0.0623%" height="15" fill="rgb(212,155,18)" fg:x="15551" fg:w="13"/><text x="74.8030%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="74.6153%" y="101" width="0.0144%" height="15" fill="rgb(242,21,14)" fg:x="15564" fg:w="3"/><text x="74.8653%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (43 samples, 0.21%)</title><rect x="74.4427%" y="117" width="0.2061%" height="15" fill="rgb(222,19,48)" fg:x="15528" fg:w="43"/><text x="74.6927%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (4 samples, 0.02%)</title><rect x="74.6297%" y="101" width="0.0192%" height="15" fill="rgb(232,45,27)" fg:x="15567" fg:w="4"/><text x="74.8797%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (50 samples, 0.24%)</title><rect x="74.4235%" y="133" width="0.2397%" height="15" fill="rgb(249,103,42)" fg:x="15524" fg:w="50"/><text x="74.6735%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="74.6488%" y="117" width="0.0144%" height="15" fill="rgb(246,81,33)" fg:x="15571" fg:w="3"/><text x="74.8988%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (56 samples, 0.27%)</title><rect x="74.3995%" y="149" width="0.2685%" height="15" fill="rgb(252,33,42)" fg:x="15519" fg:w="56"/><text x="74.6495%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`calloc (60 samples, 0.29%)</title><rect x="74.3947%" y="165" width="0.2876%" height="15" fill="rgb(209,212,41)" fg:x="15518" fg:w="60"/><text x="74.6447%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.07%)</title><rect x="74.6872%" y="165" width="0.0719%" height="15" fill="rgb(207,154,6)" fg:x="15579" fg:w="15"/><text x="74.9372%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (11 samples, 0.05%)</title><rect x="74.7064%" y="149" width="0.0527%" height="15" fill="rgb(223,64,47)" fg:x="15583" fg:w="11"/><text x="74.9564%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.01%)</title><rect x="74.8118%" y="149" width="0.0144%" height="15" fill="rgb(211,161,38)" fg:x="15605" fg:w="3"/><text x="75.0618%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (39 samples, 0.19%)</title><rect x="74.7591%" y="165" width="0.1870%" height="15" fill="rgb(219,138,40)" fg:x="15594" fg:w="39"/><text x="75.0091%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (25 samples, 0.12%)</title><rect x="74.8262%" y="149" width="0.1199%" height="15" fill="rgb(241,228,46)" fg:x="15608" fg:w="25"/><text x="75.0762%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (8 samples, 0.04%)</title><rect x="74.9077%" y="133" width="0.0384%" height="15" fill="rgb(223,209,38)" fg:x="15625" fg:w="8"/><text x="75.1577%" y="143.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::elem_widen (129 samples, 0.62%)</title><rect x="74.3468%" y="181" width="0.6184%" height="15" fill="rgb(236,164,45)" fg:x="15508" fg:w="129"/><text x="74.5968%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="74.9509%" y="165" width="0.0144%" height="15" fill="rgb(231,15,5)" fg:x="15634" fg:w="3"/><text x="75.2009%" y="175.50"></text></g><g><title>jwtd`ring::digest::BlockContext::finish (9 samples, 0.04%)</title><rect x="74.9652%" y="181" width="0.0431%" height="15" fill="rgb(252,35,15)" fg:x="15637" fg:w="9"/><text x="75.2152%" y="191.50"></text></g><g><title>jwtd`ring::digest::Context::update (9 samples, 0.04%)</title><rect x="75.0084%" y="181" width="0.0431%" height="15" fill="rgb(248,181,18)" fg:x="15646" fg:w="9"/><text x="75.2584%" y="191.50"></text></g><g><title>jwtd`ring::limb::big_endian_from_limbs (15 samples, 0.07%)</title><rect x="75.0563%" y="181" width="0.0719%" height="15" fill="rgb(233,39,42)" fg:x="15656" fg:w="15"/><text x="75.3063%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_calloc (4 samples, 0.02%)</title><rect x="75.1666%" y="165" width="0.0192%" height="15" fill="rgb(238,110,33)" fg:x="15679" fg:w="4"/><text x="75.4166%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_calloc (3 samples, 0.01%)</title><rect x="75.1906%" y="149" width="0.0144%" height="15" fill="rgb(233,195,10)" fg:x="15684" fg:w="3"/><text x="75.4406%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.03%)</title><rect x="75.2337%" y="117" width="0.0288%" height="15" fill="rgb(254,105,3)" fg:x="15693" fg:w="6"/><text x="75.4837%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="75.2625%" y="117" width="0.0144%" height="15" fill="rgb(221,225,9)" fg:x="15699" fg:w="3"/><text x="75.5125%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15 samples, 0.07%)</title><rect x="75.2193%" y="133" width="0.0719%" height="15" fill="rgb(224,227,45)" fg:x="15690" fg:w="15"/><text x="75.4693%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="75.2769%" y="117" width="0.0144%" height="15" fill="rgb(229,198,43)" fg:x="15702" fg:w="3"/><text x="75.5269%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (25 samples, 0.12%)</title><rect x="75.1858%" y="165" width="0.1199%" height="15" fill="rgb(206,209,35)" fg:x="15683" fg:w="25"/><text x="75.4358%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.10%)</title><rect x="75.2049%" y="149" width="0.1007%" height="15" fill="rgb(245,195,53)" fg:x="15687" fg:w="21"/><text x="75.4549%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`calloc (36 samples, 0.17%)</title><rect x="75.1378%" y="181" width="0.1726%" height="15" fill="rgb(240,92,26)" fg:x="15673" fg:w="36"/><text x="75.3878%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (6 samples, 0.03%)</title><rect x="75.3104%" y="181" width="0.0288%" height="15" fill="rgb(207,40,23)" fg:x="15709" fg:w="6"/><text x="75.5604%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (35 samples, 0.17%)</title><rect x="75.3392%" y="181" width="0.1678%" height="15" fill="rgb(223,111,35)" fg:x="15715" fg:w="35"/><text x="75.5892%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (20 samples, 0.10%)</title><rect x="75.4111%" y="165" width="0.0959%" height="15" fill="rgb(229,147,28)" fg:x="15730" fg:w="20"/><text x="75.6611%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.03%)</title><rect x="75.5789%" y="165" width="0.0288%" height="15" fill="rgb(211,29,28)" fg:x="15765" fg:w="6"/><text x="75.8289%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (32 samples, 0.15%)</title><rect x="75.6077%" y="165" width="0.1534%" height="15" fill="rgb(228,72,33)" fg:x="15771" fg:w="32"/><text x="75.8577%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (13 samples, 0.06%)</title><rect x="75.6987%" y="149" width="0.0623%" height="15" fill="rgb(205,214,31)" fg:x="15790" fg:w="13"/><text x="75.9487%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (54 samples, 0.26%)</title><rect x="75.5070%" y="181" width="0.2589%" height="15" fill="rgb(224,111,15)" fg:x="15750" fg:w="54"/><text x="75.7570%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="75.7850%" y="165" width="0.0144%" height="15" fill="rgb(253,21,26)" fg:x="15808" fg:w="3"/><text x="76.0350%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (10 samples, 0.05%)</title><rect x="75.7994%" y="165" width="0.0479%" height="15" fill="rgb(245,139,43)" fg:x="15811" fg:w="10"/><text x="76.0494%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.04%)</title><rect x="75.8090%" y="149" width="0.0384%" height="15" fill="rgb(252,170,7)" fg:x="15813" fg:w="8"/><text x="76.0590%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.03%)</title><rect x="75.8186%" y="133" width="0.0288%" height="15" fill="rgb(231,118,14)" fg:x="15815" fg:w="6"/><text x="76.0686%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (19 samples, 0.09%)</title><rect x="75.7659%" y="181" width="0.0911%" height="15" fill="rgb(238,83,0)" fg:x="15804" fg:w="19"/><text x="76.0159%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (7 samples, 0.03%)</title><rect x="75.8617%" y="181" width="0.0336%" height="15" fill="rgb(221,39,39)" fg:x="15824" fg:w="7"/><text x="76.1117%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (11 samples, 0.05%)</title><rect x="75.8953%" y="181" width="0.0527%" height="15" fill="rgb(222,119,46)" fg:x="15831" fg:w="11"/><text x="76.1453%" y="191.50"></text></g><g><title>jwtd`ring::rsa::signing::RsaKeyPair::sign (2,383 samples, 11.42%)</title><rect x="64.6627%" y="197" width="11.4243%" height="15" fill="rgb(222,165,49)" fg:x="13488" fg:w="2383"/><text x="64.9127%" y="207.50">jwtd`ring::rsa::s..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (29 samples, 0.14%)</title><rect x="75.9480%" y="181" width="0.1390%" height="15" fill="rgb(219,113,52)" fg:x="15842" fg:w="29"/><text x="76.1980%" y="191.50"></text></g><g><title>jwtd`untrusted::Input::from (3 samples, 0.01%)</title><rect x="76.0871%" y="197" width="0.0144%" height="15" fill="rgb(214,7,15)" fg:x="15871" fg:w="3"/><text x="76.3371%" y="207.50"></text></g><g><title>jwtd`untrusted::Input::read_all (5 samples, 0.02%)</title><rect x="76.1014%" y="197" width="0.0240%" height="15" fill="rgb(235,32,4)" fg:x="15874" fg:w="5"/><text x="76.3514%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.02%)</title><rect x="76.1781%" y="133" width="0.0192%" height="15" fill="rgb(238,90,54)" fg:x="15890" fg:w="4"/><text x="76.4281%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.06%)</title><rect x="76.1446%" y="165" width="0.0575%" height="15" fill="rgb(213,208,19)" fg:x="15883" fg:w="12"/><text x="76.3946%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.04%)</title><rect x="76.1590%" y="149" width="0.0431%" height="15" fill="rgb(233,156,4)" fg:x="15886" fg:w="9"/><text x="76.4090%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`calloc (17 samples, 0.08%)</title><rect x="76.1254%" y="197" width="0.0815%" height="15" fill="rgb(207,194,5)" fg:x="15879" fg:w="17"/><text x="76.3754%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (15 samples, 0.07%)</title><rect x="76.1350%" y="181" width="0.0719%" height="15" fill="rgb(206,111,30)" fg:x="15881" fg:w="15"/><text x="76.3850%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.08%)</title><rect x="76.2117%" y="197" width="0.0815%" height="15" fill="rgb(243,70,54)" fg:x="15897" fg:w="17"/><text x="76.4617%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.01%)</title><rect x="76.2788%" y="181" width="0.0144%" height="15" fill="rgb(242,28,8)" fg:x="15911" fg:w="3"/><text x="76.5288%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (27 samples, 0.13%)</title><rect x="76.2932%" y="197" width="0.1294%" height="15" fill="rgb(219,106,18)" fg:x="15914" fg:w="27"/><text x="76.5432%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.07%)</title><rect x="76.3507%" y="181" width="0.0719%" height="15" fill="rgb(244,222,10)" fg:x="15926" fg:w="15"/><text x="76.6007%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.01%)</title><rect x="76.4083%" y="165" width="0.0144%" height="15" fill="rgb(236,179,52)" fg:x="15938" fg:w="3"/><text x="76.6583%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (11 samples, 0.05%)</title><rect x="76.4418%" y="197" width="0.0527%" height="15" fill="rgb(213,23,39)" fg:x="15945" fg:w="11"/><text x="76.6918%" y="207.50"></text></g><g><title>jwtd`jsonwebtoken::crypto::rsa::sign (4,023 samples, 19.29%)</title><rect x="57.2319%" y="213" width="19.2866%" height="15" fill="rgb(238,48,10)" fg:x="11938" fg:w="4023"/><text x="57.4819%" y="223.50">jwtd`jsonwebtoken::crypto::rsa..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="76.4946%" y="197" width="0.0240%" height="15" fill="rgb(251,196,23)" fg:x="15956" fg:w="5"/><text x="76.7446%" y="207.50"></text></g><g><title>jwtd`ring::rsa::signing::RsaKeyPair::from_der (3 samples, 0.01%)</title><rect x="76.5185%" y="213" width="0.0144%" height="15" fill="rgb(250,152,24)" fg:x="15961" fg:w="3"/><text x="76.7685%" y="223.50"></text></g><g><title>jwtd`jsonwebtoken::crypto::sign (4,045 samples, 19.39%)</title><rect x="57.1744%" y="229" width="19.3921%" height="15" fill="rgb(209,150,17)" fg:x="11926" fg:w="4045"/><text x="57.4244%" y="239.50">jwtd`jsonwebtoken::crypto::sign</text></g><g><title>jwtd`jsonwebtoken::serialization::b64_encode (5 samples, 0.02%)</title><rect x="76.5713%" y="229" width="0.0240%" height="15" fill="rgb(234,202,34)" fg:x="15972" fg:w="5"/><text x="76.8213%" y="239.50"></text></g><g><title>jwtd`base64::encode::encode_config (3 samples, 0.01%)</title><rect x="76.6863%" y="213" width="0.0144%" height="15" fill="rgb(253,148,53)" fg:x="15996" fg:w="3"/><text x="76.9363%" y="223.50"></text></g><g><title>jwtd`serde::ser::SerializeMap::serialize_entry (21 samples, 0.10%)</title><rect x="76.7343%" y="197" width="0.1007%" height="15" fill="rgb(218,129,16)" fg:x="16006" fg:w="21"/><text x="76.9843%" y="207.50"></text></g><g><title>jwtd`serde_json::ser::format_escaped_str (18 samples, 0.09%)</title><rect x="76.7486%" y="181" width="0.0863%" height="15" fill="rgb(216,85,19)" fg:x="16009" fg:w="18"/><text x="76.9986%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="76.8206%" y="165" width="0.0144%" height="15" fill="rgb(235,228,7)" fg:x="16024" fg:w="3"/><text x="77.0706%" y="175.50"></text></g><g><title>jwtd`jsonwebtoken::header::_::_&lt;impl serde::ser::Serialize for jsonwebtoken::header::Header&gt;::serialize (30 samples, 0.14%)</title><rect x="76.7007%" y="213" width="0.1438%" height="15" fill="rgb(245,175,0)" fg:x="15999" fg:w="30"/><text x="76.9507%" y="223.50"></text></g><g><title>jwtd`base64::encode::encode_with_padding (21 samples, 0.10%)</title><rect x="76.8925%" y="181" width="0.1007%" height="15" fill="rgb(208,168,36)" fg:x="16039" fg:w="21"/><text x="77.1425%" y="191.50"></text></g><g><title>jwtd`core::str::converts::from_utf8 (4 samples, 0.02%)</title><rect x="76.9931%" y="181" width="0.0192%" height="15" fill="rgb(246,171,24)" fg:x="16060" fg:w="4"/><text x="77.2431%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_calloc (4 samples, 0.02%)</title><rect x="77.0267%" y="149" width="0.0192%" height="15" fill="rgb(215,142,24)" fg:x="16067" fg:w="4"/><text x="77.2767%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="77.1034%" y="117" width="0.0144%" height="15" fill="rgb(250,187,7)" fg:x="16083" fg:w="3"/><text x="77.3534%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.02%)</title><rect x="77.1178%" y="117" width="0.0192%" height="15" fill="rgb(228,66,33)" fg:x="16086" fg:w="4"/><text x="77.3678%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.09%)</title><rect x="77.0698%" y="133" width="0.0863%" height="15" fill="rgb(234,215,21)" fg:x="16076" fg:w="18"/><text x="77.3198%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (34 samples, 0.16%)</title><rect x="77.0171%" y="165" width="0.1630%" height="15" fill="rgb(222,191,20)" fg:x="16065" fg:w="34"/><text x="77.2671%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.13%)</title><rect x="77.0459%" y="149" width="0.1342%" height="15" fill="rgb(245,79,54)" fg:x="16071" fg:w="28"/><text x="77.2959%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (5 samples, 0.02%)</title><rect x="77.1561%" y="133" width="0.0240%" height="15" fill="rgb(240,10,37)" fg:x="16094" fg:w="5"/><text x="77.4061%" y="143.50"></text></g><g><title>jwtd`base64::encode::encode_config (66 samples, 0.32%)</title><rect x="76.8733%" y="197" width="0.3164%" height="15" fill="rgb(214,192,32)" fg:x="16035" fg:w="66"/><text x="77.1233%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`calloc (37 samples, 0.18%)</title><rect x="77.0123%" y="181" width="0.1774%" height="15" fill="rgb(209,36,54)" fg:x="16064" fg:w="37"/><text x="77.2623%" y="191.50"></text></g><g><title>jwtd`base64::encode::encoded_size (3 samples, 0.01%)</title><rect x="77.1897%" y="197" width="0.0144%" height="15" fill="rgb(220,10,11)" fg:x="16101" fg:w="3"/><text x="77.4397%" y="207.50"></text></g><g><title>jwtd`jsonwebtoken::serialization::b64_encode (80 samples, 0.38%)</title><rect x="76.8445%" y="213" width="0.3835%" height="15" fill="rgb(221,106,17)" fg:x="16029" fg:w="80"/><text x="77.0945%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`calloc (3 samples, 0.01%)</title><rect x="77.2137%" y="197" width="0.0144%" height="15" fill="rgb(251,142,44)" fg:x="16106" fg:w="3"/><text x="77.4637%" y="207.50"></text></g><g><title>jwtd`serde_json::ser::format_escaped_str (4 samples, 0.02%)</title><rect x="77.2616%" y="197" width="0.0192%" height="15" fill="rgb(238,13,15)" fg:x="16116" fg:w="4"/><text x="77.5116%" y="207.50"></text></g><g><title>jwtd`serde_json::ser::format_escaped_str (12 samples, 0.06%)</title><rect x="77.3335%" y="149" width="0.0575%" height="15" fill="rgb(208,107,27)" fg:x="16131" fg:w="12"/><text x="77.5835%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="77.3767%" y="133" width="0.0144%" height="15" fill="rgb(205,136,37)" fg:x="16140" fg:w="3"/><text x="77.6267%" y="143.50"></text></g><g><title>jwtd`serde::ser::Serializer::collect_seq (22 samples, 0.11%)</title><rect x="77.2952%" y="181" width="0.1055%" height="15" fill="rgb(250,205,27)" fg:x="16123" fg:w="22"/><text x="77.5452%" y="191.50"></text></g><g><title>jwtd`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 0.08%)</title><rect x="77.3239%" y="165" width="0.0767%" height="15" fill="rgb(210,80,43)" fg:x="16129" fg:w="16"/><text x="77.5739%" y="175.50"></text></g><g><title>jwtd`serde_json::ser::format_escaped_str (5 samples, 0.02%)</title><rect x="77.4006%" y="181" width="0.0240%" height="15" fill="rgb(247,160,36)" fg:x="16145" fg:w="5"/><text x="77.6506%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="77.4102%" y="165" width="0.0144%" height="15" fill="rgb(234,13,49)" fg:x="16147" fg:w="3"/><text x="77.6602%" y="175.50"></text></g><g><title>jwtd`serde::ser::SerializeMap::serialize_entry (44 samples, 0.21%)</title><rect x="77.2281%" y="213" width="0.2109%" height="15" fill="rgb(234,122,0)" fg:x="16109" fg:w="44"/><text x="77.4781%" y="223.50"></text></g><g><title>jwtd`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 0.16%)</title><rect x="77.2808%" y="197" width="0.1582%" height="15" fill="rgb(207,146,38)" fg:x="16120" fg:w="33"/><text x="77.5308%" y="207.50"></text></g><g><title>jwtd`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.01%)</title><rect x="77.4246%" y="181" width="0.0144%" height="15" fill="rgb(207,177,25)" fg:x="16150" fg:w="3"/><text x="77.6746%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.03%)</title><rect x="77.4486%" y="213" width="0.0336%" height="15" fill="rgb(211,178,42)" fg:x="16155" fg:w="7"/><text x="77.6986%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (6 samples, 0.03%)</title><rect x="77.4534%" y="197" width="0.0288%" height="15" fill="rgb(230,69,54)" fg:x="16156" fg:w="6"/><text x="77.7034%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.02%)</title><rect x="77.4821%" y="213" width="0.0192%" height="15" fill="rgb(214,135,41)" fg:x="16162" fg:w="4"/><text x="77.7321%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.10%)</title><rect x="77.5109%" y="181" width="0.1007%" height="15" fill="rgb(237,67,25)" fg:x="16168" fg:w="21"/><text x="77.7609%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.10%)</title><rect x="77.5157%" y="165" width="0.0959%" height="15" fill="rgb(222,189,50)" fg:x="16169" fg:w="20"/><text x="77.7657%" y="175.50"></text></g><g><title>jwtd`jsonwebtoken::serialization::b64_encode_part (213 samples, 1.02%)</title><rect x="76.5952%" y="229" width="1.0211%" height="15" fill="rgb(245,148,34)" fg:x="15977" fg:w="213"/><text x="76.8452%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (24 samples, 0.12%)</title><rect x="77.5013%" y="213" width="0.1151%" height="15" fill="rgb(222,29,6)" fg:x="16166" fg:w="24"/><text x="77.7513%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (23 samples, 0.11%)</title><rect x="77.5061%" y="197" width="0.1103%" height="15" fill="rgb(221,189,43)" fg:x="16167" fg:w="23"/><text x="77.7561%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="77.6212%" y="229" width="0.0144%" height="15" fill="rgb(207,36,27)" fg:x="16191" fg:w="3"/><text x="77.8712%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.06%)</title><rect x="77.6356%" y="229" width="0.0575%" height="15" fill="rgb(217,90,24)" fg:x="16194" fg:w="12"/><text x="77.8856%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.03%)</title><rect x="77.6595%" y="213" width="0.0336%" height="15" fill="rgb(224,66,35)" fg:x="16199" fg:w="7"/><text x="77.9095%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (45 samples, 0.22%)</title><rect x="77.6931%" y="229" width="0.2157%" height="15" fill="rgb(221,13,50)" fg:x="16206" fg:w="45"/><text x="77.9431%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (27 samples, 0.13%)</title><rect x="77.7794%" y="213" width="0.1294%" height="15" fill="rgb(236,68,49)" fg:x="16224" fg:w="27"/><text x="78.0294%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (8 samples, 0.04%)</title><rect x="77.8705%" y="197" width="0.0384%" height="15" fill="rgb(229,146,28)" fg:x="16243" fg:w="8"/><text x="78.1205%" y="207.50"></text></g><g><title>jwtd`jsonwebtoken::encoding::encode (4,392 samples, 21.06%)</title><rect x="56.8819%" y="245" width="21.0557%" height="15" fill="rgb(225,31,38)" fg:x="11865" fg:w="4392"/><text x="57.1319%" y="255.50">jwtd`jsonwebtoken::encoding::enco..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="77.9232%" y="229" width="0.0144%" height="15" fill="rgb(250,208,3)" fg:x="16254" fg:w="3"/><text x="78.1732%" y="239.50"></text></g><g><title>jwtd`jsonwebtoken::header::Header::new (6 samples, 0.03%)</title><rect x="77.9376%" y="245" width="0.0288%" height="15" fill="rgb(246,54,23)" fg:x="16257" fg:w="6"/><text x="78.1876%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.02%)</title><rect x="77.9424%" y="229" width="0.0240%" height="15" fill="rgb(243,76,11)" fg:x="16258" fg:w="5"/><text x="78.1924%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (5 samples, 0.02%)</title><rect x="77.9424%" y="213" width="0.0240%" height="15" fill="rgb(245,21,50)" fg:x="16258" fg:w="5"/><text x="78.1924%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.02%)</title><rect x="77.9472%" y="197" width="0.0192%" height="15" fill="rgb(228,9,43)" fg:x="16259" fg:w="4"/><text x="78.1972%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.02%)</title><rect x="77.9472%" y="181" width="0.0192%" height="15" fill="rgb(208,100,47)" fg:x="16259" fg:w="4"/><text x="78.1972%" y="191.50"></text></g><g><title>jwtd`jsonwebtoken::serialization::b64_encode_part (5 samples, 0.02%)</title><rect x="77.9663%" y="245" width="0.0240%" height="15" fill="rgb(232,26,8)" fg:x="16263" fg:w="5"/><text x="78.2163%" y="255.50"></text></g><g><title>jwtd`jwtd::generate_token (4,449 samples, 21.33%)</title><rect x="56.6854%" y="261" width="21.3289%" height="15" fill="rgb(216,166,38)" fg:x="11824" fg:w="4449"/><text x="56.9354%" y="271.50">jwtd`jwtd::generate_token</text></g><g><title>libsystem_malloc.dylib`small_size (3 samples, 0.01%)</title><rect x="78.0287%" y="245" width="0.0144%" height="15" fill="rgb(251,202,51)" fg:x="16276" fg:w="3"/><text x="78.2787%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.04%)</title><rect x="78.0143%" y="261" width="0.0384%" height="15" fill="rgb(254,216,34)" fg:x="16273" fg:w="8"/><text x="78.2643%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_small (5 samples, 0.02%)</title><rect x="78.0526%" y="261" width="0.0240%" height="15" fill="rgb(251,32,27)" fg:x="16281" fg:w="5"/><text x="78.3026%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (6 samples, 0.03%)</title><rect x="78.0958%" y="261" width="0.0288%" height="15" fill="rgb(208,127,28)" fg:x="16290" fg:w="6"/><text x="78.3458%" y="271.50"></text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,825 samples, 23.13%)</title><rect x="55.0074%" y="277" width="23.1315%" height="15" fill="rgb(224,137,22)" fg:x="11474" fg:w="4825"/><text x="55.2574%" y="287.50">jwtd`&lt;core::future::from_generator::G..</text></g><g><title>jwtd`&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (8 samples, 0.04%)</title><rect x="78.1389%" y="277" width="0.0384%" height="15" fill="rgb(254,70,32)" fg:x="16299" fg:w="8"/><text x="78.3889%" y="287.50"></text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="78.4697%" y="261" width="0.0192%" height="15" fill="rgb(229,75,37)" fg:x="16368" fg:w="4"/><text x="78.7197%" y="271.50"></text></g><g><title>jwtd`&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (6 samples, 0.03%)</title><rect x="78.4985%" y="261" width="0.0288%" height="15" fill="rgb(252,64,23)" fg:x="16374" fg:w="6"/><text x="78.7485%" y="271.50"></text></g><g><title>jwtd`&lt;headers::common::content_length::ContentLength as headers_core::Header&gt;::name (3 samples, 0.01%)</title><rect x="78.5320%" y="261" width="0.0144%" height="15" fill="rgb(232,162,48)" fg:x="16381" fg:w="3"/><text x="78.7820%" y="271.50"></text></g><g><title>jwtd`&lt;mime::Mime as core::str::traits::FromStr&gt;::from_str (3 samples, 0.01%)</title><rect x="78.5464%" y="261" width="0.0144%" height="15" fill="rgb(246,160,12)" fg:x="16384" fg:w="3"/><text x="78.7964%" y="271.50"></text></g><g><title>jwtd`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (6 samples, 0.03%)</title><rect x="78.7238%" y="181" width="0.0288%" height="15" fill="rgb(247,166,0)" fg:x="16421" fg:w="6"/><text x="78.9738%" y="191.50"></text></g><g><title>jwtd`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (6 samples, 0.03%)</title><rect x="78.8533%" y="149" width="0.0288%" height="15" fill="rgb(249,219,21)" fg:x="16448" fg:w="6"/><text x="79.1033%" y="159.50"></text></g><g><title>jwtd`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (18 samples, 0.09%)</title><rect x="78.8820%" y="133" width="0.0863%" height="15" fill="rgb(205,209,3)" fg:x="16454" fg:w="18"/><text x="79.1320%" y="143.50"></text></g><g><title>jwtd`core::str::converts::from_utf8 (8 samples, 0.04%)</title><rect x="78.9300%" y="117" width="0.0384%" height="15" fill="rgb(243,44,1)" fg:x="16464" fg:w="8"/><text x="79.1800%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc (8 samples, 0.04%)</title><rect x="78.9779%" y="133" width="0.0384%" height="15" fill="rgb(206,159,16)" fg:x="16474" fg:w="8"/><text x="79.2279%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (8 samples, 0.04%)</title><rect x="78.9779%" y="117" width="0.0384%" height="15" fill="rgb(244,77,30)" fg:x="16474" fg:w="8"/><text x="79.2279%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.03%)</title><rect x="78.9875%" y="101" width="0.0288%" height="15" fill="rgb(218,69,12)" fg:x="16476" fg:w="6"/><text x="79.2375%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.03%)</title><rect x="78.9875%" y="85" width="0.0288%" height="15" fill="rgb(212,87,7)" fg:x="16476" fg:w="6"/><text x="79.2375%" y="95.50"></text></g><g><title>jwtd`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (29 samples, 0.14%)</title><rect x="78.8820%" y="149" width="0.1390%" height="15" fill="rgb(245,114,25)" fg:x="16454" fg:w="29"/><text x="79.1320%" y="159.50"></text></g><g><title>jwtd`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (52 samples, 0.25%)</title><rect x="78.8053%" y="165" width="0.2493%" height="15" fill="rgb(210,61,42)" fg:x="16438" fg:w="52"/><text x="79.0553%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (6 samples, 0.03%)</title><rect x="79.0258%" y="149" width="0.0288%" height="15" fill="rgb(211,52,33)" fg:x="16484" fg:w="6"/><text x="79.2758%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (6 samples, 0.03%)</title><rect x="79.0258%" y="133" width="0.0288%" height="15" fill="rgb(234,58,33)" fg:x="16484" fg:w="6"/><text x="79.2758%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.02%)</title><rect x="79.0306%" y="117" width="0.0240%" height="15" fill="rgb(220,115,36)" fg:x="16485" fg:w="5"/><text x="79.2806%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.02%)</title><rect x="79.0306%" y="101" width="0.0240%" height="15" fill="rgb(243,153,54)" fg:x="16485" fg:w="5"/><text x="79.2806%" y="111.50"></text></g><g><title>jwtd`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.01%)</title><rect x="79.0546%" y="165" width="0.0144%" height="15" fill="rgb(251,47,18)" fg:x="16490" fg:w="3"/><text x="79.3046%" y="175.50"></text></g><g><title>jwtd`DYLD-STUB$$memcpy (4 samples, 0.02%)</title><rect x="79.0690%" y="165" width="0.0192%" height="15" fill="rgb(242,102,42)" fg:x="16493" fg:w="4"/><text x="79.3190%" y="175.50"></text></g><g><title>jwtd`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (7 samples, 0.03%)</title><rect x="79.1505%" y="133" width="0.0336%" height="15" fill="rgb(234,31,38)" fg:x="16510" fg:w="7"/><text x="79.4005%" y="143.50"></text></g><g><title>jwtd`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (23 samples, 0.11%)</title><rect x="79.1313%" y="149" width="0.1103%" height="15" fill="rgb(221,117,51)" fg:x="16506" fg:w="23"/><text x="79.3813%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (12 samples, 0.06%)</title><rect x="79.1840%" y="133" width="0.0575%" height="15" fill="rgb(212,20,18)" fg:x="16517" fg:w="12"/><text x="79.4340%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (12 samples, 0.06%)</title><rect x="79.1840%" y="117" width="0.0575%" height="15" fill="rgb(245,133,36)" fg:x="16517" fg:w="12"/><text x="79.4340%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.06%)</title><rect x="79.1840%" y="101" width="0.0575%" height="15" fill="rgb(212,6,19)" fg:x="16517" fg:w="12"/><text x="79.4340%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.06%)</title><rect x="79.1840%" y="85" width="0.0575%" height="15" fill="rgb(218,1,36)" fg:x="16517" fg:w="12"/><text x="79.4340%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.03%)</title><rect x="79.2128%" y="69" width="0.0288%" height="15" fill="rgb(246,84,54)" fg:x="16523" fg:w="6"/><text x="79.4628%" y="79.50"></text></g><g><title>jwtd`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (32 samples, 0.15%)</title><rect x="79.0978%" y="165" width="0.1534%" height="15" fill="rgb(242,110,6)" fg:x="16499" fg:w="32"/><text x="79.3478%" y="175.50"></text></g><g><title>jwtd`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.03%)</title><rect x="79.2560%" y="165" width="0.0288%" height="15" fill="rgb(214,47,5)" fg:x="16532" fg:w="6"/><text x="79.5060%" y="175.50"></text></g><g><title>jwtd`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (11 samples, 0.05%)</title><rect x="79.3854%" y="149" width="0.0527%" height="15" fill="rgb(218,159,25)" fg:x="16559" fg:w="11"/><text x="79.6354%" y="159.50"></text></g><g><title>jwtd`core::str::converts::from_utf8 (5 samples, 0.02%)</title><rect x="79.4142%" y="133" width="0.0240%" height="15" fill="rgb(215,211,28)" fg:x="16565" fg:w="5"/><text x="79.6642%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (8 samples, 0.04%)</title><rect x="79.4621%" y="101" width="0.0384%" height="15" fill="rgb(238,59,32)" fg:x="16575" fg:w="8"/><text x="79.7121%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.03%)</title><rect x="79.4717%" y="85" width="0.0288%" height="15" fill="rgb(226,82,3)" fg:x="16577" fg:w="6"/><text x="79.7217%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.03%)</title><rect x="79.4717%" y="69" width="0.0288%" height="15" fill="rgb(240,164,32)" fg:x="16577" fg:w="6"/><text x="79.7217%" y="79.50"></text></g><g><title>jwtd`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.06%)</title><rect x="79.4429%" y="149" width="0.0623%" height="15" fill="rgb(232,46,7)" fg:x="16571" fg:w="13"/><text x="79.6929%" y="159.50"></text></g><g><title>jwtd`alloc::raw_vec::finish_grow (10 samples, 0.05%)</title><rect x="79.4573%" y="133" width="0.0479%" height="15" fill="rgb(229,129,53)" fg:x="16574" fg:w="10"/><text x="79.7073%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (9 samples, 0.04%)</title><rect x="79.4621%" y="117" width="0.0431%" height="15" fill="rgb(234,188,29)" fg:x="16575" fg:w="9"/><text x="79.7121%" y="127.50"></text></g><g><title>jwtd`alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="79.5052%" y="149" width="0.0144%" height="15" fill="rgb(246,141,4)" fg:x="16584" fg:w="3"/><text x="79.7552%" y="159.50"></text></g><g><title>jwtd`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (8 samples, 0.04%)</title><rect x="79.5292%" y="133" width="0.0384%" height="15" fill="rgb(229,23,39)" fg:x="16589" fg:w="8"/><text x="79.7792%" y="143.50"></text></g><g><title>jwtd`core::str::converts::from_utf8 (4 samples, 0.02%)</title><rect x="79.5484%" y="117" width="0.0192%" height="15" fill="rgb(206,12,3)" fg:x="16593" fg:w="4"/><text x="79.7984%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc (15 samples, 0.07%)</title><rect x="79.5676%" y="133" width="0.0719%" height="15" fill="rgb(252,226,20)" fg:x="16597" fg:w="15"/><text x="79.8176%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (15 samples, 0.07%)</title><rect x="79.5676%" y="117" width="0.0719%" height="15" fill="rgb(216,123,35)" fg:x="16597" fg:w="15"/><text x="79.8176%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.06%)</title><rect x="79.5820%" y="101" width="0.0575%" height="15" fill="rgb(212,68,40)" fg:x="16600" fg:w="12"/><text x="79.8320%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.06%)</title><rect x="79.5820%" y="85" width="0.0575%" height="15" fill="rgb(254,125,32)" fg:x="16600" fg:w="12"/><text x="79.8320%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.02%)</title><rect x="79.6203%" y="69" width="0.0192%" height="15" fill="rgb(253,97,22)" fg:x="16608" fg:w="4"/><text x="79.8703%" y="79.50"></text></g><g><title>jwtd`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (26 samples, 0.12%)</title><rect x="79.5196%" y="149" width="0.1246%" height="15" fill="rgb(241,101,14)" fg:x="16587" fg:w="26"/><text x="79.7696%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (6 samples, 0.03%)</title><rect x="79.6443%" y="149" width="0.0288%" height="15" fill="rgb(238,103,29)" fg:x="16613" fg:w="6"/><text x="79.8943%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (6 samples, 0.03%)</title><rect x="79.6443%" y="133" width="0.0288%" height="15" fill="rgb(233,195,47)" fg:x="16613" fg:w="6"/><text x="79.8943%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.03%)</title><rect x="79.6443%" y="117" width="0.0288%" height="15" fill="rgb(246,218,30)" fg:x="16613" fg:w="6"/><text x="79.8943%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.02%)</title><rect x="79.6491%" y="101" width="0.0240%" height="15" fill="rgb(219,145,47)" fg:x="16614" fg:w="5"/><text x="79.8991%" y="111.50"></text></g><g><title>jwtd`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (84 samples, 0.40%)</title><rect x="79.2847%" y="165" width="0.4027%" height="15" fill="rgb(243,12,26)" fg:x="16538" fg:w="84"/><text x="79.5347%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="79.6730%" y="149" width="0.0144%" height="15" fill="rgb(214,87,16)" fg:x="16619" fg:w="3"/><text x="79.9230%" y="159.50"></text></g><g><title>jwtd`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (197 samples, 0.94%)</title><rect x="78.7526%" y="181" width="0.9444%" height="15" fill="rgb(208,99,42)" fg:x="16427" fg:w="197"/><text x="79.0026%" y="191.50"></text></g><g><title>jwtd`serde_json::de::from_slice (215 samples, 1.03%)</title><rect x="78.6807%" y="213" width="1.0307%" height="15" fill="rgb(253,99,2)" fg:x="16412" fg:w="215"/><text x="78.9307%" y="223.50"></text></g><g><title>jwtd`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (211 samples, 1.01%)</title><rect x="78.6998%" y="197" width="1.0116%" height="15" fill="rgb(220,168,23)" fg:x="16416" fg:w="211"/><text x="78.9498%" y="207.50"></text></g><g><title>jwtd`serde_json::read::SliceRead::new (3 samples, 0.01%)</title><rect x="79.7114%" y="213" width="0.0144%" height="15" fill="rgb(242,38,24)" fg:x="16627" fg:w="3"/><text x="79.9614%" y="223.50"></text></g><g><title>jwtd`&lt;warp::filters::body::Json as warp::filters::body::Decode&gt;::decode (224 samples, 1.07%)</title><rect x="78.6567%" y="229" width="1.0739%" height="15" fill="rgb(225,182,9)" fg:x="16407" fg:w="224"/><text x="78.9067%" y="239.50"></text></g><g><title>jwtd`bytes::bytes_mut::shared_v_drop (3 samples, 0.01%)</title><rect x="79.7402%" y="229" width="0.0144%" height="15" fill="rgb(243,178,37)" fg:x="16633" fg:w="3"/><text x="79.9902%" y="239.50"></text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (239 samples, 1.15%)</title><rect x="78.6135%" y="245" width="1.1458%" height="15" fill="rgb(232,139,19)" fg:x="16398" fg:w="239"/><text x="78.8635%" y="255.50"></text></g><g><title>jwtd`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="79.7593%" y="245" width="0.0144%" height="15" fill="rgb(225,201,24)" fg:x="16637" fg:w="3"/><text x="80.0093%" y="255.50"></text></g><g><title>jwtd`&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="79.7737%" y="245" width="0.0240%" height="15" fill="rgb(221,47,46)" fg:x="16640" fg:w="5"/><text x="80.0237%" y="255.50"></text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="79.8600%" y="213" width="0.0144%" height="15" fill="rgb(249,23,13)" fg:x="16658" fg:w="3"/><text x="80.1100%" y="223.50"></text></g><g><title>jwtd`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="79.9415%" y="181" width="0.0192%" height="15" fill="rgb(219,9,5)" fg:x="16675" fg:w="4"/><text x="80.1915%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.05%)</title><rect x="80.0710%" y="101" width="0.0527%" height="15" fill="rgb(254,171,16)" fg:x="16702" fg:w="11"/><text x="80.3210%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.04%)</title><rect x="80.0853%" y="85" width="0.0384%" height="15" fill="rgb(230,171,20)" fg:x="16705" fg:w="8"/><text x="80.3353%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.12%)</title><rect x="80.1237%" y="101" width="0.1151%" height="15" fill="rgb(210,71,41)" fg:x="16713" fg:w="24"/><text x="80.3737%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.07%)</title><rect x="80.1668%" y="85" width="0.0719%" height="15" fill="rgb(206,173,20)" fg:x="16722" fg:w="15"/><text x="80.4168%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (4 samples, 0.02%)</title><rect x="80.2196%" y="69" width="0.0192%" height="15" fill="rgb(233,88,34)" fg:x="16733" fg:w="4"/><text x="80.4696%" y="79.50"></text></g><g><title>jwtd`alloc::sync::Arc&lt;T&gt;::drop_slow (41 samples, 0.20%)</title><rect x="80.0566%" y="117" width="0.1966%" height="15" fill="rgb(223,209,46)" fg:x="16699" fg:w="41"/><text x="80.3066%" y="127.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (3 samples, 0.01%)</title><rect x="80.2387%" y="101" width="0.0144%" height="15" fill="rgb(250,43,18)" fg:x="16737" fg:w="3"/><text x="80.4887%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.02%)</title><rect x="80.3011%" y="101" width="0.0192%" height="15" fill="rgb(208,13,10)" fg:x="16750" fg:w="4"/><text x="80.5511%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.08%)</title><rect x="80.3202%" y="101" width="0.0815%" height="15" fill="rgb(212,200,36)" fg:x="16754" fg:w="17"/><text x="80.5702%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.05%)</title><rect x="80.3538%" y="85" width="0.0479%" height="15" fill="rgb(225,90,30)" fg:x="16761" fg:w="10"/><text x="80.6038%" y="95.50"></text></g><g><title>jwtd`futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (32 samples, 0.15%)</title><rect x="80.2531%" y="117" width="0.1534%" height="15" fill="rgb(236,182,39)" fg:x="16740" fg:w="32"/><text x="80.5031%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.03%)</title><rect x="80.4161%" y="117" width="0.0288%" height="15" fill="rgb(212,144,35)" fg:x="16774" fg:w="6"/><text x="80.6661%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.05%)</title><rect x="80.4832%" y="101" width="0.0527%" height="15" fill="rgb(228,63,44)" fg:x="16788" fg:w="11"/><text x="80.7332%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.10%)</title><rect x="80.4449%" y="117" width="0.0959%" height="15" fill="rgb(228,109,6)" fg:x="16780" fg:w="20"/><text x="80.6949%" y="127.50"></text></g><g><title>jwtd`futures_channel::mpsc::Receiver&lt;T&gt;::next_message (115 samples, 0.55%)</title><rect x="80.0134%" y="133" width="0.5513%" height="15" fill="rgb(238,117,24)" fg:x="16690" fg:w="115"/><text x="80.2634%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (4 samples, 0.02%)</title><rect x="80.5456%" y="117" width="0.0192%" height="15" fill="rgb(242,26,26)" fg:x="16801" fg:w="4"/><text x="80.7956%" y="127.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.01%)</title><rect x="80.5887%" y="133" width="0.0144%" height="15" fill="rgb(221,92,48)" fg:x="16810" fg:w="3"/><text x="80.8387%" y="143.50"></text></g><g><title>jwtd`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (127 samples, 0.61%)</title><rect x="80.0038%" y="149" width="0.6088%" height="15" fill="rgb(209,209,32)" fg:x="16688" fg:w="127"/><text x="80.2538%" y="159.50"></text></g><g><title>jwtd`&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (138 samples, 0.66%)</title><rect x="79.9607%" y="181" width="0.6616%" height="15" fill="rgb(221,70,22)" fg:x="16679" fg:w="138"/><text x="80.2107%" y="191.50"></text></g><g><title>jwtd`hyper::body::body::Body::poll_inner (136 samples, 0.65%)</title><rect x="79.9703%" y="165" width="0.6520%" height="15" fill="rgb(248,145,5)" fg:x="16681" fg:w="136"/><text x="80.2203%" y="175.50"></text></g><g><title>jwtd`&lt;hyper::common::watch::Sender as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="80.6223%" y="181" width="0.0144%" height="15" fill="rgb(226,116,26)" fg:x="16817" fg:w="3"/><text x="80.8723%" y="191.50"></text></g><g><title>jwtd`alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.02%)</title><rect x="80.6367%" y="181" width="0.0192%" height="15" fill="rgb(244,5,17)" fg:x="16820" fg:w="4"/><text x="80.8867%" y="191.50"></text></g><g><title>jwtd`&lt;futures_channel::mpsc::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="80.6990%" y="165" width="0.0240%" height="15" fill="rgb(252,159,33)" fg:x="16833" fg:w="5"/><text x="80.9490%" y="175.50"></text></g><g><title>jwtd`alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.02%)</title><rect x="80.7229%" y="165" width="0.0192%" height="15" fill="rgb(206,71,0)" fg:x="16838" fg:w="4"/><text x="80.9729%" y="175.50"></text></g><g><title>jwtd`tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (3 samples, 0.01%)</title><rect x="80.7469%" y="165" width="0.0144%" height="15" fill="rgb(233,118,54)" fg:x="16843" fg:w="3"/><text x="80.9969%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="80.7661%" y="165" width="0.0144%" height="15" fill="rgb(234,83,48)" fg:x="16847" fg:w="3"/><text x="81.0161%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.01%)</title><rect x="80.7661%" y="149" width="0.0144%" height="15" fill="rgb(228,3,54)" fg:x="16847" fg:w="3"/><text x="81.0161%" y="159.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;hyper::body::body::Body&gt; (41 samples, 0.20%)</title><rect x="80.6558%" y="181" width="0.1966%" height="15" fill="rgb(226,155,13)" fg:x="16824" fg:w="41"/><text x="80.9058%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.07%)</title><rect x="80.7805%" y="165" width="0.0719%" height="15" fill="rgb(241,28,37)" fg:x="16850" fg:w="15"/><text x="81.0305%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.05%)</title><rect x="80.8044%" y="149" width="0.0479%" height="15" fill="rgb(233,93,10)" fg:x="16855" fg:w="10"/><text x="81.0544%" y="159.50"></text></g><g><title>jwtd`tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (5 samples, 0.02%)</title><rect x="80.8620%" y="181" width="0.0240%" height="15" fill="rgb(225,113,19)" fg:x="16867" fg:w="5"/><text x="81.1120%" y="191.50"></text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (206 samples, 0.99%)</title><rect x="79.9032%" y="197" width="0.9876%" height="15" fill="rgb(241,2,18)" fg:x="16667" fg:w="206"/><text x="80.1532%" y="207.50"></text></g><g><title>jwtd`&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (5 samples, 0.02%)</title><rect x="80.8907%" y="197" width="0.0240%" height="15" fill="rgb(228,207,21)" fg:x="16873" fg:w="5"/><text x="81.1407%" y="207.50"></text></g><g><title>jwtd`bytes::bytes::static_drop (3 samples, 0.01%)</title><rect x="80.9147%" y="197" width="0.0144%" height="15" fill="rgb(213,211,35)" fg:x="16878" fg:w="3"/><text x="81.1647%" y="207.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;hyper::body::body::Extra&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="80.9291%" y="197" width="0.0144%" height="15" fill="rgb(209,83,10)" fg:x="16881" fg:w="3"/><text x="81.1791%" y="207.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;hyper::body::body::Body&gt; (3 samples, 0.01%)</title><rect x="80.9435%" y="197" width="0.0144%" height="15" fill="rgb(209,164,1)" fg:x="16884" fg:w="3"/><text x="81.1935%" y="207.50"></text></g><g><title>jwtd`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (229 samples, 1.10%)</title><rect x="79.8744%" y="213" width="1.0978%" height="15" fill="rgb(213,184,43)" fg:x="16661" fg:w="229"/><text x="80.1244%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="80.9579%" y="197" width="0.0144%" height="15" fill="rgb(231,61,34)" fg:x="16887" fg:w="3"/><text x="81.2079%" y="207.50"></text></g><g><title>jwtd`&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (6 samples, 0.03%)</title><rect x="80.9722%" y="213" width="0.0288%" height="15" fill="rgb(235,75,3)" fg:x="16890" fg:w="6"/><text x="81.2222%" y="223.50"></text></g><g><title>jwtd`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="80.9818%" y="197" width="0.0192%" height="15" fill="rgb(220,106,47)" fg:x="16892" fg:w="4"/><text x="81.2318%" y="207.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;futures_util::future::try_future::into_future::IntoFuture&lt;core::future::from_generator::GenFuture&lt;hyper::body::to_bytes::to_bytes&lt;hyper::body::body::Body&gt;::{{closure}}&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="81.0058%" y="213" width="0.0144%" height="15" fill="rgb(210,196,33)" fg:x="16897" fg:w="3"/><text x="81.2558%" y="223.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;futures_util::future::try_future::into_future::IntoFuture&lt;futures_util::future::try_future::MapOk&lt;futures_util::future::ready::Ready&lt;core::result::Result&lt;hyper::body::body::Body,warp::reject::Rejection&gt;&gt;,fn(hyper::body::body::Body) .&gt; (hyper::body::body::Body,)&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="81.0202%" y="213" width="0.0192%" height="15" fill="rgb(229,154,42)" fg:x="16900" fg:w="4"/><text x="81.2702%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="81.0489%" y="213" width="0.0144%" height="15" fill="rgb(228,114,26)" fg:x="16906" fg:w="3"/><text x="81.2989%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.03%)</title><rect x="81.0633%" y="213" width="0.0336%" height="15" fill="rgb(208,144,1)" fg:x="16909" fg:w="7"/><text x="81.3133%" y="223.50"></text></g><g><title>jwtd`&lt;warp::filter::and_then::AndThenFuture&lt;T,F&gt; as core::future::future::Future&gt;::poll (264 samples, 1.27%)</title><rect x="79.8360%" y="229" width="1.2656%" height="15" fill="rgb(239,112,37)" fg:x="16653" fg:w="264"/><text x="80.0860%" y="239.50"></text></g><g><title>jwtd`scoped_tls::ScopedKey&lt;T&gt;::with (9 samples, 0.04%)</title><rect x="81.1161%" y="229" width="0.0431%" height="15" fill="rgb(210,96,50)" fg:x="16920" fg:w="9"/><text x="81.3661%" y="239.50"></text></g><g><title>jwtd`warp::route::Route::take_body (3 samples, 0.01%)</title><rect x="81.1448%" y="213" width="0.0144%" height="15" fill="rgb(222,178,2)" fg:x="16926" fg:w="3"/><text x="81.3948%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="81.2263%" y="165" width="0.0144%" height="15" fill="rgb(226,74,18)" fg:x="16943" fg:w="3"/><text x="81.4763%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (20 samples, 0.10%)</title><rect x="81.1784%" y="229" width="0.0959%" height="15" fill="rgb(225,67,54)" fg:x="16933" fg:w="20"/><text x="81.4284%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (20 samples, 0.10%)</title><rect x="81.1784%" y="213" width="0.0959%" height="15" fill="rgb(251,92,32)" fg:x="16933" fg:w="20"/><text x="81.4284%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.09%)</title><rect x="81.1832%" y="197" width="0.0911%" height="15" fill="rgb(228,149,22)" fg:x="16934" fg:w="19"/><text x="81.4332%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.08%)</title><rect x="81.1928%" y="181" width="0.0815%" height="15" fill="rgb(243,54,13)" fg:x="16936" fg:w="17"/><text x="81.4428%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.03%)</title><rect x="81.2455%" y="165" width="0.0288%" height="15" fill="rgb(243,180,28)" fg:x="16947" fg:w="6"/><text x="81.4955%" y="175.50"></text></g><g><title>jwtd`&lt;warp::filter::and::AndFuture&lt;T,U&gt; as core::future::future::Future&gt;::poll (310 samples, 1.49%)</title><rect x="79.7977%" y="245" width="1.4862%" height="15" fill="rgb(208,167,24)" fg:x="16645" fg:w="310"/><text x="80.0477%" y="255.50"></text></g><g><title>jwtd`&lt;warp::filter::and_then::AndThenFuture&lt;T,F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="81.2839%" y="245" width="0.0144%" height="15" fill="rgb(245,73,45)" fg:x="16955" fg:w="3"/><text x="81.5339%" y="255.50"></text></g><g><title>jwtd`&lt;warp::filter::and_then::AndThenFuture&lt;T,F&gt; as core::future::future::Future&gt;::poll (590 samples, 2.83%)</title><rect x="78.5656%" y="261" width="2.8285%" height="15" fill="rgb(237,203,48)" fg:x="16388" fg:w="590"/><text x="78.8156%" y="271.50">jw..</text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.05%)</title><rect x="81.3414%" y="245" width="0.0527%" height="15" fill="rgb(211,197,16)" fg:x="16967" fg:w="11"/><text x="81.5914%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.03%)</title><rect x="81.3654%" y="229" width="0.0288%" height="15" fill="rgb(243,99,51)" fg:x="16972" fg:w="6"/><text x="81.6154%" y="239.50"></text></g><g><title>jwtd`core::ptr::drop_in_place$LT$warp..filter..and..State$LT$warp..filter..and..AndFuture$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filters..any..Any$C$warp..filters..path..Exact$LT$warp..filters..path..internal..Opaque$LT$jwtd..main..$u7b$$u7b$closure$u7d$$u7d$..__StaticPath$GT$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..path..end..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..method..method_is$LT$warp..filters..method..post..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..untuple_one..UntupleOne$LT$warp..filter..and_then..AndThen$LT$warp..filter..map_err..MapErr$LT$warp..filter..FilterFn$LT$warp..filter..filter_fn_one$LT$warp..filters..header..header2$LT$headers..common..content_length..ContentLength$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$futures_util..future..ready..Ready$LT$core..result..Result$LT$headers..common..content_length..ContentLengt� (5 samples, 0.02%)</title><rect x="81.4037%" y="261" width="0.0240%" height="15" fill="rgb(215,123,29)" fg:x="16980" fg:w="5"/><text x="81.6537%" y="271.50"></text></g><g><title>jwtd`core::ptr::drop_in_place$LT$warp..filter..and..State$LT$warp..filter..and..AndFuture$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filters..any..Any$C$warp..filters..path..Exact$LT$warp..filters..path..internal..Opaque$LT$jwtd..main..$u7b$$u7b$closure$u7d$$u7d$..__StaticPath$GT$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..path..end..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..method..method_is$LT$warp..filters..method..post..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..untuple_one..UntupleOne$LT$warp..filter..and_then..AndThen$LT$warp..filter..map_err..MapErr$LT$warp..filter..FilterFn$LT$warp..filter..filter_fn_one$LT$warp..filters..header..header2$LT$headers..common..content_length..ContentLength$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$futures_util..future..ready..Ready$LT$core..result..Result$LT$headers..common..content_length..ContentLength$C$warp..reject..Rejectio� (4 samples, 0.02%)</title><rect x="81.4277%" y="261" width="0.0192%" height="15" fill="rgb(239,186,37)" fg:x="16985" fg:w="4"/><text x="81.6777%" y="271.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;warp::filter::and_then::State&lt;warp::filter::and::AndFuture&lt;warp::filter::FilterFn&lt;warp::filters::body::is_content_type&lt;warp::filters::body::Json&gt;::{{closure}}&gt;,warp::filter::and_then::AndThen&lt;warp::filter::FilterFn&lt;warp::filter::filter_fn_one&lt;warp::filters::body::body::{{closure}},futures_util::future::ready::Ready&lt;core::result::Result&lt;hyper::body::body::Body,warp::reject::Rejection&gt;&gt;&gt;::{{closure}}&gt;,warp::filters::body::bytes::{{closure}}&gt;&gt;,warp::filters::body::json&lt;serde_json::value::Value&gt;::{{closure}}&gt;&gt; (4 samples, 0.02%)</title><rect x="81.4804%" y="261" width="0.0192%" height="15" fill="rgb(252,136,39)" fg:x="16996" fg:w="4"/><text x="81.7304%" y="271.50"></text></g><g><title>jwtd`http::header::map::hash_elem_using (4 samples, 0.02%)</title><rect x="81.5044%" y="261" width="0.0192%" height="15" fill="rgb(223,213,32)" fg:x="17001" fg:w="4"/><text x="81.7544%" y="271.50"></text></g><g><title>jwtd`&lt;headers::common::content_length::ContentLength as headers_core::Header&gt;::decode (7 samples, 0.03%)</title><rect x="81.7872%" y="245" width="0.0336%" height="15" fill="rgb(233,115,5)" fg:x="17060" fg:w="7"/><text x="82.0372%" y="255.50"></text></g><g><title>jwtd`&lt;http::header::map::ValueIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="81.8208%" y="245" width="0.0192%" height="15" fill="rgb(207,226,44)" fg:x="17067" fg:w="4"/><text x="82.0708%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.02%)</title><rect x="81.9311%" y="213" width="0.0240%" height="15" fill="rgb(208,126,0)" fg:x="17090" fg:w="5"/><text x="82.1811%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (5 samples, 0.02%)</title><rect x="81.9311%" y="197" width="0.0240%" height="15" fill="rgb(244,66,21)" fg:x="17090" fg:w="5"/><text x="82.1811%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.02%)</title><rect x="81.9359%" y="181" width="0.0192%" height="15" fill="rgb(222,97,12)" fg:x="17091" fg:w="4"/><text x="82.1859%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.02%)</title><rect x="81.9359%" y="165" width="0.0192%" height="15" fill="rgb(219,213,19)" fg:x="17091" fg:w="4"/><text x="82.1859%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.01%)</title><rect x="81.9406%" y="149" width="0.0144%" height="15" fill="rgb(252,169,30)" fg:x="17092" fg:w="3"/><text x="82.1906%" y="159.50"></text></g><g><title>jwtd`mime::parse::parse (22 samples, 0.11%)</title><rect x="81.8544%" y="229" width="0.1055%" height="15" fill="rgb(206,32,51)" fg:x="17074" fg:w="22"/><text x="82.1044%" y="239.50"></text></g><g><title>jwtd`&lt;mime::Mime as core::str::traits::FromStr&gt;::from_str (29 samples, 0.14%)</title><rect x="81.8400%" y="245" width="0.1390%" height="15" fill="rgb(250,172,42)" fg:x="17071" fg:w="29"/><text x="82.0900%" y="255.50"></text></g><g><title>jwtd`&lt;form_urlencoded::Parse as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="82.0030%" y="229" width="0.0144%" height="15" fill="rgb(209,34,43)" fg:x="17105" fg:w="3"/><text x="82.2530%" y="239.50"></text></g><g><title>jwtd`&lt;serde_urlencoded::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.05%)</title><rect x="81.9790%" y="245" width="0.0527%" height="15" fill="rgb(223,11,35)" fg:x="17100" fg:w="11"/><text x="82.2290%" y="255.50"></text></g><g><title>jwtd`&lt;serde_urlencoded::de::PartIterator as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="82.0174%" y="229" width="0.0144%" height="15" fill="rgb(251,219,26)" fg:x="17108" fg:w="3"/><text x="82.2674%" y="239.50"></text></g><g><title>jwtd`http::header::map::HeaderMap&lt;T&gt;::get (8 samples, 0.04%)</title><rect x="82.0317%" y="245" width="0.0384%" height="15" fill="rgb(231,119,3)" fg:x="17111" fg:w="8"/><text x="82.2817%" y="255.50"></text></g><g><title>jwtd`warp::route::ROUTE::FOO::__getit (3 samples, 0.01%)</title><rect x="82.0893%" y="245" width="0.0144%" height="15" fill="rgb(216,97,11)" fg:x="17123" fg:w="3"/><text x="82.3393%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.05%)</title><rect x="82.1084%" y="245" width="0.0479%" height="15" fill="rgb(223,59,9)" fg:x="17127" fg:w="10"/><text x="82.3584%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="82.1564%" y="245" width="0.0240%" height="15" fill="rgb(233,93,31)" fg:x="17137" fg:w="5"/><text x="82.4064%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.02%)</title><rect x="82.1612%" y="229" width="0.0192%" height="15" fill="rgb(239,81,33)" fg:x="17138" fg:w="4"/><text x="82.4112%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.02%)</title><rect x="82.1804%" y="245" width="0.0240%" height="15" fill="rgb(213,120,34)" fg:x="17142" fg:w="5"/><text x="82.4304%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.02%)</title><rect x="82.1851%" y="229" width="0.0192%" height="15" fill="rgb(243,49,53)" fg:x="17143" fg:w="4"/><text x="82.4351%" y="239.50"></text></g><g><title>jwtd`scoped_tls::ScopedKey&lt;T&gt;::with (142 samples, 0.68%)</title><rect x="81.5284%" y="261" width="0.6808%" height="15" fill="rgb(247,216,33)" fg:x="17006" fg:w="142"/><text x="81.7784%" y="271.50"></text></g><g><title>jwtd`serde_urlencoded::de::Deserializer::new (3 samples, 0.01%)</title><rect x="82.2091%" y="261" width="0.0144%" height="15" fill="rgb(226,26,14)" fg:x="17148" fg:w="3"/><text x="82.4591%" y="271.50"></text></g><g><title>jwtd`warp::filters::path::segment (4 samples, 0.02%)</title><rect x="82.2235%" y="261" width="0.0192%" height="15" fill="rgb(215,49,53)" fg:x="17151" fg:w="4"/><text x="82.4735%" y="271.50"></text></g><g><title>jwtd`warp::filters::path::segment (14 samples, 0.07%)</title><rect x="82.2954%" y="245" width="0.0671%" height="15" fill="rgb(245,162,40)" fg:x="17166" fg:w="14"/><text x="82.5454%" y="255.50"></text></g><g><title>jwtd`warp::route::Route::path (5 samples, 0.02%)</title><rect x="82.3386%" y="229" width="0.0240%" height="15" fill="rgb(229,68,17)" fg:x="17175" fg:w="5"/><text x="82.5886%" y="239.50"></text></g><g><title>jwtd`warp::filters::path::with_segment (33 samples, 0.16%)</title><rect x="82.2427%" y="261" width="0.1582%" height="15" fill="rgb(213,182,10)" fg:x="17155" fg:w="33"/><text x="82.4927%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.03%)</title><rect x="82.3721%" y="245" width="0.0288%" height="15" fill="rgb(245,125,30)" fg:x="17182" fg:w="6"/><text x="82.6221%" y="255.50"></text></g><g><title>jwtd`warp::route::ROUTE::FOO::__getit (4 samples, 0.02%)</title><rect x="82.4009%" y="261" width="0.0192%" height="15" fill="rgb(232,202,2)" fg:x="17188" fg:w="4"/><text x="82.6509%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.02%)</title><rect x="82.4392%" y="261" width="0.0192%" height="15" fill="rgb(237,140,51)" fg:x="17196" fg:w="4"/><text x="82.6892%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.06%)</title><rect x="82.4632%" y="261" width="0.0575%" height="15" fill="rgb(236,157,25)" fg:x="17201" fg:w="12"/><text x="82.7132%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (6 samples, 0.03%)</title><rect x="82.4920%" y="245" width="0.0288%" height="15" fill="rgb(219,209,0)" fg:x="17207" fg:w="6"/><text x="82.7420%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.03%)</title><rect x="82.5207%" y="261" width="0.0288%" height="15" fill="rgb(240,116,54)" fg:x="17213" fg:w="6"/><text x="82.7707%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.07%)</title><rect x="82.5495%" y="261" width="0.0671%" height="15" fill="rgb(216,10,36)" fg:x="17219" fg:w="14"/><text x="82.7995%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.02%)</title><rect x="82.5926%" y="245" width="0.0240%" height="15" fill="rgb(222,72,44)" fg:x="17228" fg:w="5"/><text x="82.8426%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="82.6502%" y="245" width="0.0144%" height="15" fill="rgb(232,159,9)" fg:x="17240" fg:w="3"/><text x="82.9002%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (11 samples, 0.05%)</title><rect x="82.7125%" y="213" width="0.0527%" height="15" fill="rgb(210,39,32)" fg:x="17253" fg:w="11"/><text x="82.9625%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (7 samples, 0.03%)</title><rect x="82.8467%" y="197" width="0.0336%" height="15" fill="rgb(216,194,45)" fg:x="17281" fg:w="7"/><text x="83.0967%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (45 samples, 0.22%)</title><rect x="82.7029%" y="229" width="0.2157%" height="15" fill="rgb(218,18,35)" fg:x="17251" fg:w="45"/><text x="82.9529%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (31 samples, 0.15%)</title><rect x="82.7700%" y="213" width="0.1486%" height="15" fill="rgb(207,83,51)" fg:x="17265" fg:w="31"/><text x="83.0200%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.03%)</title><rect x="82.8851%" y="197" width="0.0336%" height="15" fill="rgb(225,63,43)" fg:x="17289" fg:w="7"/><text x="83.1351%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (54 samples, 0.26%)</title><rect x="82.6646%" y="245" width="0.2589%" height="15" fill="rgb(207,57,36)" fg:x="17243" fg:w="54"/><text x="82.9146%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (65 samples, 0.31%)</title><rect x="82.6166%" y="261" width="0.3116%" height="15" fill="rgb(216,99,33)" fg:x="17233" fg:w="65"/><text x="82.8666%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.01%)</title><rect x="82.9522%" y="261" width="0.0144%" height="15" fill="rgb(225,42,16)" fg:x="17303" fg:w="3"/><text x="83.2022%" y="271.50"></text></g><g><title>jwtd`&lt;warp::filter::and::AndFuture&lt;T,U&gt; as core::future::future::Future&gt;::poll (1,010 samples, 4.84%)</title><rect x="78.1773%" y="277" width="4.8420%" height="15" fill="rgb(220,201,45)" fg:x="16307" fg:w="1010"/><text x="78.4273%" y="287.50">jwtd`&lt;..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.05%)</title><rect x="82.9666%" y="261" width="0.0527%" height="15" fill="rgb(225,33,4)" fg:x="17306" fg:w="11"/><text x="83.2166%" y="271.50"></text></g><g><title>jwtd`__rdl_alloc (3 samples, 0.01%)</title><rect x="83.0337%" y="277" width="0.0144%" height="15" fill="rgb(224,33,50)" fg:x="17320" fg:w="3"/><text x="83.2837%" y="287.50"></text></g><g><title>jwtd`core::ptr::drop_in_place$LT$warp..filter..and..State$LT$warp..filter..and..AndFuture$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filters..any..Any$C$warp..filters..path..Exact$LT$warp..filters..path..internal..Opaque$LT$jwtd..main..$u7b$$u7b$closure$u7d$$u7d$..__StaticPath$GT$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..path..end..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..method..method_is$LT$warp..filters..method..post..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..untuple_one..UntupleOne$LT$warp..filter..and_then..AndThen$LT$warp..filter..map_err..MapErr$LT$warp..filter..FilterFn$LT$warp..filter..filter_fn_one$LT$warp..filters..header..header2$LT$headers..common..content_length..ContentLength$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$futures_util..future..ready..Ready$LT$core..result..Result$LT$headers..common..content_length..ContentLength$C$warp..reject..Rejection$GT$$GT$$GT$..$u7b$$u7b$c� (4 samples, 0.02%)</title><rect x="83.0721%" y="277" width="0.0192%" height="15" fill="rgb(246,198,51)" fg:x="17328" fg:w="4"/><text x="83.3221%" y="287.50"></text></g><g><title>jwtd`core::ptr::drop_in_place$LT$warp..filter..and_then..State$LT$warp..filter..and..AndFuture$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filters..any..Any$C$warp..filters..path..Exact$LT$warp..filters..path..internal..Opaque$LT$jwtd..main..$u7b$$u7b$closure$u7d$$u7d$..__StaticPath$GT$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..path..end..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..method..method_is$LT$warp..filters..method..post..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..untuple_one..UntupleOne$LT$warp..filter..and_then..AndThen$LT$warp..filter..map_err..MapErr$LT$warp..filter..FilterFn$LT$warp..filter..filter_fn_one$LT$warp..filters..header..header2$LT$headers..common..content_length..ContentLength$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$futures_util..future..ready..Ready$LT$core..result..Result$LT$headers..commo� (6 samples, 0.03%)</title><rect x="83.1008%" y="277" width="0.0288%" height="15" fill="rgb(205,22,4)" fg:x="17334" fg:w="6"/><text x="83.3508%" y="287.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;warp::filter::and::State&lt;warp::filter::and::AndFuture&lt;warp::filters::any::Any,warp::filters::path::Exact&lt;warp::filters::path::internal::Opaque&lt;jwtd::main::{{closure}}::__StaticPath&gt;&gt;&gt;,(),warp::filter::FilterFn&lt;warp::filters::path::end::{{closure}}&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="83.1392%" y="277" width="0.0144%" height="15" fill="rgb(206,3,8)" fg:x="17342" fg:w="3"/><text x="83.3892%" y="287.50"></text></g><g><title>jwtd`jwtd::generate_token (3 samples, 0.01%)</title><rect x="83.1536%" y="277" width="0.0144%" height="15" fill="rgb(251,23,15)" fg:x="17345" fg:w="3"/><text x="83.4036%" y="287.50"></text></g><g><title>jwtd`scoped_tls::ScopedKey&lt;T&gt;::with (9 samples, 0.04%)</title><rect x="83.1679%" y="277" width="0.0431%" height="15" fill="rgb(252,88,28)" fg:x="17348" fg:w="9"/><text x="83.4179%" y="287.50"></text></g><g><title>jwtd`&lt;warp::filter::and_then::AndThenFuture&lt;T,F&gt; as core::future::future::Future&gt;::poll (5,913 samples, 28.35%)</title><rect x="54.9259%" y="293" width="28.3475%" height="15" fill="rgb(212,127,14)" fg:x="11457" fg:w="5913"/><text x="55.1759%" y="303.50">jwtd`&lt;warp::filter::and_then::AndThenFuture&lt;T,..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.02%)</title><rect x="83.2542%" y="277" width="0.0192%" height="15" fill="rgb(247,145,37)" fg:x="17366" fg:w="4"/><text x="83.5042%" y="287.50"></text></g><g><title>jwtd`core::ptr::drop_in_place$LT$warp..filter..and..AndFuture$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filters..any..Any$C$warp..filters..path..Exact$LT$warp..filters..path..internal..Opaque$LT$jwtd..main..$u7b$$u7b$closure$u7d$$u7d$..__StaticPath$GT$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..path..end..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..method..method_is$LT$warp..filters..method..post..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..untuple_one..UntupleOne$LT$warp..filter..and_then..AndThen$LT$warp..filter..map_err..MapErr$LT$warp..filter..FilterFn$LT$warp..filter..filter_fn_one$LT$warp..filters..header..header2$LT$headers..common..content_length..ContentLength$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$futures_util..future..ready..Ready$LT$core..result..Result$LT$headers..common..content_length..ContentLength$C$warp..reject..Rejection$� (3 samples, 0.01%)</title><rect x="83.2782%" y="293" width="0.0144%" height="15" fill="rgb(209,117,53)" fg:x="17371" fg:w="3"/><text x="83.5282%" y="303.50"></text></g><g><title>jwtd`core::ptr::drop_in_place$LT$warp..filter..and_then..State$LT$warp..filter..and..AndFuture$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filters..any..Any$C$warp..filters..path..Exact$LT$warp..filters..path..internal..Opaque$LT$jwtd..main..$u7b$$u7b$closure$u7d$$u7d$..__StaticPath$GT$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..path..end..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..method..method_is$LT$warp..filters..method..post..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..untuple_one..UntupleOne$LT$warp..filter..and_then..AndThen$LT$warp..filter..map_err..MapErr$LT$warp..filter..FilterFn$LT$warp..filter..filter_fn_one$LT$warp..filters..header..header2$LT$headers..common..content_length..ContentLength$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$futures_util..future..ready..Ready$LT$core..result..Result$LT$headers..commo� (3 samples, 0.01%)</title><rect x="83.2974%" y="293" width="0.0144%" height="15" fill="rgb(212,90,42)" fg:x="17375" fg:w="3"/><text x="83.5474%" y="303.50"></text></g><g><title>jwtd`warp::route::ROUTE::FOO::__getit (3 samples, 0.01%)</title><rect x="83.3357%" y="277" width="0.0144%" height="15" fill="rgb(218,164,37)" fg:x="17383" fg:w="3"/><text x="83.5857%" y="287.50"></text></g><g><title>jwtd`warp::filter::or::PathIndex::reset_path (13 samples, 0.06%)</title><rect x="83.3213%" y="293" width="0.0623%" height="15" fill="rgb(246,65,34)" fg:x="17380" fg:w="13"/><text x="83.5713%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.03%)</title><rect x="83.3501%" y="277" width="0.0336%" height="15" fill="rgb(231,100,33)" fg:x="17386" fg:w="7"/><text x="83.6001%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_size (8 samples, 0.04%)</title><rect x="83.4220%" y="277" width="0.0384%" height="15" fill="rgb(228,126,14)" fg:x="17401" fg:w="8"/><text x="83.6720%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.01%)</title><rect x="83.4604%" y="277" width="0.0144%" height="15" fill="rgb(215,173,21)" fg:x="17409" fg:w="3"/><text x="83.7104%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (26 samples, 0.12%)</title><rect x="83.3885%" y="293" width="0.1246%" height="15" fill="rgb(210,6,40)" fg:x="17394" fg:w="26"/><text x="83.6385%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.04%)</title><rect x="83.4748%" y="277" width="0.0384%" height="15" fill="rgb(212,48,18)" fg:x="17412" fg:w="8"/><text x="83.7248%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_small (20 samples, 0.10%)</title><rect x="83.5131%" y="293" width="0.0959%" height="15" fill="rgb(230,214,11)" fg:x="17420" fg:w="20"/><text x="83.7631%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (3 samples, 0.01%)</title><rect x="83.5946%" y="277" width="0.0144%" height="15" fill="rgb(254,105,39)" fg:x="17437" fg:w="3"/><text x="83.8446%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.03%)</title><rect x="83.6090%" y="293" width="0.0336%" height="15" fill="rgb(245,158,5)" fg:x="17440" fg:w="7"/><text x="83.8590%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.02%)</title><rect x="83.6473%" y="261" width="0.0240%" height="15" fill="rgb(249,208,11)" fg:x="17448" fg:w="5"/><text x="83.8973%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (3 samples, 0.01%)</title><rect x="83.7001%" y="229" width="0.0144%" height="15" fill="rgb(210,39,28)" fg:x="17459" fg:w="3"/><text x="83.9501%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (34 samples, 0.16%)</title><rect x="83.6426%" y="293" width="0.1630%" height="15" fill="rgb(211,56,53)" fg:x="17447" fg:w="34"/><text x="83.8926%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (34 samples, 0.16%)</title><rect x="83.6426%" y="277" width="0.1630%" height="15" fill="rgb(226,201,30)" fg:x="17447" fg:w="34"/><text x="83.8926%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.13%)</title><rect x="83.6713%" y="261" width="0.1342%" height="15" fill="rgb(239,101,34)" fg:x="17453" fg:w="28"/><text x="83.9213%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (27 samples, 0.13%)</title><rect x="83.6761%" y="245" width="0.1294%" height="15" fill="rgb(226,209,5)" fg:x="17454" fg:w="27"/><text x="83.9261%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (17 samples, 0.08%)</title><rect x="83.7241%" y="229" width="0.0815%" height="15" fill="rgb(250,105,47)" fg:x="17464" fg:w="17"/><text x="83.9741%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (10 samples, 0.05%)</title><rect x="83.7576%" y="213" width="0.0479%" height="15" fill="rgb(230,72,3)" fg:x="17471" fg:w="10"/><text x="84.0076%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (8 samples, 0.04%)</title><rect x="83.8056%" y="293" width="0.0384%" height="15" fill="rgb(232,218,39)" fg:x="17481" fg:w="8"/><text x="84.0556%" y="303.50"></text></g><g><title>jwtd`&lt;warp::filter::or::EitherFuture&lt;T,U&gt; as core::future::future::Future&gt;::poll (6,112 samples, 29.30%)</title><rect x="54.6862%" y="309" width="29.3015%" height="15" fill="rgb(248,166,6)" fg:x="11407" fg:w="6112"/><text x="54.9362%" y="319.50">jwtd`&lt;warp::filter::or::EitherFuture&lt;T,U&gt; as co..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (26 samples, 0.12%)</title><rect x="83.8631%" y="293" width="0.1246%" height="15" fill="rgb(247,89,20)" fg:x="17493" fg:w="26"/><text x="84.1131%" y="303.50"></text></g><g><title>jwtd`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (7 samples, 0.03%)</title><rect x="84.0357%" y="293" width="0.0336%" height="15" fill="rgb(248,130,54)" fg:x="17529" fg:w="7"/><text x="84.2857%" y="303.50"></text></g><g><title>jwtd`alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (3 samples, 0.01%)</title><rect x="84.0548%" y="277" width="0.0144%" height="15" fill="rgb(234,196,4)" fg:x="17533" fg:w="3"/><text x="84.3048%" y="287.50"></text></g><g><title>jwtd`&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (3 samples, 0.01%)</title><rect x="84.0692%" y="293" width="0.0144%" height="15" fill="rgb(250,143,31)" fg:x="17536" fg:w="3"/><text x="84.3192%" y="303.50"></text></g><g><title>jwtd`http::header::map::Danger::is_yellow (4 samples, 0.02%)</title><rect x="84.1172%" y="277" width="0.0192%" height="15" fill="rgb(211,110,34)" fg:x="17546" fg:w="4"/><text x="84.3672%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.02%)</title><rect x="84.1795%" y="229" width="0.0192%" height="15" fill="rgb(215,124,48)" fg:x="17559" fg:w="4"/><text x="84.4295%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (7 samples, 0.03%)</title><rect x="84.2418%" y="197" width="0.0336%" height="15" fill="rgb(216,46,13)" fg:x="17572" fg:w="7"/><text x="84.4918%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.11%)</title><rect x="84.1987%" y="229" width="0.1103%" height="15" fill="rgb(205,184,25)" fg:x="17563" fg:w="23"/><text x="84.4487%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21 samples, 0.10%)</title><rect x="84.2083%" y="213" width="0.1007%" height="15" fill="rgb(228,1,10)" fg:x="17565" fg:w="21"/><text x="84.4583%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.03%)</title><rect x="84.2754%" y="197" width="0.0336%" height="15" fill="rgb(213,116,27)" fg:x="17579" fg:w="7"/><text x="84.5254%" y="207.50"></text></g><g><title>jwtd`http::header::map::HeaderMap&lt;T&gt;::reserve_one (37 samples, 0.18%)</title><rect x="84.1363%" y="277" width="0.1774%" height="15" fill="rgb(241,95,50)" fg:x="17550" fg:w="37"/><text x="84.3863%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (29 samples, 0.14%)</title><rect x="84.1747%" y="261" width="0.1390%" height="15" fill="rgb(238,48,32)" fg:x="17558" fg:w="29"/><text x="84.4247%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (28 samples, 0.13%)</title><rect x="84.1795%" y="245" width="0.1342%" height="15" fill="rgb(235,113,49)" fg:x="17559" fg:w="28"/><text x="84.4295%" y="255.50"></text></g><g><title>jwtd`http::header::map::hash_elem_using (3 samples, 0.01%)</title><rect x="84.3137%" y="277" width="0.0144%" height="15" fill="rgb(205,127,43)" fg:x="17587" fg:w="3"/><text x="84.5637%" y="287.50"></text></g><g><title>jwtd`http::header::map::HeaderMap&lt;T&gt;::insert (52 samples, 0.25%)</title><rect x="84.0836%" y="293" width="0.2493%" height="15" fill="rgb(250,162,2)" fg:x="17539" fg:w="52"/><text x="84.3336%" y="303.50"></text></g><g><title>jwtd`http::header::map::HeaderMap&lt;T&gt;::reserve_one (3 samples, 0.01%)</title><rect x="84.3329%" y="293" width="0.0144%" height="15" fill="rgb(220,13,41)" fg:x="17591" fg:w="3"/><text x="84.5829%" y="303.50"></text></g><g><title>jwtd`&lt;warp::reply::WithStatus&lt;T&gt; as warp::reply::Reply&gt;::into_response (80 samples, 0.38%)</title><rect x="83.9973%" y="309" width="0.3835%" height="15" fill="rgb(249,221,25)" fg:x="17521" fg:w="80"/><text x="84.2473%" y="319.50"></text></g><g><title>jwtd`__rdl_dealloc (3 samples, 0.01%)</title><rect x="84.3808%" y="309" width="0.0144%" height="15" fill="rgb(215,208,19)" fg:x="17601" fg:w="3"/><text x="84.6308%" y="319.50"></text></g><g><title>jwtd`http::header::value::is_visible_ascii (14 samples, 0.07%)</title><rect x="84.4192%" y="309" width="0.0671%" height="15" fill="rgb(236,175,2)" fg:x="17609" fg:w="14"/><text x="84.6692%" y="319.50"></text></g><g><title>jwtd`warp::route::ROUTE::FOO::__getit (5 samples, 0.02%)</title><rect x="84.5055%" y="309" width="0.0240%" height="15" fill="rgb(241,52,2)" fg:x="17627" fg:w="5"/><text x="84.7555%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="84.5390%" y="309" width="0.0144%" height="15" fill="rgb(248,140,14)" fg:x="17634" fg:w="3"/><text x="84.7890%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_small (3 samples, 0.01%)</title><rect x="84.5534%" y="309" width="0.0144%" height="15" fill="rgb(253,22,42)" fg:x="17637" fg:w="3"/><text x="84.8034%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (3 samples, 0.01%)</title><rect x="84.5726%" y="309" width="0.0144%" height="15" fill="rgb(234,61,47)" fg:x="17641" fg:w="3"/><text x="84.8226%" y="319.50"></text></g><g><title>jwtd`&lt;warp::filter::service::FilteredFuture&lt;F&gt; as core::future::future::Future&gt;::poll (6,268 samples, 30.05%)</title><rect x="54.5520%" y="325" width="30.0494%" height="15" fill="rgb(208,226,15)" fg:x="11379" fg:w="6268"/><text x="54.8020%" y="335.50">jwtd`&lt;warp::filter::service::FilteredFuture&lt;F&gt; a..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="84.5870%" y="309" width="0.0144%" height="15" fill="rgb(217,221,4)" fg:x="17644" fg:w="3"/><text x="84.8370%" y="319.50"></text></g><g><title>jwtd`&lt;warp::reply::WithStatus&lt;T&gt; as warp::reply::Reply&gt;::into_response (3 samples, 0.01%)</title><rect x="84.6014%" y="325" width="0.0144%" height="15" fill="rgb(212,174,34)" fg:x="17647" fg:w="3"/><text x="84.8514%" y="335.50"></text></g><g><title>jwtd`bytes::bytes::static_drop (3 samples, 0.01%)</title><rect x="84.6781%" y="293" width="0.0144%" height="15" fill="rgb(253,83,4)" fg:x="17663" fg:w="3"/><text x="84.9281%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_size (4 samples, 0.02%)</title><rect x="84.7740%" y="229" width="0.0192%" height="15" fill="rgb(250,195,49)" fg:x="17683" fg:w="4"/><text x="85.0240%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="84.7740%" y="245" width="0.0240%" height="15" fill="rgb(241,192,25)" fg:x="17683" fg:w="5"/><text x="85.0240%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_small (10 samples, 0.05%)</title><rect x="84.7979%" y="245" width="0.0479%" height="15" fill="rgb(208,124,10)" fg:x="17688" fg:w="10"/><text x="85.0479%" y="255.50"></text></g><g><title>jwtd`bytes::bytes_mut::shared_v_drop (25 samples, 0.12%)</title><rect x="84.7452%" y="261" width="0.1199%" height="15" fill="rgb(222,33,0)" fg:x="17677" fg:w="25"/><text x="84.9952%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (4 samples, 0.02%)</title><rect x="84.8459%" y="245" width="0.0192%" height="15" fill="rgb(234,209,28)" fg:x="17698" fg:w="4"/><text x="85.0959%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="84.8650%" y="261" width="0.0144%" height="15" fill="rgb(224,11,23)" fg:x="17702" fg:w="3"/><text x="85.1150%" y="271.50"></text></g><g><title>jwtd`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.20%)</title><rect x="84.7164%" y="277" width="0.2014%" height="15" fill="rgb(232,99,1)" fg:x="17671" fg:w="42"/><text x="84.9664%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.04%)</title><rect x="84.8794%" y="261" width="0.0384%" height="15" fill="rgb(237,95,45)" fg:x="17705" fg:w="8"/><text x="85.1294%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.03%)</title><rect x="84.8842%" y="245" width="0.0336%" height="15" fill="rgb(208,109,11)" fg:x="17706" fg:w="7"/><text x="85.1342%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.05%)</title><rect x="84.9178%" y="277" width="0.0479%" height="15" fill="rgb(216,190,48)" fg:x="17713" fg:w="10"/><text x="85.1678%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.02%)</title><rect x="84.9418%" y="261" width="0.0240%" height="15" fill="rgb(251,171,36)" fg:x="17718" fg:w="5"/><text x="85.1918%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.09%)</title><rect x="84.9657%" y="277" width="0.0863%" height="15" fill="rgb(230,62,22)" fg:x="17723" fg:w="18"/><text x="85.2157%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.04%)</title><rect x="85.0137%" y="261" width="0.0384%" height="15" fill="rgb(225,114,35)" fg:x="17733" fg:w="8"/><text x="85.2637%" y="271.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (77 samples, 0.37%)</title><rect x="84.6925%" y="293" width="0.3691%" height="15" fill="rgb(215,118,42)" fg:x="17666" fg:w="77"/><text x="84.9425%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.03%)</title><rect x="85.0712%" y="293" width="0.0336%" height="15" fill="rgb(243,119,21)" fg:x="17745" fg:w="7"/><text x="85.3212%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.02%)</title><rect x="85.0808%" y="277" width="0.0240%" height="15" fill="rgb(252,177,53)" fg:x="17747" fg:w="5"/><text x="85.3308%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.05%)</title><rect x="85.1048%" y="293" width="0.0479%" height="15" fill="rgb(237,209,29)" fg:x="17752" fg:w="10"/><text x="85.3548%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.01%)</title><rect x="85.1383%" y="277" width="0.0144%" height="15" fill="rgb(212,65,23)" fg:x="17759" fg:w="3"/><text x="85.3883%" y="287.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;http::request::Parts&gt; (102 samples, 0.49%)</title><rect x="84.6685%" y="309" width="0.4890%" height="15" fill="rgb(230,222,46)" fg:x="17661" fg:w="102"/><text x="84.9185%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.03%)</title><rect x="85.2006%" y="293" width="0.0288%" height="15" fill="rgb(215,135,32)" fg:x="17772" fg:w="6"/><text x="85.4506%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.02%)</title><rect x="85.2342%" y="277" width="0.0192%" height="15" fill="rgb(246,101,22)" fg:x="17779" fg:w="4"/><text x="85.4842%" y="287.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;jsonwebtoken::validation::Validation&gt; (19 samples, 0.09%)</title><rect x="85.1671%" y="309" width="0.0911%" height="15" fill="rgb(206,107,13)" fg:x="17765" fg:w="19"/><text x="85.4171%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.03%)</title><rect x="85.2294%" y="293" width="0.0288%" height="15" fill="rgb(250,100,44)" fg:x="17778" fg:w="6"/><text x="85.4794%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.02%)</title><rect x="85.2630%" y="309" width="0.0192%" height="15" fill="rgb(231,147,38)" fg:x="17785" fg:w="4"/><text x="85.5130%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.01%)</title><rect x="85.3061%" y="293" width="0.0144%" height="15" fill="rgb(229,8,40)" fg:x="17794" fg:w="3"/><text x="85.5561%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.11%)</title><rect x="85.2821%" y="309" width="0.1055%" height="15" fill="rgb(221,135,30)" fg:x="17789" fg:w="22"/><text x="85.5321%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.07%)</title><rect x="85.3205%" y="293" width="0.0671%" height="15" fill="rgb(249,193,18)" fg:x="17797" fg:w="14"/><text x="85.5705%" y="303.50"></text></g><g><title>jwtd`core::ptr::drop_in_place$LT$warp..filter..service..FilteredFuture$LT$warp..filter..or..EitherFuture$LT$warp..filter..or..Or$LT$warp..filter..or..Or$LT$warp..filter..or..Or$LT$warp..filter..and_then..AndThen$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filters..any..Any$C$warp..filters..path..Exact$LT$warp..filters..path..internal..Opaque$LT$jwtd..main..$u7b$$u7b$closure$u7d$$u7d$..__StaticPath$GT$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..path..end..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..method..method_is$LT$warp..filters..method..post..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..untuple_one..UntupleOne$LT$warp..filter..and_then..AndThen$LT$warp..filter..map_err..MapErr$LT$warp..filter..FilterFn$LT$warp..filter..filter_fn_one$LT$warp..filters..header..header2$LT$headers..common..content_length..ContentL� (161 samples, 0.77%)</title><rect x="84.6205%" y="325" width="0.7718%" height="15" fill="rgb(209,133,39)" fg:x="17651" fg:w="161"/><text x="84.8705%" y="335.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (3 samples, 0.01%)</title><rect x="85.4212%" y="325" width="0.0144%" height="15" fill="rgb(232,100,14)" fg:x="17818" fg:w="3"/><text x="85.6712%" y="335.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;hyper::body::body::Body&gt; (4 samples, 0.02%)</title><rect x="85.4355%" y="325" width="0.0192%" height="15" fill="rgb(224,185,1)" fg:x="17821" fg:w="4"/><text x="85.6855%" y="335.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;hyper::body::body::Sender&gt; (8 samples, 0.04%)</title><rect x="85.4547%" y="325" width="0.0384%" height="15" fill="rgb(223,139,8)" fg:x="17825" fg:w="8"/><text x="85.7047%" y="335.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;futures_channel::mpsc::Sender&lt;core::result::Result&lt;bytes::bytes::Bytes,hyper::error::Error&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="85.4739%" y="309" width="0.0192%" height="15" fill="rgb(232,213,38)" fg:x="17829" fg:w="4"/><text x="85.7239%" y="319.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;jsonwebtoken::validation::Validation&gt; (3 samples, 0.01%)</title><rect x="85.4931%" y="325" width="0.0144%" height="15" fill="rgb(207,94,22)" fg:x="17833" fg:w="3"/><text x="85.7431%" y="335.50"></text></g><g><title>jwtd`core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (3 samples, 0.01%)</title><rect x="85.5075%" y="325" width="0.0144%" height="15" fill="rgb(219,183,54)" fg:x="17836" fg:w="3"/><text x="85.7575%" y="335.50"></text></g><g><title>jwtd`futures_channel::mpsc::BoundedSenderInner&lt;T&gt;::poll_unparked (3 samples, 0.01%)</title><rect x="85.5218%" y="325" width="0.0144%" height="15" fill="rgb(216,185,54)" fg:x="17839" fg:w="3"/><text x="85.7718%" y="335.50"></text></g><g><title>jwtd`futures_channel::mpsc::channel (3 samples, 0.01%)</title><rect x="85.5458%" y="325" width="0.0144%" height="15" fill="rgb(254,217,39)" fg:x="17844" fg:w="3"/><text x="85.7958%" y="335.50"></text></g><g><title>jwtd`http::request::Parts::new (3 samples, 0.01%)</title><rect x="85.5602%" y="325" width="0.0144%" height="15" fill="rgb(240,178,23)" fg:x="17847" fg:w="3"/><text x="85.8102%" y="335.50"></text></g><g><title>jwtd`std::sys_common::mutex::MovableMutex::new (13 samples, 0.06%)</title><rect x="85.6369%" y="293" width="0.0623%" height="15" fill="rgb(218,11,47)" fg:x="17863" fg:w="13"/><text x="85.8869%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc (11 samples, 0.05%)</title><rect x="85.6465%" y="277" width="0.0527%" height="15" fill="rgb(218,51,51)" fg:x="17865" fg:w="11"/><text x="85.8965%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (11 samples, 0.05%)</title><rect x="85.6465%" y="261" width="0.0527%" height="15" fill="rgb(238,126,27)" fg:x="17865" fg:w="11"/><text x="85.8965%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.05%)</title><rect x="85.6465%" y="245" width="0.0527%" height="15" fill="rgb(249,202,22)" fg:x="17865" fg:w="11"/><text x="85.8965%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.05%)</title><rect x="85.6465%" y="229" width="0.0527%" height="15" fill="rgb(254,195,49)" fg:x="17865" fg:w="11"/><text x="85.8965%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.02%)</title><rect x="85.6752%" y="213" width="0.0240%" height="15" fill="rgb(208,123,14)" fg:x="17871" fg:w="5"/><text x="85.9252%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (7 samples, 0.03%)</title><rect x="85.8239%" y="229" width="0.0336%" height="15" fill="rgb(224,200,8)" fg:x="17902" fg:w="7"/><text x="86.0739%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.01%)</title><rect x="85.8574%" y="229" width="0.0144%" height="15" fill="rgb(217,61,36)" fg:x="17909" fg:w="3"/><text x="86.1074%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (35 samples, 0.17%)</title><rect x="85.7567%" y="261" width="0.1678%" height="15" fill="rgb(206,35,45)" fg:x="17888" fg:w="35"/><text x="86.0067%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (32 samples, 0.15%)</title><rect x="85.7711%" y="245" width="0.1534%" height="15" fill="rgb(217,65,33)" fg:x="17891" fg:w="32"/><text x="86.0211%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.05%)</title><rect x="85.8718%" y="229" width="0.0527%" height="15" fill="rgb(222,158,48)" fg:x="17912" fg:w="11"/><text x="86.1218%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (48 samples, 0.23%)</title><rect x="85.6992%" y="293" width="0.2301%" height="15" fill="rgb(254,2,54)" fg:x="17876" fg:w="48"/><text x="85.9492%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (46 samples, 0.22%)</title><rect x="85.7088%" y="277" width="0.2205%" height="15" fill="rgb(250,143,38)" fg:x="17878" fg:w="46"/><text x="85.9588%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_init (6 samples, 0.03%)</title><rect x="85.9293%" y="293" width="0.0288%" height="15" fill="rgb(248,25,0)" fg:x="17924" fg:w="6"/><text x="86.1793%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutexattr_init (3 samples, 0.01%)</title><rect x="85.9581%" y="293" width="0.0144%" height="15" fill="rgb(206,152,27)" fg:x="17930" fg:w="3"/><text x="86.2081%" y="303.50"></text></g><g><title>jwtd`futures_channel::mpsc::channel (75 samples, 0.36%)</title><rect x="85.6177%" y="309" width="0.3596%" height="15" fill="rgb(240,77,30)" fg:x="17859" fg:w="75"/><text x="85.8677%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.03%)</title><rect x="86.0444%" y="245" width="0.0288%" height="15" fill="rgb(231,5,3)" fg:x="17948" fg:w="6"/><text x="86.2944%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (26 samples, 0.12%)</title><rect x="85.9821%" y="309" width="0.1246%" height="15" fill="rgb(207,226,32)" fg:x="17935" fg:w="26"/><text x="86.2321%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (20 samples, 0.10%)</title><rect x="86.0108%" y="293" width="0.0959%" height="15" fill="rgb(222,207,47)" fg:x="17941" fg:w="20"/><text x="86.2608%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.09%)</title><rect x="86.0156%" y="277" width="0.0911%" height="15" fill="rgb(229,115,45)" fg:x="17942" fg:w="19"/><text x="86.2656%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.09%)</title><rect x="86.0156%" y="261" width="0.0911%" height="15" fill="rgb(224,191,6)" fg:x="17942" fg:w="19"/><text x="86.2656%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.03%)</title><rect x="86.0780%" y="245" width="0.0288%" height="15" fill="rgb(230,227,24)" fg:x="17955" fg:w="6"/><text x="86.3280%" y="255.50"></text></g><g><title>jwtd`hyper::body::body::Body::new_channel (112 samples, 0.54%)</title><rect x="85.5746%" y="325" width="0.5369%" height="15" fill="rgb(228,80,19)" fg:x="17850" fg:w="112"/><text x="85.8246%" y="335.50"></text></g><g><title>jwtd`hyper::body::body::Body::take_full_data (3 samples, 0.01%)</title><rect x="86.1115%" y="325" width="0.0144%" height="15" fill="rgb(247,229,0)" fg:x="17962" fg:w="3"/><text x="86.3615%" y="335.50"></text></g><g><title>jwtd`tokio::runtime::task::state::State::ref_inc (4 samples, 0.02%)</title><rect x="86.1930%" y="293" width="0.0192%" height="15" fill="rgb(237,194,15)" fg:x="17979" fg:w="4"/><text x="86.4430%" y="303.50"></text></g><g><title>jwtd`futures_core::task::__internal::atomic_waker::AtomicWaker::register (13 samples, 0.06%)</title><rect x="86.1642%" y="309" width="0.0623%" height="15" fill="rgb(219,203,20)" fg:x="17973" fg:w="13"/><text x="86.4142%" y="319.50"></text></g><g><title>jwtd`tokio::runtime::task::waker::clone_waker (3 samples, 0.01%)</title><rect x="86.2122%" y="293" width="0.0144%" height="15" fill="rgb(234,128,8)" fg:x="17983" fg:w="3"/><text x="86.4622%" y="303.50"></text></g><g><title>jwtd`hyper::body::body::Sender::poll_ready (23 samples, 0.11%)</title><rect x="86.1259%" y="325" width="0.1103%" height="15" fill="rgb(248,202,8)" fg:x="17965" fg:w="23"/><text x="86.3759%" y="335.50"></text></g><g><title>jwtd`futures_core::task::__internal::atomic_waker::AtomicWaker::wake (5 samples, 0.02%)</title><rect x="86.3177%" y="293" width="0.0240%" height="15" fill="rgb(206,104,37)" fg:x="18005" fg:w="5"/><text x="86.5677%" y="303.50"></text></g><g><title>jwtd`futures_channel::mpsc::Sender&lt;T&gt;::try_send (41 samples, 0.20%)</title><rect x="86.2362%" y="309" width="0.1966%" height="15" fill="rgb(223,8,27)" fg:x="17988" fg:w="41"/><text x="86.4862%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (19 samples, 0.09%)</title><rect x="86.3416%" y="293" width="0.0911%" height="15" fill="rgb(216,217,28)" fg:x="18010" fg:w="19"/><text x="86.5916%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (16 samples, 0.08%)</title><rect x="86.3560%" y="277" width="0.0767%" height="15" fill="rgb(249,199,1)" fg:x="18013" fg:w="16"/><text x="86.6060%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.08%)</title><rect x="86.3560%" y="261" width="0.0767%" height="15" fill="rgb(240,85,17)" fg:x="18013" fg:w="16"/><text x="86.6060%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.08%)</title><rect x="86.3560%" y="245" width="0.0767%" height="15" fill="rgb(206,108,45)" fg:x="18013" fg:w="16"/><text x="86.6060%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.01%)</title><rect x="86.4183%" y="229" width="0.0144%" height="15" fill="rgb(245,210,41)" fg:x="18026" fg:w="3"/><text x="86.6683%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.02%)</title><rect x="86.4423%" y="309" width="0.0192%" height="15" fill="rgb(206,13,37)" fg:x="18031" fg:w="4"/><text x="86.6923%" y="319.50"></text></g><g><title>jwtd`hyper::body::body::Sender::try_send_data (48 samples, 0.23%)</title><rect x="86.2362%" y="325" width="0.2301%" height="15" fill="rgb(250,61,18)" fg:x="17988" fg:w="48"/><text x="86.4862%" y="335.50"></text></g><g><title>jwtd`&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="86.5094%" y="309" width="0.0144%" height="15" fill="rgb(235,172,48)" fg:x="18045" fg:w="3"/><text x="86.7594%" y="319.50"></text></g><g><title>jwtd`&lt;hyper::proto::h1::role::Client as hyper::proto::h1::Http1Transaction&gt;::is_client (4 samples, 0.02%)</title><rect x="86.5286%" y="309" width="0.0192%" height="15" fill="rgb(249,201,17)" fg:x="18049" fg:w="4"/><text x="86.7786%" y="319.50"></text></g><g><title>jwtd`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (3 samples, 0.01%)</title><rect x="86.5478%" y="309" width="0.0144%" height="15" fill="rgb(219,208,6)" fg:x="18053" fg:w="3"/><text x="86.7978%" y="319.50"></text></g><g><title>jwtd`__rdl_dealloc (3 samples, 0.01%)</title><rect x="86.5622%" y="309" width="0.0144%" height="15" fill="rgb(248,31,23)" fg:x="18056" fg:w="3"/><text x="86.8122%" y="319.50"></text></g><g><title>jwtd`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (5 samples, 0.02%)</title><rect x="86.5861%" y="309" width="0.0240%" height="15" fill="rgb(245,15,42)" fg:x="18061" fg:w="5"/><text x="86.8361%" y="319.50"></text></g><g><title>jwtd`hyper::proto::h1::conn::KA::idle (4 samples, 0.02%)</title><rect x="86.6101%" y="309" width="0.0192%" height="15" fill="rgb(222,217,39)" fg:x="18066" fg:w="4"/><text x="86.8601%" y="319.50"></text></g><g><title>jwtd`hyper::proto::h1::conn::KA::status (4 samples, 0.02%)</title><rect x="86.6293%" y="309" width="0.0192%" height="15" fill="rgb(210,219,27)" fg:x="18070" fg:w="4"/><text x="86.8793%" y="319.50"></text></g><g><title>jwtd`&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.03%)</title><rect x="86.9697%" y="293" width="0.0288%" height="15" fill="rgb(252,166,36)" fg:x="18141" fg:w="6"/><text x="87.2197%" y="303.50"></text></g><g><title>jwtd`tokio::io::driver::registration::Registration::poll_ready (3 samples, 0.01%)</title><rect x="87.0128%" y="277" width="0.0144%" height="15" fill="rgb(245,132,34)" fg:x="18150" fg:w="3"/><text x="87.2628%" y="287.50"></text></g><g><title>jwtd`&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write_vectored (3 samples, 0.01%)</title><rect x="87.0703%" y="245" width="0.0144%" height="15" fill="rgb(236,54,3)" fg:x="18162" fg:w="3"/><text x="87.3203%" y="255.50"></text></g><g><title>jwtd`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (1,076 samples, 5.16%)</title><rect x="87.0607%" y="261" width="5.1584%" height="15" fill="rgb(241,173,43)" fg:x="18160" fg:w="1076"/><text x="87.3107%" y="271.50">jwtd`&lt;..</text></g><g><title>libsystem_kernel.dylib`writev (1,071 samples, 5.13%)</title><rect x="87.0847%" y="245" width="5.1345%" height="15" fill="rgb(215,190,9)" fg:x="18165" fg:w="1071"/><text x="87.3347%" y="255.50">libsys..</text></g><g><title>jwtd`tokio::io::driver::registration::Registration::poll_ready (14 samples, 0.07%)</title><rect x="92.2288%" y="261" width="0.0671%" height="15" fill="rgb(242,101,16)" fg:x="19238" fg:w="14"/><text x="92.4788%" y="271.50"></text></g><g><title>jwtd`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (5 samples, 0.02%)</title><rect x="92.2719%" y="245" width="0.0240%" height="15" fill="rgb(223,190,21)" fg:x="19247" fg:w="5"/><text x="92.5219%" y="255.50"></text></g><g><title>jwtd`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (1,106 samples, 5.30%)</title><rect x="87.0032%" y="293" width="5.3023%" height="15" fill="rgb(215,228,25)" fg:x="18148" fg:w="1106"/><text x="87.2532%" y="303.50">jwtd`&lt;..</text></g><g><title>jwtd`tokio::io::driver::registration::Registration::poll_write_io (1,101 samples, 5.28%)</title><rect x="87.0272%" y="277" width="5.2783%" height="15" fill="rgb(225,36,22)" fg:x="18153" fg:w="1101"/><text x="87.2772%" y="287.50">jwtd`t..</text></g><g><title>jwtd`tokio::io::driver::registration::Registration::poll_write_io (3 samples, 0.01%)</title><rect x="92.3103%" y="293" width="0.0144%" height="15" fill="rgb(251,106,46)" fg:x="19255" fg:w="3"/><text x="92.5603%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.03%)</title><rect x="92.3295%" y="293" width="0.0288%" height="15" fill="rgb(208,90,1)" fg:x="19259" fg:w="6"/><text x="92.5795%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.02%)</title><rect x="92.4014%" y="277" width="0.0192%" height="15" fill="rgb(243,10,4)" fg:x="19274" fg:w="4"/><text x="92.6514%" y="287.50"></text></g><g><title>jwtd`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (1,216 samples, 5.83%)</title><rect x="86.6580%" y="309" width="5.8296%" height="15" fill="rgb(212,137,27)" fg:x="18076" fg:w="1216"/><text x="86.9080%" y="319.50">jwtd`hy..</text></g><g><title>libsystem_malloc.dylib`free_tiny (27 samples, 0.13%)</title><rect x="92.3582%" y="293" width="0.1294%" height="15" fill="rgb(231,220,49)" fg:x="19265" fg:w="27"/><text x="92.6082%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.07%)</title><rect x="92.4205%" y="277" width="0.0671%" height="15" fill="rgb(237,96,20)" fg:x="19278" fg:w="14"/><text x="92.6705%" y="287.50"></text></g><g><title>jwtd`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (1,257 samples, 6.03%)</title><rect x="86.4854%" y="325" width="6.0262%" height="15" fill="rgb(239,229,30)" fg:x="18040" fg:w="1257"/><text x="86.7354%" y="335.50">jwtd`hyp..</text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="92.4972%" y="309" width="0.0144%" height="15" fill="rgb(219,65,33)" fg:x="19294" fg:w="3"/><text x="92.7472%" y="319.50"></text></g><g><title>jwtd`hyper::proto::h1::decode::Decoder::decode (7 samples, 0.03%)</title><rect x="92.5739%" y="309" width="0.0336%" height="15" fill="rgb(243,134,7)" fg:x="19310" fg:w="7"/><text x="92.8239%" y="319.50"></text></g><g><title>jwtd`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_body (23 samples, 0.11%)</title><rect x="92.5116%" y="325" width="0.1103%" height="15" fill="rgb(216,177,54)" fg:x="19297" fg:w="23"/><text x="92.7616%" y="335.50"></text></g><g><title>jwtd`hyper::proto::h1::decode::Decoder::is_eof (3 samples, 0.01%)</title><rect x="92.6075%" y="309" width="0.0144%" height="15" fill="rgb(211,160,20)" fg:x="19317" fg:w="3"/><text x="92.8575%" y="319.50"></text></g><g><title>jwtd`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (3 samples, 0.01%)</title><rect x="92.8041%" y="293" width="0.0144%" height="15" fill="rgb(239,85,39)" fg:x="19358" fg:w="3"/><text x="93.0541%" y="303.50"></text></g><g><title>jwtd`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (3 samples, 0.01%)</title><rect x="92.8616%" y="245" width="0.0144%" height="15" fill="rgb(232,125,22)" fg:x="19370" fg:w="3"/><text x="93.1116%" y="255.50"></text></g><g><title>jwtd`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (437 samples, 2.10%)</title><rect x="92.8568%" y="261" width="2.0950%" height="15" fill="rgb(244,57,34)" fg:x="19369" fg:w="437"/><text x="93.1068%" y="271.50">j..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (430 samples, 2.06%)</title><rect x="92.8904%" y="245" width="2.0615%" height="15" fill="rgb(214,203,32)" fg:x="19376" fg:w="430"/><text x="93.1404%" y="255.50">l..</text></g><g><title>jwtd`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (7 samples, 0.03%)</title><rect x="94.9806%" y="245" width="0.0336%" height="15" fill="rgb(207,58,43)" fg:x="19812" fg:w="7"/><text x="95.2306%" y="255.50"></text></g><g><title>jwtd`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (459 samples, 2.20%)</title><rect x="92.8184%" y="293" width="2.2005%" height="15" fill="rgb(215,193,15)" fg:x="19361" fg:w="459"/><text x="93.0684%" y="303.50">j..</text></g><g><title>jwtd`tokio::io::driver::registration::Registration::poll_read_io (457 samples, 2.19%)</title><rect x="92.8280%" y="277" width="2.1909%" height="15" fill="rgb(232,15,44)" fg:x="19363" fg:w="457"/><text x="93.0780%" y="287.50">j..</text></g><g><title>jwtd`tokio::io::driver::registration::Registration::poll_ready (14 samples, 0.07%)</title><rect x="94.9518%" y="261" width="0.0671%" height="15" fill="rgb(212,3,48)" fg:x="19806" fg:w="14"/><text x="95.2018%" y="271.50"></text></g><g><title>jwtd`__rust_alloc (3 samples, 0.01%)</title><rect x="95.3641%" y="261" width="0.0144%" height="15" fill="rgb(218,128,7)" fg:x="19892" fg:w="3"/><text x="95.6141%" y="271.50"></text></g><g><title>jwtd`__rust_probestack (3 samples, 0.01%)</title><rect x="95.3785%" y="261" width="0.0144%" height="15" fill="rgb(226,216,39)" fg:x="19895" fg:w="3"/><text x="95.6285%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="95.4121%" y="229" width="0.0144%" height="15" fill="rgb(243,47,51)" fg:x="19902" fg:w="3"/><text x="95.6621%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.02%)</title><rect x="95.4504%" y="213" width="0.0240%" height="15" fill="rgb(241,183,40)" fg:x="19910" fg:w="5"/><text x="95.7004%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (26 samples, 0.12%)</title><rect x="95.4264%" y="229" width="0.1246%" height="15" fill="rgb(231,217,32)" fg:x="19905" fg:w="26"/><text x="95.6764%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.08%)</title><rect x="95.4744%" y="213" width="0.0767%" height="15" fill="rgb(229,61,38)" fg:x="19915" fg:w="16"/><text x="95.7244%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.06%)</title><rect x="95.4888%" y="197" width="0.0623%" height="15" fill="rgb(225,210,5)" fg:x="19918" fg:w="13"/><text x="95.7388%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.02%)</title><rect x="95.5319%" y="181" width="0.0192%" height="15" fill="rgb(231,79,45)" fg:x="19927" fg:w="4"/><text x="95.7819%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (32 samples, 0.15%)</title><rect x="95.4073%" y="245" width="0.1534%" height="15" fill="rgb(224,100,7)" fg:x="19901" fg:w="32"/><text x="95.6573%" y="255.50"></text></g><g><title>jwtd`bytes::bytes::Bytes::copy_from_slice (37 samples, 0.18%)</title><rect x="95.3977%" y="261" width="0.1774%" height="15" fill="rgb(241,198,18)" fg:x="19899" fg:w="37"/><text x="95.6477%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="95.5607%" y="245" width="0.0144%" height="15" fill="rgb(252,97,53)" fg:x="19933" fg:w="3"/><text x="95.8107%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.01%)</title><rect x="95.6470%" y="181" width="0.0144%" height="15" fill="rgb(220,88,7)" fg:x="19951" fg:w="3"/><text x="95.8970%" y="191.50"></text></g><g><title>jwtd`bytes::bytes_mut::BytesMut::split_to (21 samples, 0.10%)</title><rect x="95.5894%" y="261" width="0.1007%" height="15" fill="rgb(213,176,14)" fg:x="19939" fg:w="21"/><text x="95.8394%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (18 samples, 0.09%)</title><rect x="95.6038%" y="245" width="0.0863%" height="15" fill="rgb(246,73,7)" fg:x="19942" fg:w="18"/><text x="95.8538%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (16 samples, 0.08%)</title><rect x="95.6134%" y="229" width="0.0767%" height="15" fill="rgb(245,64,36)" fg:x="19944" fg:w="16"/><text x="95.8634%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.07%)</title><rect x="95.6182%" y="213" width="0.0719%" height="15" fill="rgb(245,80,10)" fg:x="19945" fg:w="15"/><text x="95.8682%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.07%)</title><rect x="95.6230%" y="197" width="0.0671%" height="15" fill="rgb(232,107,50)" fg:x="19946" fg:w="14"/><text x="95.8730%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.02%)</title><rect x="95.6661%" y="181" width="0.0240%" height="15" fill="rgb(253,3,0)" fg:x="19955" fg:w="5"/><text x="95.9161%" y="191.50"></text></g><g><title>jwtd`bytes::bytes_mut::shared_v_clone (6 samples, 0.03%)</title><rect x="95.6901%" y="261" width="0.0288%" height="15" fill="rgb(212,99,53)" fg:x="19960" fg:w="6"/><text x="95.9401%" y="271.50"></text></g><g><title>jwtd`core::num::_&lt;impl core::str::traits::FromStr for u64&gt;::from_str (5 samples, 0.02%)</title><rect x="95.7237%" y="261" width="0.0240%" height="15" fill="rgb(249,111,54)" fg:x="19967" fg:w="5"/><text x="95.9737%" y="271.50"></text></g><g><title>jwtd`http::header::map::hash_elem_using (7 samples, 0.03%)</title><rect x="95.8004%" y="245" width="0.0336%" height="15" fill="rgb(249,55,30)" fg:x="19983" fg:w="7"/><text x="96.0504%" y="255.50"></text></g><g><title>jwtd`http::header::map::HeaderMap&lt;T&gt;::append (24 samples, 0.12%)</title><rect x="95.7476%" y="261" width="0.1151%" height="15" fill="rgb(237,47,42)" fg:x="19972" fg:w="24"/><text x="95.9976%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.03%)</title><rect x="95.8339%" y="245" width="0.0288%" height="15" fill="rgb(211,20,18)" fg:x="19990" fg:w="6"/><text x="96.0839%" y="255.50"></text></g><g><title>jwtd`http::header::name::HeaderName::from_bytes (24 samples, 0.12%)</title><rect x="95.8771%" y="261" width="0.1151%" height="15" fill="rgb(231,203,46)" fg:x="19999" fg:w="24"/><text x="96.1271%" y="271.50"></text></g><g><title>jwtd`http::header::name::parse_hdr (20 samples, 0.10%)</title><rect x="95.8963%" y="245" width="0.0959%" height="15" fill="rgb(237,142,3)" fg:x="20003" fg:w="20"/><text x="96.1463%" y="255.50"></text></g><g><title>jwtd`http::header::name::parse_hdr (4 samples, 0.02%)</title><rect x="95.9921%" y="261" width="0.0192%" height="15" fill="rgb(241,107,1)" fg:x="20023" fg:w="4"/><text x="96.2421%" y="271.50"></text></g><g><title>jwtd`http::method::Method::from_bytes (4 samples, 0.02%)</title><rect x="96.0209%" y="261" width="0.0192%" height="15" fill="rgb(229,83,13)" fg:x="20029" fg:w="4"/><text x="96.2709%" y="271.50"></text></g><g><title>jwtd`http::uri::Uri::from_shared (16 samples, 0.08%)</title><rect x="96.0401%" y="261" width="0.0767%" height="15" fill="rgb(241,91,40)" fg:x="20033" fg:w="16"/><text x="96.2901%" y="271.50"></text></g><g><title>jwtd`http::uri::path::PathAndQuery::from_shared (9 samples, 0.04%)</title><rect x="96.0736%" y="245" width="0.0431%" height="15" fill="rgb(225,3,45)" fg:x="20040" fg:w="9"/><text x="96.3236%" y="255.50"></text></g><g><title>jwtd`http::uri::path::PathAndQuery::from_shared (3 samples, 0.01%)</title><rect x="96.1168%" y="261" width="0.0144%" height="15" fill="rgb(244,223,14)" fg:x="20049" fg:w="3"/><text x="96.3668%" y="271.50"></text></g><g><title>jwtd`httparse::parse_headers_iter (38 samples, 0.18%)</title><rect x="96.2031%" y="245" width="0.1822%" height="15" fill="rgb(224,124,37)" fg:x="20067" fg:w="38"/><text x="96.4531%" y="255.50"></text></g><g><title>jwtd`httparse::simd::runtime::match_header_value_vectored (7 samples, 0.03%)</title><rect x="96.3517%" y="229" width="0.0336%" height="15" fill="rgb(251,171,30)" fg:x="20098" fg:w="7"/><text x="96.6017%" y="239.50"></text></g><g><title>jwtd`httparse::simd::avx2::match_header_value_char_32_avx (6 samples, 0.03%)</title><rect x="96.3565%" y="213" width="0.0288%" height="15" fill="rgb(236,46,54)" fg:x="20099" fg:w="6"/><text x="96.6065%" y="223.50"></text></g><g><title>jwtd`httparse::parse_version (3 samples, 0.01%)</title><rect x="96.3853%" y="245" width="0.0144%" height="15" fill="rgb(245,213,5)" fg:x="20105" fg:w="3"/><text x="96.6353%" y="255.50"></text></g><g><title>jwtd`httparse::simd::avx2::match_url_char_32_avx (3 samples, 0.01%)</title><rect x="96.3996%" y="245" width="0.0144%" height="15" fill="rgb(230,144,27)" fg:x="20108" fg:w="3"/><text x="96.6496%" y="255.50"></text></g><g><title>jwtd`httparse::Request::parse (68 samples, 0.33%)</title><rect x="96.1312%" y="261" width="0.3260%" height="15" fill="rgb(220,86,6)" fg:x="20052" fg:w="68"/><text x="96.3812%" y="271.50"></text></g><g><title>jwtd`httparse::simd::runtime::match_uri_vectored (9 samples, 0.04%)</title><rect x="96.4140%" y="245" width="0.0431%" height="15" fill="rgb(240,20,13)" fg:x="20111" fg:w="9"/><text x="96.6640%" y="255.50"></text></g><g><title>jwtd`httparse::simd::avx2::match_url_char_32_avx (8 samples, 0.04%)</title><rect x="96.4188%" y="229" width="0.0384%" height="15" fill="rgb(217,89,34)" fg:x="20112" fg:w="8"/><text x="96.6688%" y="239.50"></text></g><g><title>jwtd`httparse::simd::runtime::match_uri_vectored (7 samples, 0.03%)</title><rect x="96.4668%" y="261" width="0.0336%" height="15" fill="rgb(229,13,5)" fg:x="20122" fg:w="7"/><text x="96.7168%" y="271.50"></text></g><g><title>jwtd`hyper::proto::h1::role::record_header_indices (9 samples, 0.04%)</title><rect x="96.5051%" y="261" width="0.0431%" height="15" fill="rgb(244,67,35)" fg:x="20130" fg:w="9"/><text x="96.7551%" y="271.50"></text></g><g><title>jwtd`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (320 samples, 1.53%)</title><rect x="95.0861%" y="277" width="1.5341%" height="15" fill="rgb(221,40,2)" fg:x="19834" fg:w="320"/><text x="95.3361%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.07%)</title><rect x="96.5530%" y="261" width="0.0671%" height="15" fill="rgb(237,157,21)" fg:x="20140" fg:w="14"/><text x="96.8030%" y="271.50"></text></g><g><title>jwtd`&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="96.6202%" y="277" width="0.0144%" height="15" fill="rgb(222,94,11)" fg:x="20154" fg:w="3"/><text x="96.8702%" y="287.50"></text></g><g><title>jwtd`bytes::bytes_mut::BytesMut::split_to (4 samples, 0.02%)</title><rect x="96.6585%" y="277" width="0.0192%" height="15" fill="rgb(249,113,6)" fg:x="20162" fg:w="4"/><text x="96.9085%" y="287.50"></text></g><g><title>jwtd`core::num::_&lt;impl core::str::traits::FromStr for u64&gt;::from_str (5 samples, 0.02%)</title><rect x="96.6777%" y="277" width="0.0240%" height="15" fill="rgb(238,137,36)" fg:x="20166" fg:w="5"/><text x="96.9277%" y="287.50"></text></g><g><title>jwtd`http::header::map::HeaderMap&lt;T&gt;::append (3 samples, 0.01%)</title><rect x="96.7065%" y="277" width="0.0144%" height="15" fill="rgb(210,102,26)" fg:x="20172" fg:w="3"/><text x="96.9565%" y="287.50"></text></g><g><title>jwtd`http::header::name::HeaderName::from_bytes (4 samples, 0.02%)</title><rect x="96.7208%" y="277" width="0.0192%" height="15" fill="rgb(218,30,30)" fg:x="20175" fg:w="4"/><text x="96.9708%" y="287.50"></text></g><g><title>jwtd`hyper::body::length::DecodedLength::checked_new (5 samples, 0.02%)</title><rect x="96.7496%" y="277" width="0.0240%" height="15" fill="rgb(214,67,26)" fg:x="20181" fg:w="5"/><text x="96.9996%" y="287.50"></text></g><g><title>jwtd`hyper::proto::h1::role::record_header_indices (3 samples, 0.01%)</title><rect x="96.7736%" y="277" width="0.0144%" height="15" fill="rgb(251,9,53)" fg:x="20186" fg:w="3"/><text x="97.0236%" y="287.50"></text></g><g><title>jwtd`tracing::span::Span::record_all (8 samples, 0.04%)</title><rect x="96.7928%" y="277" width="0.0384%" height="15" fill="rgb(228,204,25)" fg:x="20190" fg:w="8"/><text x="97.0428%" y="287.50"></text></g><g><title>jwtd`hyper::proto::h1::role::parse_headers (379 samples, 1.82%)</title><rect x="95.0285%" y="293" width="1.8170%" height="15" fill="rgb(207,153,8)" fg:x="19822" fg:w="379"/><text x="95.2785%" y="303.50">j..</text></g><g><title>jwtd`tracing::span::Span::log (6 samples, 0.03%)</title><rect x="96.8551%" y="293" width="0.0288%" height="15" fill="rgb(242,9,16)" fg:x="20203" fg:w="6"/><text x="97.1051%" y="303.50"></text></g><g><title>jwtd`tracing::span::Span::record_all (4 samples, 0.02%)</title><rect x="96.8838%" y="293" width="0.0192%" height="15" fill="rgb(217,211,10)" fg:x="20209" fg:w="4"/><text x="97.1338%" y="303.50"></text></g><g><title>jwtd`tracing_core::metadata::Metadata::fields (5 samples, 0.02%)</title><rect x="96.9030%" y="293" width="0.0240%" height="15" fill="rgb(219,228,52)" fg:x="20213" fg:w="5"/><text x="97.1530%" y="303.50"></text></g><g><title>jwtd`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (896 samples, 4.30%)</title><rect x="92.6938%" y="309" width="4.2955%" height="15" fill="rgb(231,92,29)" fg:x="19335" fg:w="896"/><text x="92.9438%" y="319.50">jwtd`..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.06%)</title><rect x="96.9270%" y="293" width="0.0623%" height="15" fill="rgb(232,8,23)" fg:x="20218" fg:w="13"/><text x="97.1770%" y="303.50"></text></g><g><title>jwtd`hyper::proto::h1::role::parse_headers (3 samples, 0.01%)</title><rect x="97.0133%" y="309" width="0.0144%" height="15" fill="rgb(216,211,34)" fg:x="20236" fg:w="3"/><text x="97.2633%" y="319.50"></text></g><g><title>jwtd`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (926 samples, 4.44%)</title><rect x="92.6219%" y="325" width="4.4393%" height="15" fill="rgb(236,151,0)" fg:x="19320" fg:w="926"/><text x="92.8719%" y="335.50">jwtd`..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.03%)</title><rect x="97.0277%" y="309" width="0.0336%" height="15" fill="rgb(209,168,3)" fg:x="20239" fg:w="7"/><text x="97.2777%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`cerror (3 samples, 0.01%)</title><rect x="97.2338%" y="213" width="0.0144%" height="15" fill="rgb(208,129,28)" fg:x="20282" fg:w="3"/><text x="97.4838%" y="223.50"></text></g><g><title>jwtd`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (11 samples, 0.05%)</title><rect x="97.2194%" y="229" width="0.0527%" height="15" fill="rgb(229,78,22)" fg:x="20279" fg:w="11"/><text x="97.4694%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit_if_canceled (5 samples, 0.02%)</title><rect x="97.2482%" y="213" width="0.0240%" height="15" fill="rgb(228,187,13)" fg:x="20285" fg:w="5"/><text x="97.4982%" y="223.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__recvfrom (3 samples, 0.01%)</title><rect x="97.2722%" y="229" width="0.0144%" height="15" fill="rgb(240,119,24)" fg:x="20290" fg:w="3"/><text x="97.5222%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (166 samples, 0.80%)</title><rect x="97.2961%" y="229" width="0.7958%" height="15" fill="rgb(209,194,42)" fg:x="20295" fg:w="166"/><text x="97.5461%" y="239.50"></text></g><g><title>jwtd`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (190 samples, 0.91%)</title><rect x="97.2098%" y="245" width="0.9109%" height="15" fill="rgb(247,200,46)" fg:x="20277" fg:w="190"/><text x="97.4598%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`cerror (6 samples, 0.03%)</title><rect x="98.0920%" y="229" width="0.0288%" height="15" fill="rgb(218,76,16)" fg:x="20461" fg:w="6"/><text x="98.3420%" y="239.50"></text></g><g><title>jwtd`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (9 samples, 0.04%)</title><rect x="98.1830%" y="229" width="0.0431%" height="15" fill="rgb(225,21,48)" fg:x="20480" fg:w="9"/><text x="98.4330%" y="239.50"></text></g><g><title>jwtd`tokio::io::driver::registration::Registration::poll_ready (31 samples, 0.15%)</title><rect x="98.1495%" y="245" width="0.1486%" height="15" fill="rgb(239,223,50)" fg:x="20473" fg:w="31"/><text x="98.3995%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (13 samples, 0.06%)</title><rect x="98.2358%" y="229" width="0.0623%" height="15" fill="rgb(244,45,21)" fg:x="20491" fg:w="13"/><text x="98.4858%" y="239.50"></text></g><g><title>jwtd`tokio::io::driver::registration::Registration::poll_read_io (241 samples, 1.16%)</title><rect x="97.1523%" y="261" width="1.1554%" height="15" fill="rgb(232,33,43)" fg:x="20265" fg:w="241"/><text x="97.4023%" y="271.50"></text></g><g><title>jwtd`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (246 samples, 1.18%)</title><rect x="97.1427%" y="277" width="1.1793%" height="15" fill="rgb(209,8,3)" fg:x="20263" fg:w="246"/><text x="97.3927%" y="287.50"></text></g><g><title>jwtd`tokio::io::driver::registration::Registration::poll_ready (3 samples, 0.01%)</title><rect x="98.3077%" y="261" width="0.0144%" height="15" fill="rgb(214,25,53)" fg:x="20506" fg:w="3"/><text x="98.5577%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (3 samples, 0.01%)</title><rect x="98.4084%" y="197" width="0.0144%" height="15" fill="rgb(254,186,54)" fg:x="20527" fg:w="3"/><text x="98.6584%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (3 samples, 0.01%)</title><rect x="98.4227%" y="197" width="0.0144%" height="15" fill="rgb(208,174,49)" fg:x="20530" fg:w="3"/><text x="98.6727%" y="207.50"></text></g><g><title>jwtd`bytes::bytes_mut::BytesMut::reserve_inner (31 samples, 0.15%)</title><rect x="98.3221%" y="277" width="0.1486%" height="15" fill="rgb(233,191,51)" fg:x="20509" fg:w="31"/><text x="98.5721%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (24 samples, 0.12%)</title><rect x="98.3556%" y="261" width="0.1151%" height="15" fill="rgb(222,134,10)" fg:x="20516" fg:w="24"/><text x="98.6056%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (23 samples, 0.11%)</title><rect x="98.3604%" y="245" width="0.1103%" height="15" fill="rgb(230,226,20)" fg:x="20517" fg:w="23"/><text x="98.6104%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.11%)</title><rect x="98.3604%" y="229" width="0.1103%" height="15" fill="rgb(251,111,25)" fg:x="20517" fg:w="23"/><text x="98.6104%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (22 samples, 0.11%)</title><rect x="98.3652%" y="213" width="0.1055%" height="15" fill="rgb(224,40,46)" fg:x="20518" fg:w="22"/><text x="98.6152%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (7 samples, 0.03%)</title><rect x="98.4371%" y="197" width="0.0336%" height="15" fill="rgb(236,108,47)" fg:x="20533" fg:w="7"/><text x="98.6871%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (4 samples, 0.02%)</title><rect x="98.4515%" y="181" width="0.0192%" height="15" fill="rgb(234,93,0)" fg:x="20536" fg:w="4"/><text x="98.7015%" y="191.50"></text></g><g><title>jwtd`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (281 samples, 1.35%)</title><rect x="97.1283%" y="293" width="1.3471%" height="15" fill="rgb(224,213,32)" fg:x="20260" fg:w="281"/><text x="97.3783%" y="303.50"></text></g><g><title>jwtd`hyper::proto::h1::io::ReadStrategy::next (3 samples, 0.01%)</title><rect x="98.4755%" y="293" width="0.0144%" height="15" fill="rgb(251,11,48)" fg:x="20541" fg:w="3"/><text x="98.7255%" y="303.50"></text></g><g><title>jwtd`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (291 samples, 1.40%)</title><rect x="97.0996%" y="309" width="1.3951%" height="15" fill="rgb(236,173,5)" fg:x="20254" fg:w="291"/><text x="97.3496%" y="319.50"></text></g><g><title>jwtd`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (300 samples, 1.44%)</title><rect x="97.0612%" y="325" width="1.4382%" height="15" fill="rgb(230,95,12)" fg:x="20246" fg:w="300"/><text x="97.3112%" y="335.50"></text></g><g><title>jwtd`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (4 samples, 0.02%)</title><rect x="98.4994%" y="325" width="0.0192%" height="15" fill="rgb(232,209,1)" fg:x="20546" fg:w="4"/><text x="98.7494%" y="335.50"></text></g><g><title>jwtd`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (5 samples, 0.02%)</title><rect x="98.5666%" y="293" width="0.0240%" height="15" fill="rgb(232,6,1)" fg:x="20560" fg:w="5"/><text x="98.8166%" y="303.50"></text></g><g><title>jwtd`&lt;http::header::map::Drain&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="98.9405%" y="261" width="0.0192%" height="15" fill="rgb(210,224,50)" fg:x="20638" fg:w="4"/><text x="99.1905%" y="271.50"></text></g><g><title>jwtd`&lt;http::header::map::Drain&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="98.9453%" y="245" width="0.0144%" height="15" fill="rgb(228,127,35)" fg:x="20639" fg:w="3"/><text x="99.1953%" y="255.50"></text></g><g><title>jwtd`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.02%)</title><rect x="98.9597%" y="261" width="0.0192%" height="15" fill="rgb(245,102,45)" fg:x="20642" fg:w="4"/><text x="99.2097%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.01%)</title><rect x="98.9645%" y="245" width="0.0144%" height="15" fill="rgb(214,1,49)" fg:x="20643" fg:w="3"/><text x="99.2145%" y="255.50"></text></g><g><title>jwtd`itoa::Buffer::format (3 samples, 0.01%)</title><rect x="98.9837%" y="261" width="0.0144%" height="15" fill="rgb(226,163,40)" fg:x="20647" fg:w="3"/><text x="99.2337%" y="271.50"></text></g><g><title>jwtd`std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.02%)</title><rect x="98.9980%" y="261" width="0.0192%" height="15" fill="rgb(239,212,28)" fg:x="20650" fg:w="4"/><text x="99.2480%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.01%)</title><rect x="99.0028%" y="245" width="0.0144%" height="15" fill="rgb(220,20,13)" fg:x="20651" fg:w="3"/><text x="99.2528%" y="255.50"></text></g><g><title>jwtd`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (79 samples, 0.38%)</title><rect x="98.6672%" y="277" width="0.3787%" height="15" fill="rgb(210,164,35)" fg:x="20581" fg:w="79"/><text x="98.9172%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.03%)</title><rect x="99.0172%" y="261" width="0.0288%" height="15" fill="rgb(248,109,41)" fg:x="20654" fg:w="6"/><text x="99.2672%" y="271.50"></text></g><g><title>jwtd`bytes::bytes::static_drop (3 samples, 0.01%)</title><rect x="99.0604%" y="277" width="0.0144%" height="15" fill="rgb(238,23,50)" fg:x="20663" fg:w="3"/><text x="99.3104%" y="287.50"></text></g><g><title>jwtd`tracing::span::Span::log (3 samples, 0.01%)</title><rect x="99.0939%" y="277" width="0.0144%" height="15" fill="rgb(211,48,49)" fg:x="20670" fg:w="3"/><text x="99.3439%" y="287.50"></text></g><g><title>jwtd`tracing::span::Span::log (3 samples, 0.01%)</title><rect x="99.1323%" y="261" width="0.0144%" height="15" fill="rgb(223,36,21)" fg:x="20678" fg:w="3"/><text x="99.3823%" y="271.50"></text></g><g><title>jwtd`tracing::span::Span::record_all (10 samples, 0.05%)</title><rect x="99.1083%" y="277" width="0.0479%" height="15" fill="rgb(207,123,46)" fg:x="20673" fg:w="10"/><text x="99.3583%" y="287.50"></text></g><g><title>jwtd`hyper::proto::h1::role::encode_headers (121 samples, 0.58%)</title><rect x="98.5953%" y="293" width="0.5801%" height="15" fill="rgb(240,218,32)" fg:x="20566" fg:w="121"/><text x="98.8453%" y="303.50"></text></g><g><title>jwtd`tracing_core::metadata::Metadata::fields (4 samples, 0.02%)</title><rect x="99.1898%" y="293" width="0.0192%" height="15" fill="rgb(252,5,43)" fg:x="20690" fg:w="4"/><text x="99.4398%" y="303.50"></text></g><g><title>jwtd`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (144 samples, 0.69%)</title><rect x="98.5234%" y="309" width="0.6903%" height="15" fill="rgb(252,84,19)" fg:x="20551" fg:w="144"/><text x="98.7734%" y="319.50"></text></g><g><title>jwtd`hyper::proto::h1::conn::State::wants_keep_alive (3 samples, 0.01%)</title><rect x="99.2138%" y="309" width="0.0144%" height="15" fill="rgb(243,152,39)" fg:x="20695" fg:w="3"/><text x="99.4638%" y="319.50"></text></g><g><title>jwtd`hyper::proto::h1::encode::Encoder::danger_full_buf (8 samples, 0.04%)</title><rect x="99.2282%" y="309" width="0.0384%" height="15" fill="rgb(234,160,15)" fg:x="20698" fg:w="8"/><text x="99.4782%" y="319.50"></text></g><g><title>jwtd`hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (4 samples, 0.02%)</title><rect x="99.2473%" y="293" width="0.0192%" height="15" fill="rgb(237,34,20)" fg:x="20702" fg:w="4"/><text x="99.4973%" y="303.50"></text></g><g><title>jwtd`hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (3 samples, 0.01%)</title><rect x="99.2665%" y="309" width="0.0144%" height="15" fill="rgb(229,97,13)" fg:x="20706" fg:w="3"/><text x="99.5165%" y="319.50"></text></g><g><title>jwtd`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_full_msg (160 samples, 0.77%)</title><rect x="98.5186%" y="325" width="0.7671%" height="15" fill="rgb(234,71,50)" fg:x="20550" fg:w="160"/><text x="98.7686%" y="335.50"></text></g><g><title>jwtd`hyper::proto::h1::decode::Decoder::decode (8 samples, 0.04%)</title><rect x="99.2953%" y="325" width="0.0384%" height="15" fill="rgb(253,155,4)" fg:x="20712" fg:w="8"/><text x="99.5453%" y="335.50"></text></g><g><title>jwtd`hyper::proto::h1::decode::Decoder::new (4 samples, 0.02%)</title><rect x="99.3336%" y="325" width="0.0192%" height="15" fill="rgb(222,185,37)" fg:x="20720" fg:w="4"/><text x="99.5836%" y="335.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__commpage_gettimeofday (3 samples, 0.01%)</title><rect x="99.4055%" y="277" width="0.0144%" height="15" fill="rgb(251,177,13)" fg:x="20735" fg:w="3"/><text x="99.6555%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (5 samples, 0.02%)</title><rect x="99.4199%" y="261" width="0.0240%" height="15" fill="rgb(250,179,40)" fg:x="20738" fg:w="5"/><text x="99.6699%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (4 samples, 0.02%)</title><rect x="99.4247%" y="245" width="0.0192%" height="15" fill="rgb(242,44,2)" fg:x="20739" fg:w="4"/><text x="99.6747%" y="255.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (6 samples, 0.03%)</title><rect x="99.4199%" y="277" width="0.0288%" height="15" fill="rgb(216,177,13)" fg:x="20738" fg:w="6"/><text x="99.6699%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday (5 samples, 0.02%)</title><rect x="99.4487%" y="277" width="0.0240%" height="15" fill="rgb(216,106,43)" fg:x="20744" fg:w="5"/><text x="99.6987%" y="287.50"></text></g><g><title>jwtd`std::time::SystemTime::now (15 samples, 0.07%)</title><rect x="99.4055%" y="293" width="0.0719%" height="15" fill="rgb(216,183,2)" fg:x="20735" fg:w="15"/><text x="99.6555%" y="303.50"></text></g><g><title>jwtd`hyper::common::date::CachedDate::check (26 samples, 0.12%)</title><rect x="99.3912%" y="309" width="0.1246%" height="15" fill="rgb(249,75,3)" fg:x="20732" fg:w="26"/><text x="99.6412%" y="319.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (8 samples, 0.04%)</title><rect x="99.4774%" y="293" width="0.0384%" height="15" fill="rgb(219,67,39)" fg:x="20750" fg:w="8"/><text x="99.7274%" y="303.50"></text></g><g><title>jwtd`std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.16%)</title><rect x="99.3720%" y="325" width="0.1582%" height="15" fill="rgb(253,228,2)" fg:x="20728" fg:w="33"/><text x="99.6220%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.02%)</title><rect x="99.5398%" y="325" width="0.0240%" height="15" fill="rgb(235,138,27)" fg:x="20763" fg:w="5"/><text x="99.7898%" y="335.50"></text></g><g><title>jwtd`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (9,759 samples, 46.79%)</title><rect x="52.8405%" y="341" width="46.7856%" height="15" fill="rgb(236,97,51)" fg:x="11022" fg:w="9759"/><text x="53.0905%" y="351.50">jwtd`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.06%)</title><rect x="99.5637%" y="325" width="0.0623%" height="15" fill="rgb(240,80,30)" fg:x="20768" fg:w="13"/><text x="99.8137%" y="335.50"></text></g><g><title>jwtd`&lt;hyper::server::conn::spawn_all::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll (9,825 samples, 47.10%)</title><rect x="52.5337%" y="373" width="47.1020%" height="15" fill="rgb(230,178,19)" fg:x="10958" fg:w="9825"/><text x="52.7837%" y="383.50">jwtd`&lt;hyper::server::conn::spawn_all::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::..</text></g><g><title>jwtd`&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (9,808 samples, 47.02%)</title><rect x="52.6152%" y="357" width="47.0205%" height="15" fill="rgb(210,190,27)" fg:x="10975" fg:w="9808"/><text x="52.8652%" y="367.50">jwtd`&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::fu..</text></g><g><title>jwtd`core::ptr::drop_in_place$LT$hyper..proto..h1..dispatch..Server$LT$hyper..service..util..ServiceFn$LT$warp..server..Server$LT$warp..filter..or..Or$LT$warp..filter..or..Or$LT$warp..filter..or..Or$LT$warp..filter..or..Or$LT$warp..filter..and_then..AndThen$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filters..any..Any$C$warp..filters..path..Exact$LT$warp..filters..path..internal..Opaque$LT$jwtd..main..$u7b$$u7b$closure$u7d$$u7d$..__StaticPath$GT$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..path..end..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..method..method_is$LT$warp..filters..method..post..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..untuple_one..UntupleOne$LT$warp..filter..and_then..AndThen$LT$warp..filter..map_err..MapErr$LT$warp..filter..FilterFn$LT$warp..filter..filter_fn_one$LT$warp..filters..header..header� (3 samples, 0.01%)</title><rect x="99.6404%" y="357" width="0.0144%" height="15" fill="rgb(222,107,31)" fg:x="20784" fg:w="3"/><text x="99.8904%" y="367.50"></text></g><g><title>jwtd`core::ptr::drop_in_place$LT$tokio..runtime..task..core..Stage$LT$hyper..server..conn..spawn_all..NewSvcTask$LT$hyper..server..tcp..addr_stream..AddrStream$C$futures_util..future..ready..Ready$LT$core..result..Result$LT$hyper..service..util..ServiceFn$LT$warp..server..Server$LT$warp..filter..or..Or$LT$warp..filter..or..Or$LT$warp..filter..or..Or$LT$warp..filter..or..Or$LT$warp..filter..and_then..AndThen$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filter..and..And$LT$warp..filters..any..Any$C$warp..filters..path..Exact$LT$warp..filters..path..internal..Opaque$LT$jwtd..main..$u7b$$u7b$closure$u7d$$u7d$..__StaticPath$GT$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..path..end..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..FilterFn$LT$warp..filters..method..method_is$LT$warp..filters..method..post..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$C$warp..filter..untuple_one..UntupleOne$LT$w� (7 samples, 0.03%)</title><rect x="99.6404%" y="373" width="0.0336%" height="15" fill="rgb(216,127,34)" fg:x="20784" fg:w="7"/><text x="99.8904%" y="383.50"></text></g><g><title>jwtd`tokio::runtime::task::harness::poll_future (9,844 samples, 47.19%)</title><rect x="52.5097%" y="389" width="47.1931%" height="15" fill="rgb(234,116,52)" fg:x="10953" fg:w="9844"/><text x="52.7597%" y="399.50">jwtd`tokio::runtime::task::harness::poll_future</text></g><g><title>jwtd`tokio::runtime::task::state::State::transition_to_idle (6 samples, 0.03%)</title><rect x="99.6740%" y="373" width="0.0288%" height="15" fill="rgb(222,124,15)" fg:x="20791" fg:w="6"/><text x="99.9240%" y="383.50"></text></g><g><title>jwtd`tokio::runtime::task::state::Snapshot::is_notified (6 samples, 0.03%)</title><rect x="99.7028%" y="389" width="0.0288%" height="15" fill="rgb(231,179,28)" fg:x="20797" fg:w="6"/><text x="99.9528%" y="399.50"></text></g><g><title>jwtd`tokio::runtime::task::state::State::transition_to_idle (3 samples, 0.01%)</title><rect x="99.7315%" y="389" width="0.0144%" height="15" fill="rgb(226,93,45)" fg:x="20803" fg:w="3"/><text x="99.9815%" y="399.50"></text></g><g><title>jwtd`tokio::runtime::queue::Local&lt;T&gt;::push_back (3 samples, 0.01%)</title><rect x="99.8178%" y="325" width="0.0144%" height="15" fill="rgb(215,8,51)" fg:x="20821" fg:w="3"/><text x="100.0678%" y="335.50"></text></g><g><title>jwtd`tokio::runtime::thread_pool::worker::Shared::schedule::_{{closure}} (17 samples, 0.08%)</title><rect x="99.7843%" y="357" width="0.0815%" height="15" fill="rgb(223,106,5)" fg:x="20814" fg:w="17"/><text x="100.0343%" y="367.50"></text></g><g><title>jwtd`tokio::runtime::thread_pool::worker::Shared::schedule_local (10 samples, 0.05%)</title><rect x="99.8178%" y="341" width="0.0479%" height="15" fill="rgb(250,191,5)" fg:x="20821" fg:w="10"/><text x="100.0678%" y="351.50"></text></g><g><title>jwtd`tokio::runtime::thread_pool::idle::Idle::worker_to_notify (7 samples, 0.03%)</title><rect x="99.8322%" y="325" width="0.0336%" height="15" fill="rgb(242,132,44)" fg:x="20824" fg:w="7"/><text x="100.0822%" y="335.50"></text></g><g><title>jwtd`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (26 samples, 0.12%)</title><rect x="99.7555%" y="373" width="0.1246%" height="15" fill="rgb(251,152,29)" fg:x="20808" fg:w="26"/><text x="100.0055%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.01%)</title><rect x="99.8658%" y="357" width="0.0144%" height="15" fill="rgb(218,179,5)" fg:x="20831" fg:w="3"/><text x="100.1158%" y="367.50"></text></g><g><title>jwtd`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (9,890 samples, 47.41%)</title><rect x="52.4714%" y="405" width="47.4136%" height="15" fill="rgb(227,67,19)" fg:x="10945" fg:w="9890"/><text x="52.7214%" y="415.50">jwtd`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>jwtd`tokio::runtime::thread_pool::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::yield_now (28 samples, 0.13%)</title><rect x="99.7507%" y="389" width="0.1342%" height="15" fill="rgb(233,119,31)" fg:x="20807" fg:w="28"/><text x="100.0007%" y="399.50"></text></g><g><title>jwtd`tokio::runtime::task::harness::poll_future (3 samples, 0.01%)</title><rect x="99.8849%" y="405" width="0.0144%" height="15" fill="rgb(241,120,22)" fg:x="20835" fg:w="3"/><text x="100.1349%" y="415.50"></text></g><g><title>jwtd`tokio::runtime::task::raw::RawTask::from_raw (3 samples, 0.01%)</title><rect x="99.8993%" y="405" width="0.0144%" height="15" fill="rgb(224,102,30)" fg:x="20838" fg:w="3"/><text x="100.1493%" y="415.50"></text></g><g><title>jwtd`tokio::runtime::task::state::State::transition_to_running (5 samples, 0.02%)</title><rect x="99.9137%" y="405" width="0.0240%" height="15" fill="rgb(210,164,37)" fg:x="20841" fg:w="5"/><text x="100.1637%" y="415.50"></text></g><g><title>jwtd`std::thread::local::LocalKey&lt;T&gt;::with (9,919 samples, 47.55%)</title><rect x="52.4042%" y="421" width="47.5526%" height="15" fill="rgb(226,191,16)" fg:x="10931" fg:w="9919"/><text x="52.6542%" y="431.50">jwtd`std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>jwtd`tokio::runtime::thread_pool::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::yield_now (4 samples, 0.02%)</title><rect x="99.9377%" y="405" width="0.0192%" height="15" fill="rgb(214,40,45)" fg:x="20846" fg:w="4"/><text x="100.1877%" y="415.50"></text></g><g><title>jwtd`tokio::runtime::thread_pool::worker::Context::run (10,090 samples, 48.37%)</title><rect x="51.6228%" y="453" width="48.3724%" height="15" fill="rgb(244,29,26)" fg:x="10768" fg:w="10090"/><text x="51.8728%" y="463.50">jwtd`tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>jwtd`tokio::runtime::thread_pool::worker::Context::run_task (9,930 samples, 47.61%)</title><rect x="52.3899%" y="437" width="47.6054%" height="15" fill="rgb(216,16,5)" fg:x="10928" fg:w="9930"/><text x="52.6399%" y="447.50">jwtd`tokio::runtime::thread_pool::worker::Context::run_task</text></g><g><title>jwtd`tokio::runtime::task::raw::poll (6 samples, 0.03%)</title><rect x="99.9664%" y="421" width="0.0288%" height="15" fill="rgb(249,76,35)" fg:x="20852" fg:w="6"/><text x="100.2164%" y="431.50"></text></g><g><title>all (20,859 samples, 100%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(207,11,44)" fg:x="0" fg:w="20859"/><text x="0.2500%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (10,092 samples, 48.38%)</title><rect x="51.6180%" y="645" width="48.3820%" height="15" fill="rgb(228,190,49)" fg:x="10767" fg:w="10092"/><text x="51.8680%" y="655.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (10,092 samples, 48.38%)</title><rect x="51.6180%" y="629" width="48.3820%" height="15" fill="rgb(214,173,12)" fg:x="10767" fg:w="10092"/><text x="51.8680%" y="639.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_body (10,092 samples, 48.38%)</title><rect x="51.6180%" y="613" width="48.3820%" height="15" fill="rgb(218,26,35)" fg:x="10767" fg:w="10092"/><text x="51.8680%" y="623.50">libsystem_pthread.dylib`_pthread_body</text></g><g><title>jwtd`std::sys::unix::thread::Thread::new::thread_start (10,092 samples, 48.38%)</title><rect x="51.6180%" y="597" width="48.3820%" height="15" fill="rgb(220,200,19)" fg:x="10767" fg:w="10092"/><text x="51.8680%" y="607.50">jwtd`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>jwtd`core::ops::function::FnOnce::call_once{{vtable.shim}} (10,092 samples, 48.38%)</title><rect x="51.6180%" y="581" width="48.3820%" height="15" fill="rgb(239,95,49)" fg:x="10767" fg:w="10092"/><text x="51.8680%" y="591.50">jwtd`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>jwtd`std::sys_common::backtrace::__rust_begin_short_backtrace (10,092 samples, 48.38%)</title><rect x="51.6180%" y="565" width="48.3820%" height="15" fill="rgb(235,85,53)" fg:x="10767" fg:w="10092"/><text x="51.8680%" y="575.50">jwtd`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>jwtd`tokio::runtime::blocking::pool::Inner::run (10,092 samples, 48.38%)</title><rect x="51.6180%" y="549" width="48.3820%" height="15" fill="rgb(233,133,31)" fg:x="10767" fg:w="10092"/><text x="51.8680%" y="559.50">jwtd`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>jwtd`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (10,092 samples, 48.38%)</title><rect x="51.6180%" y="533" width="48.3820%" height="15" fill="rgb(218,25,20)" fg:x="10767" fg:w="10092"/><text x="51.8680%" y="543.50">jwtd`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>jwtd`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10,092 samples, 48.38%)</title><rect x="51.6180%" y="517" width="48.3820%" height="15" fill="rgb(252,210,38)" fg:x="10767" fg:w="10092"/><text x="51.8680%" y="527.50">jwtd`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOn..</text></g><g><title>jwtd`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (10,092 samples, 48.38%)</title><rect x="51.6180%" y="501" width="48.3820%" height="15" fill="rgb(242,134,21)" fg:x="10767" fg:w="10092"/><text x="51.8680%" y="511.50">jwtd`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>jwtd`tokio::runtime::thread_pool::worker::run (10,092 samples, 48.38%)</title><rect x="51.6180%" y="485" width="48.3820%" height="15" fill="rgb(213,28,48)" fg:x="10767" fg:w="10092"/><text x="51.8680%" y="495.50">jwtd`tokio::runtime::thread_pool::worker::run</text></g><g><title>jwtd`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (10,092 samples, 48.38%)</title><rect x="51.6180%" y="469" width="48.3820%" height="15" fill="rgb(250,196,2)" fg:x="10767" fg:w="10092"/><text x="51.8680%" y="479.50">jwtd`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g></svg></svg>