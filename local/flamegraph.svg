<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="662" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="645.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="645.00"> </text><svg id="frames" x="10" width="1180" total_samples="12306"><g><title>jwtd`GFp_bn_power5 (3 samples, 0.02%)</title><rect x="0.0000%" y="581" width="0.0244%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="591.50"></text></g><g><title>jwtd`_bn_sqr8x_internal (2 samples, 0.02%)</title><rect x="0.0244%" y="581" width="0.0163%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="2"/><text x="0.2744%" y="591.50"></text></g><g><title>0x700007c20f30 (6 samples, 0.05%)</title><rect x="0.0000%" y="597" width="0.0488%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="6"/><text x="0.2500%" y="607.50"></text></g><g><title>jwtd`GFp_bn_power5 (23 samples, 0.19%)</title><rect x="0.0488%" y="581" width="0.1869%" height="15" fill="rgb(248,212,6)" fg:x="6" fg:w="23"/><text x="0.2988%" y="591.50"></text></g><g><title>0x700007c20f70 (25 samples, 0.20%)</title><rect x="0.0488%" y="597" width="0.2032%" height="15" fill="rgb(208,68,35)" fg:x="6" fg:w="25"/><text x="0.2988%" y="607.50"></text></g><g><title>jwtd`_bn_sqr8x_internal (2 samples, 0.02%)</title><rect x="0.2357%" y="581" width="0.0163%" height="15" fill="rgb(232,128,0)" fg:x="29" fg:w="2"/><text x="0.4857%" y="591.50"></text></g><g><title>jwtd`GFp_bn_power5 (55 samples, 0.45%)</title><rect x="0.2519%" y="581" width="0.4469%" height="15" fill="rgb(207,160,47)" fg:x="31" fg:w="55"/><text x="0.5019%" y="591.50"></text></g><g><title>0x700007c21070 (56 samples, 0.46%)</title><rect x="0.2519%" y="597" width="0.4551%" height="15" fill="rgb(228,23,34)" fg:x="31" fg:w="56"/><text x="0.5019%" y="607.50"></text></g><g><title>0x700007e23f30 (4 samples, 0.03%)</title><rect x="0.7070%" y="597" width="0.0325%" height="15" fill="rgb(218,30,26)" fg:x="87" fg:w="4"/><text x="0.9570%" y="607.50"></text></g><g><title>jwtd`GFp_bn_power5 (4 samples, 0.03%)</title><rect x="0.7070%" y="581" width="0.0325%" height="15" fill="rgb(220,122,19)" fg:x="87" fg:w="4"/><text x="0.9570%" y="591.50"></text></g><g><title>0x700007e23f70 (27 samples, 0.22%)</title><rect x="0.7395%" y="597" width="0.2194%" height="15" fill="rgb(250,228,42)" fg:x="91" fg:w="27"/><text x="0.9895%" y="607.50"></text></g><g><title>jwtd`GFp_bn_power5 (27 samples, 0.22%)</title><rect x="0.7395%" y="581" width="0.2194%" height="15" fill="rgb(240,193,28)" fg:x="91" fg:w="27"/><text x="0.9895%" y="591.50"></text></g><g><title>jwtd`GFp_bn_power5 (35 samples, 0.28%)</title><rect x="0.9589%" y="581" width="0.2844%" height="15" fill="rgb(216,20,37)" fg:x="118" fg:w="35"/><text x="1.2089%" y="591.50"></text></g><g><title>0x700007e24070 (37 samples, 0.30%)</title><rect x="0.9589%" y="597" width="0.3007%" height="15" fill="rgb(206,188,39)" fg:x="118" fg:w="37"/><text x="1.2089%" y="607.50"></text></g><g><title>jwtd`_bn_sqr8x_internal (2 samples, 0.02%)</title><rect x="1.2433%" y="581" width="0.0163%" height="15" fill="rgb(217,207,13)" fg:x="153" fg:w="2"/><text x="1.4933%" y="591.50"></text></g><g><title>jwtd`jsonwebtoken::encoding::EncodingKey::from_rsa_pem (2 samples, 0.02%)</title><rect x="1.4464%" y="373" width="0.0163%" height="15" fill="rgb(231,73,38)" fg:x="178" fg:w="2"/><text x="1.6964%" y="383.50"></text></g><g><title>jwtd`jsonwebtoken::pem::decoder::PemEncodedKey::new (2 samples, 0.02%)</title><rect x="1.4464%" y="357" width="0.0163%" height="15" fill="rgb(225,20,46)" fg:x="178" fg:w="2"/><text x="1.6964%" y="367.50"></text></g><g><title>jwtd`once_cell::imp::OnceCell&lt;T&gt;::initialize (2 samples, 0.02%)</title><rect x="1.4464%" y="341" width="0.0163%" height="15" fill="rgb(210,31,41)" fg:x="178" fg:w="2"/><text x="1.6964%" y="351.50"></text></g><g><title>jwtd`once_cell::imp::initialize_or_wait (2 samples, 0.02%)</title><rect x="1.4464%" y="325" width="0.0163%" height="15" fill="rgb(221,200,47)" fg:x="178" fg:w="2"/><text x="1.6964%" y="335.50"></text></g><g><title>jwtd`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (2 samples, 0.02%)</title><rect x="1.4464%" y="309" width="0.0163%" height="15" fill="rgb(226,26,5)" fg:x="178" fg:w="2"/><text x="1.6964%" y="319.50"></text></g><g><title>libcrypto.3.dylib`ossl_init_config_ossl_ (2 samples, 0.02%)</title><rect x="1.4708%" y="229" width="0.0163%" height="15" fill="rgb(249,33,26)" fg:x="181" fg:w="2"/><text x="1.7208%" y="239.50"></text></g><g><title>libcrypto.3.dylib`ossl_config_int (2 samples, 0.02%)</title><rect x="1.4708%" y="213" width="0.0163%" height="15" fill="rgb(235,183,28)" fg:x="181" fg:w="2"/><text x="1.7208%" y="223.50"></text></g><g><title>libcrypto.3.dylib`CONF_modules_load_file_ex (2 samples, 0.02%)</title><rect x="1.4708%" y="197" width="0.0163%" height="15" fill="rgb(221,5,38)" fg:x="181" fg:w="2"/><text x="1.7208%" y="207.50"></text></g><g><title>jwtd`openssl_sys::init (3 samples, 0.02%)</title><rect x="1.4708%" y="357" width="0.0244%" height="15" fill="rgb(247,18,42)" fg:x="181" fg:w="3"/><text x="1.7208%" y="367.50"></text></g><g><title>jwtd`std::sync::once::Once::call_inner (3 samples, 0.02%)</title><rect x="1.4708%" y="341" width="0.0244%" height="15" fill="rgb(241,131,45)" fg:x="181" fg:w="3"/><text x="1.7208%" y="351.50"></text></g><g><title>libssl.3.dylib`OPENSSL_init_ssl (3 samples, 0.02%)</title><rect x="1.4708%" y="325" width="0.0244%" height="15" fill="rgb(249,31,29)" fg:x="181" fg:w="3"/><text x="1.7208%" y="335.50"></text></g><g><title>libcrypto.3.dylib`OPENSSL_init_crypto (3 samples, 0.02%)</title><rect x="1.4708%" y="309" width="0.0244%" height="15" fill="rgb(225,111,53)" fg:x="181" fg:w="3"/><text x="1.7208%" y="319.50"></text></g><g><title>libcrypto.3.dylib`CRYPTO_THREAD_run_once (3 samples, 0.02%)</title><rect x="1.4708%" y="293" width="0.0244%" height="15" fill="rgb(238,160,17)" fg:x="181" fg:w="3"/><text x="1.7208%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (3 samples, 0.02%)</title><rect x="1.4708%" y="277" width="0.0244%" height="15" fill="rgb(214,148,48)" fg:x="181" fg:w="3"/><text x="1.7208%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (3 samples, 0.02%)</title><rect x="1.4708%" y="261" width="0.0244%" height="15" fill="rgb(232,36,49)" fg:x="181" fg:w="3"/><text x="1.7208%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`__pthread_once_handler (3 samples, 0.02%)</title><rect x="1.4708%" y="245" width="0.0244%" height="15" fill="rgb(209,103,24)" fg:x="181" fg:w="3"/><text x="1.7208%" y="255.50"></text></g><g><title>jwtd`0x1 (9 samples, 0.07%)</title><rect x="1.4383%" y="597" width="0.0731%" height="15" fill="rgb(229,88,8)" fg:x="177" fg:w="9"/><text x="1.6883%" y="607.50"></text></g><g><title>libdyld.dylib`start (9 samples, 0.07%)</title><rect x="1.4383%" y="581" width="0.0731%" height="15" fill="rgb(213,181,19)" fg:x="177" fg:w="9"/><text x="1.6883%" y="591.50"></text></g><g><title>jwtd`main (9 samples, 0.07%)</title><rect x="1.4383%" y="565" width="0.0731%" height="15" fill="rgb(254,191,54)" fg:x="177" fg:w="9"/><text x="1.6883%" y="575.50"></text></g><g><title>jwtd`std::rt::lang_start_internal (9 samples, 0.07%)</title><rect x="1.4383%" y="549" width="0.0731%" height="15" fill="rgb(241,83,37)" fg:x="177" fg:w="9"/><text x="1.6883%" y="559.50"></text></g><g><title>jwtd`std::rt::lang_start::_{{closure}} (9 samples, 0.07%)</title><rect x="1.4383%" y="533" width="0.0731%" height="15" fill="rgb(233,36,39)" fg:x="177" fg:w="9"/><text x="1.6883%" y="543.50"></text></g><g><title>jwtd`std::sys_common::backtrace::__rust_begin_short_backtrace (9 samples, 0.07%)</title><rect x="1.4383%" y="517" width="0.0731%" height="15" fill="rgb(226,3,54)" fg:x="177" fg:w="9"/><text x="1.6883%" y="527.50"></text></g><g><title>jwtd`jwtd::main (9 samples, 0.07%)</title><rect x="1.4383%" y="501" width="0.0731%" height="15" fill="rgb(245,192,40)" fg:x="177" fg:w="9"/><text x="1.6883%" y="511.50"></text></g><g><title>jwtd`tokio::runtime::Runtime::block_on (9 samples, 0.07%)</title><rect x="1.4383%" y="485" width="0.0731%" height="15" fill="rgb(238,167,29)" fg:x="177" fg:w="9"/><text x="1.6883%" y="495.50"></text></g><g><title>jwtd`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (9 samples, 0.07%)</title><rect x="1.4383%" y="469" width="0.0731%" height="15" fill="rgb(232,182,51)" fg:x="177" fg:w="9"/><text x="1.6883%" y="479.50"></text></g><g><title>jwtd`tokio::runtime::basic_scheduler::Context::enter (9 samples, 0.07%)</title><rect x="1.4383%" y="453" width="0.0731%" height="15" fill="rgb(231,60,39)" fg:x="177" fg:w="9"/><text x="1.6883%" y="463.50"></text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.07%)</title><rect x="1.4383%" y="437" width="0.0731%" height="15" fill="rgb(208,69,12)" fg:x="177" fg:w="9"/><text x="1.6883%" y="447.50"></text></g><g><title>jwtd`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (9 samples, 0.07%)</title><rect x="1.4383%" y="421" width="0.0731%" height="15" fill="rgb(235,93,37)" fg:x="177" fg:w="9"/><text x="1.6883%" y="431.50"></text></g><g><title>jwtd`std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.07%)</title><rect x="1.4383%" y="405" width="0.0731%" height="15" fill="rgb(213,116,39)" fg:x="177" fg:w="9"/><text x="1.6883%" y="415.50"></text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.07%)</title><rect x="1.4383%" y="389" width="0.0731%" height="15" fill="rgb(222,207,29)" fg:x="177" fg:w="9"/><text x="1.6883%" y="399.50"></text></g><g><title>jwtd`openssl::rsa::Rsa&lt;openssl::pkey::Private&gt;::private_key_from_pem (5 samples, 0.04%)</title><rect x="1.4708%" y="373" width="0.0406%" height="15" fill="rgb(206,96,30)" fg:x="181" fg:w="5"/><text x="1.7208%" y="383.50"></text></g><g><title>libcrypto.3.dylib`PEM_read_bio_RSAPrivateKey (2 samples, 0.02%)</title><rect x="1.4952%" y="357" width="0.0163%" height="15" fill="rgb(218,138,4)" fg:x="184" fg:w="2"/><text x="1.7452%" y="367.50"></text></g><g><title>libcrypto.3.dylib`PEM_read_bio_PrivateKey (2 samples, 0.02%)</title><rect x="1.4952%" y="341" width="0.0163%" height="15" fill="rgb(250,191,14)" fg:x="184" fg:w="2"/><text x="1.7452%" y="351.50"></text></g><g><title>libcrypto.3.dylib`pem_read_bio_key (2 samples, 0.02%)</title><rect x="1.4952%" y="325" width="0.0163%" height="15" fill="rgb(239,60,40)" fg:x="184" fg:w="2"/><text x="1.7452%" y="335.50"></text></g><g><title>libcrypto.3.dylib`OSSL_DECODER_CTX_new_for_pkey (2 samples, 0.02%)</title><rect x="1.4952%" y="309" width="0.0163%" height="15" fill="rgb(206,27,48)" fg:x="184" fg:w="2"/><text x="1.7452%" y="319.50"></text></g><g><title>jwtd`GFp_bn_power5 (106 samples, 0.86%)</title><rect x="1.5196%" y="597" width="0.8614%" height="15" fill="rgb(225,35,8)" fg:x="187" fg:w="106"/><text x="1.7696%" y="607.50"></text></g><g><title>jwtd`_bn_post4x_internal (702 samples, 5.70%)</title><rect x="2.3810%" y="597" width="5.7045%" height="15" fill="rgb(250,213,24)" fg:x="293" fg:w="702"/><text x="2.6310%" y="607.50">jwtd`_b..</text></g><g><title>jwtd`_bn_sqr8x_internal (1,872 samples, 15.21%)</title><rect x="8.0855%" y="597" width="15.2121%" height="15" fill="rgb(247,123,22)" fg:x="995" fg:w="1872"/><text x="8.3355%" y="607.50">jwtd`_bn_sqr8x_internal</text></g><g><title>jwtd`_bn_sqr8x_reduction (1,823 samples, 14.81%)</title><rect x="23.2976%" y="597" width="14.8139%" height="15" fill="rgb(231,138,38)" fg:x="2867" fg:w="1823"/><text x="23.5476%" y="607.50">jwtd`_bn_sqr8x_reduction</text></g><g><title>jwtd`bn_from_mont8x (3 samples, 0.02%)</title><rect x="38.1115%" y="597" width="0.0244%" height="15" fill="rgb(231,145,46)" fg:x="4690" fg:w="3"/><text x="38.3615%" y="607.50"></text></g><g><title>jwtd`bn_mul4x_mont (3 samples, 0.02%)</title><rect x="38.1359%" y="597" width="0.0244%" height="15" fill="rgb(251,118,11)" fg:x="4693" fg:w="3"/><text x="38.3859%" y="607.50"></text></g><g><title>jwtd`bn_mul4x_mont_gather5 (13 samples, 0.11%)</title><rect x="38.1602%" y="597" width="0.1056%" height="15" fill="rgb(217,147,25)" fg:x="4696" fg:w="13"/><text x="38.4102%" y="607.50"></text></g><g><title>jwtd`bn_sqr8x_mont (60 samples, 0.49%)</title><rect x="38.2659%" y="597" width="0.4876%" height="15" fill="rgb(247,81,37)" fg:x="4709" fg:w="60"/><text x="38.5159%" y="607.50"></text></g><g><title>jwtd`mul4x_internal (572 samples, 4.65%)</title><rect x="38.7535%" y="597" width="4.6481%" height="15" fill="rgb(209,12,38)" fg:x="4769" fg:w="572"/><text x="39.0035%" y="607.50">jwtd`..</text></g><g><title>jwtd`actix_server::accept::Accept::accept (8 samples, 0.07%)</title><rect x="43.4178%" y="485" width="0.0650%" height="15" fill="rgb(227,1,9)" fg:x="5343" fg:w="8"/><text x="43.6678%" y="495.50"></text></g><g><title>jwtd`mio::net::tcp::listener::TcpListener::accept (6 samples, 0.05%)</title><rect x="43.4341%" y="469" width="0.0488%" height="15" fill="rgb(248,47,43)" fg:x="5345" fg:w="6"/><text x="43.6841%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__accept (6 samples, 0.05%)</title><rect x="43.4341%" y="453" width="0.0488%" height="15" fill="rgb(221,10,30)" fg:x="5345" fg:w="6"/><text x="43.6841%" y="463.50"></text></g><g><title>jwtd`actix_server::accept::Accept::poll_with (12 samples, 0.10%)</title><rect x="43.4097%" y="501" width="0.0975%" height="15" fill="rgb(210,229,1)" fg:x="5342" fg:w="12"/><text x="43.6597%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`kevent (2 samples, 0.02%)</title><rect x="43.4910%" y="485" width="0.0163%" height="15" fill="rgb(222,148,37)" fg:x="5352" fg:w="2"/><text x="43.7410%" y="495.50"></text></g><g><title>jwtd`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Unpark&gt;::unpark (7 samples, 0.06%)</title><rect x="43.5560%" y="405" width="0.0569%" height="15" fill="rgb(234,67,33)" fg:x="5360" fg:w="7"/><text x="43.8060%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`kevent (7 samples, 0.06%)</title><rect x="43.5560%" y="389" width="0.0569%" height="15" fill="rgb(247,98,35)" fg:x="5360" fg:w="7"/><text x="43.8060%" y="399.50"></text></g><g><title>jwtd`std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="43.6129%" y="405" width="0.0163%" height="15" fill="rgb(247,138,52)" fg:x="5367" fg:w="2"/><text x="43.8629%" y="415.50"></text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.04%)</title><rect x="43.9135%" y="357" width="0.0406%" height="15" fill="rgb(213,79,30)" fg:x="5404" fg:w="5"/><text x="44.1635%" y="367.50"></text></g><g><title>jwtd`tokio::time::interval::Interval::poll_tick (5 samples, 0.04%)</title><rect x="43.9135%" y="341" width="0.0406%" height="15" fill="rgb(246,177,23)" fg:x="5404" fg:w="5"/><text x="44.1635%" y="351.50"></text></g><g><title>jwtd`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::reregister (4 samples, 0.03%)</title><rect x="43.9217%" y="325" width="0.0325%" height="15" fill="rgb(230,62,27)" fg:x="5405" fg:w="4"/><text x="44.1717%" y="335.50"></text></g><g><title>jwtd`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Unpark&gt;::unpark (4 samples, 0.03%)</title><rect x="43.9217%" y="309" width="0.0325%" height="15" fill="rgb(216,154,8)" fg:x="5405" fg:w="4"/><text x="44.1717%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`kevent (3 samples, 0.02%)</title><rect x="43.9298%" y="293" width="0.0244%" height="15" fill="rgb(244,35,45)" fg:x="5406" fg:w="3"/><text x="44.1798%" y="303.50"></text></g><g><title>jwtd`actix_server::socket::unix_impl::_&lt;impl actix_server::socket::FromStream for tokio::net::tcp::stream::TcpStream&gt;::from_mio (3 samples, 0.02%)</title><rect x="43.9948%" y="309" width="0.0244%" height="15" fill="rgb(251,115,12)" fg:x="5414" fg:w="3"/><text x="44.2448%" y="319.50"></text></g><g><title>jwtd`tokio::net::tcp::stream::TcpStream::from_std (2 samples, 0.02%)</title><rect x="44.0029%" y="293" width="0.0163%" height="15" fill="rgb(240,54,50)" fg:x="5415" fg:w="2"/><text x="44.2529%" y="303.50"></text></g><g><title>jwtd`tokio::io::poll_evented::PollEvented&lt;E&gt;::new (2 samples, 0.02%)</title><rect x="44.0029%" y="277" width="0.0163%" height="15" fill="rgb(233,84,52)" fg:x="5415" fg:w="2"/><text x="44.2529%" y="287.50"></text></g><g><title>jwtd`tokio::io::driver::Inner::add_source (2 samples, 0.02%)</title><rect x="44.0029%" y="261" width="0.0163%" height="15" fill="rgb(207,117,47)" fg:x="5415" fg:w="2"/><text x="44.2529%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`kevent (2 samples, 0.02%)</title><rect x="44.0029%" y="245" width="0.0163%" height="15" fill="rgb(249,43,39)" fg:x="5415" fg:w="2"/><text x="44.2529%" y="255.50"></text></g><g><title>jwtd`&lt;actix_server::worker::ServerWorker as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="43.9948%" y="341" width="0.0325%" height="15" fill="rgb(209,38,44)" fg:x="5414" fg:w="4"/><text x="44.2448%" y="351.50"></text></g><g><title>jwtd`&lt;actix_server::service::StreamService&lt;S,I&gt; as actix_service::Service&lt;(actix_server::worker::WorkerCounterGuard,actix_server::socket::MioStream)&gt;&gt;::call (4 samples, 0.03%)</title><rect x="43.9948%" y="325" width="0.0325%" height="15" fill="rgb(236,212,23)" fg:x="5414" fg:w="4"/><text x="44.2448%" y="335.50"></text></g><g><title>jwtd`&lt;actix_http::h1::dispatcher::Dispatcher&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="44.0842%" y="325" width="0.0163%" height="15" fill="rgb(242,79,21)" fg:x="5425" fg:w="2"/><text x="44.3342%" y="335.50"></text></g><g><title>jwtd`&lt;actix_http::h1::codec::Codec as tokio_util::codec::decoder::Decoder&gt;::decode (3 samples, 0.02%)</title><rect x="44.5149%" y="293" width="0.0244%" height="15" fill="rgb(211,96,35)" fg:x="5478" fg:w="3"/><text x="44.7649%" y="303.50"></text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.03%)</title><rect x="44.5474%" y="293" width="0.0325%" height="15" fill="rgb(253,215,40)" fg:x="5482" fg:w="4"/><text x="44.7974%" y="303.50"></text></g><g><title>jwtd`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (3 samples, 0.02%)</title><rect x="44.5961%" y="293" width="0.0244%" height="15" fill="rgb(211,81,21)" fg:x="5488" fg:w="3"/><text x="44.8461%" y="303.50"></text></g><g><title>jwtd`&lt;tokio::time::driver::sleep::Sleep as core::future::future::Future&gt;::poll (6 samples, 0.05%)</title><rect x="44.6205%" y="293" width="0.0488%" height="15" fill="rgb(208,190,38)" fg:x="5491" fg:w="6"/><text x="44.8705%" y="303.50"></text></g><g><title>jwtd`__rdl_alloc (2 samples, 0.02%)</title><rect x="44.6774%" y="293" width="0.0163%" height="15" fill="rgb(235,213,38)" fg:x="5498" fg:w="2"/><text x="44.9274%" y="303.50"></text></g><g><title>jwtd`__rdl_dealloc (2 samples, 0.02%)</title><rect x="44.6936%" y="293" width="0.0163%" height="15" fill="rgb(237,122,38)" fg:x="5500" fg:w="2"/><text x="44.9436%" y="303.50"></text></g><g><title>jwtd`actix_http::config::ServiceConfig::keep_alive_deadline (7 samples, 0.06%)</title><rect x="44.7261%" y="293" width="0.0569%" height="15" fill="rgb(244,218,35)" fg:x="5504" fg:w="7"/><text x="44.9761%" y="303.50"></text></g><g><title>jwtd`&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (3 samples, 0.02%)</title><rect x="44.7587%" y="277" width="0.0244%" height="15" fill="rgb(240,68,47)" fg:x="5508" fg:w="3"/><text x="45.0087%" y="287.50"></text></g><g><title>jwtd`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (2 samples, 0.02%)</title><rect x="44.8318%" y="261" width="0.0163%" height="15" fill="rgb(210,16,53)" fg:x="5517" fg:w="2"/><text x="45.0818%" y="271.50"></text></g><g><title>jwtd`tokio::io::driver::registration::Registration::poll_ready (5 samples, 0.04%)</title><rect x="44.8480%" y="261" width="0.0406%" height="15" fill="rgb(235,124,12)" fg:x="5519" fg:w="5"/><text x="45.0980%" y="271.50"></text></g><g><title>jwtd`&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.02%)</title><rect x="44.9456%" y="229" width="0.0163%" height="15" fill="rgb(224,169,11)" fg:x="5531" fg:w="2"/><text x="45.1956%" y="239.50"></text></g><g><title>libsystem_c.dylib`send (2 samples, 0.02%)</title><rect x="44.9699%" y="229" width="0.0163%" height="15" fill="rgb(250,166,2)" fg:x="5534" fg:w="2"/><text x="45.2199%" y="239.50"></text></g><g><title>jwtd`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (865 samples, 7.03%)</title><rect x="44.9293%" y="245" width="7.0291%" height="15" fill="rgb(242,216,29)" fg:x="5529" fg:w="865"/><text x="45.1793%" y="255.50">jwtd`&lt;&amp;mi..</text></g><g><title>libsystem_kernel.dylib`__sendto (858 samples, 6.97%)</title><rect x="44.9862%" y="229" width="6.9722%" height="15" fill="rgb(230,116,27)" fg:x="5536" fg:w="858"/><text x="45.2362%" y="239.50">libsystem..</text></g><g><title>jwtd`&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (4 samples, 0.03%)</title><rect x="51.9584%" y="245" width="0.0325%" height="15" fill="rgb(228,99,48)" fg:x="6394" fg:w="4"/><text x="52.2084%" y="255.50"></text></g><g><title>jwtd`tokio::io::driver::registration::Registration::poll_ready (4 samples, 0.03%)</title><rect x="51.9909%" y="245" width="0.0325%" height="15" fill="rgb(253,11,6)" fg:x="6398" fg:w="4"/><text x="52.2409%" y="255.50"></text></g><g><title>jwtd`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (4 samples, 0.03%)</title><rect x="51.9909%" y="229" width="0.0325%" height="15" fill="rgb(247,143,39)" fg:x="6398" fg:w="4"/><text x="52.2409%" y="239.50"></text></g><g><title>jwtd`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (2 samples, 0.02%)</title><rect x="52.0234%" y="245" width="0.0163%" height="15" fill="rgb(236,97,10)" fg:x="6402" fg:w="2"/><text x="52.2734%" y="255.50"></text></g><g><title>jwtd`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (889 samples, 7.22%)</title><rect x="44.8237%" y="277" width="7.2241%" height="15" fill="rgb(233,208,19)" fg:x="5516" fg:w="889"/><text x="45.0737%" y="287.50">jwtd`&lt;toki..</text></g><g><title>jwtd`tokio::io::driver::registration::Registration::poll_write_io (881 samples, 7.16%)</title><rect x="44.8887%" y="261" width="7.1591%" height="15" fill="rgb(216,164,2)" fg:x="5524" fg:w="881"/><text x="45.1387%" y="271.50">jwtd`tokio..</text></g><g><title>jwtd`actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_flush (895 samples, 7.27%)</title><rect x="44.7830%" y="293" width="7.2729%" height="15" fill="rgb(220,129,5)" fg:x="5511" fg:w="895"/><text x="45.0330%" y="303.50">jwtd`actix..</text></g><g><title>jwtd`&lt;actix_http::h1::decoder::PayloadDecoder as tokio_util::codec::decoder::Decoder&gt;::decode (14 samples, 0.11%)</title><rect x="52.6166%" y="261" width="0.1138%" height="15" fill="rgb(242,17,10)" fg:x="6475" fg:w="14"/><text x="52.8666%" y="271.50"></text></g><g><title>jwtd`bytes::bytes_mut::BytesMut::split_to (5 samples, 0.04%)</title><rect x="52.6897%" y="245" width="0.0406%" height="15" fill="rgb(242,107,0)" fg:x="6484" fg:w="5"/><text x="52.9397%" y="255.50"></text></g><g><title>jwtd`__rust_probestack (3 samples, 0.02%)</title><rect x="52.9985%" y="245" width="0.0244%" height="15" fill="rgb(251,28,31)" fg:x="6522" fg:w="3"/><text x="53.2485%" y="255.50"></text></g><g><title>jwtd`&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="53.0879%" y="229" width="0.0163%" height="15" fill="rgb(233,223,10)" fg:x="6533" fg:w="2"/><text x="53.3379%" y="239.50"></text></g><g><title>jwtd`actix_http::header::map::HeaderMap::append (14 samples, 0.11%)</title><rect x="53.0229%" y="245" width="0.1138%" height="15" fill="rgb(215,21,27)" fg:x="6525" fg:w="14"/><text x="53.2729%" y="255.50"></text></g><g><title>jwtd`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (4 samples, 0.03%)</title><rect x="53.1042%" y="229" width="0.0325%" height="15" fill="rgb(232,23,21)" fg:x="6535" fg:w="4"/><text x="53.3542%" y="239.50"></text></g><g><title>jwtd`actix_http::requests::head::REQUEST_POOL::__getit (2 samples, 0.02%)</title><rect x="53.1367%" y="245" width="0.0163%" height="15" fill="rgb(244,5,23)" fg:x="6539" fg:w="2"/><text x="53.3867%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.11%)</title><rect x="53.2017%" y="197" width="0.1056%" height="15" fill="rgb(226,81,46)" fg:x="6547" fg:w="13"/><text x="53.4517%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.09%)</title><rect x="53.2179%" y="181" width="0.0894%" height="15" fill="rgb(247,70,30)" fg:x="6549" fg:w="11"/><text x="53.4679%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.02%)</title><rect x="53.2911%" y="165" width="0.0163%" height="15" fill="rgb(212,68,19)" fg:x="6558" fg:w="2"/><text x="53.5411%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (15 samples, 0.12%)</title><rect x="53.1936%" y="213" width="0.1219%" height="15" fill="rgb(240,187,13)" fg:x="6546" fg:w="15"/><text x="53.4436%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (18 samples, 0.15%)</title><rect x="53.1854%" y="229" width="0.1463%" height="15" fill="rgb(223,113,26)" fg:x="6545" fg:w="18"/><text x="53.4354%" y="239.50"></text></g><g><title>jwtd`bytes::bytes::Bytes::copy_from_slice (24 samples, 0.20%)</title><rect x="53.1611%" y="245" width="0.1950%" height="15" fill="rgb(206,192,2)" fg:x="6542" fg:w="24"/><text x="53.4111%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="53.3317%" y="229" width="0.0244%" height="15" fill="rgb(241,108,4)" fg:x="6563" fg:w="3"/><text x="53.5817%" y="239.50"></text></g><g><title>jwtd`bytes::bytes::Bytes::slice (6 samples, 0.05%)</title><rect x="53.3561%" y="245" width="0.0488%" height="15" fill="rgb(247,173,49)" fg:x="6566" fg:w="6"/><text x="53.6061%" y="255.50"></text></g><g><title>jwtd`bytes::bytes_mut::shared_v_clone (4 samples, 0.03%)</title><rect x="53.3723%" y="229" width="0.0325%" height="15" fill="rgb(224,114,35)" fg:x="6568" fg:w="4"/><text x="53.6223%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="53.4048%" y="229" width="0.0244%" height="15" fill="rgb(245,159,27)" fg:x="6572" fg:w="3"/><text x="53.6548%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.02%)</title><rect x="53.4048%" y="213" width="0.0244%" height="15" fill="rgb(245,172,44)" fg:x="6572" fg:w="3"/><text x="53.6548%" y="223.50"></text></g><g><title>jwtd`bytes::bytes::promotable_even_drop (18 samples, 0.15%)</title><rect x="53.4048%" y="245" width="0.1463%" height="15" fill="rgb(236,23,11)" fg:x="6572" fg:w="18"/><text x="53.6548%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.12%)</title><rect x="53.4292%" y="229" width="0.1219%" height="15" fill="rgb(205,117,38)" fg:x="6575" fg:w="15"/><text x="53.6792%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.06%)</title><rect x="53.4942%" y="213" width="0.0569%" height="15" fill="rgb(237,72,25)" fg:x="6583" fg:w="7"/><text x="53.7442%" y="223.50"></text></g><g><title>jwtd`bytes::bytes::static_drop (3 samples, 0.02%)</title><rect x="53.5511%" y="245" width="0.0244%" height="15" fill="rgb(244,70,9)" fg:x="6590" fg:w="3"/><text x="53.8011%" y="255.50"></text></g><g><title>jwtd`bytes::bytes_mut::BytesMut::freeze (2 samples, 0.02%)</title><rect x="53.5755%" y="245" width="0.0163%" height="15" fill="rgb(217,125,39)" fg:x="6593" fg:w="2"/><text x="53.8255%" y="255.50"></text></g><g><title>jwtd`bytes::bytes_mut::BytesMut::split_to (8 samples, 0.07%)</title><rect x="53.5917%" y="245" width="0.0650%" height="15" fill="rgb(235,36,10)" fg:x="6595" fg:w="8"/><text x="53.8417%" y="255.50"></text></g><g><title>jwtd`bytes::bytes_mut::shared_v_drop (2 samples, 0.02%)</title><rect x="53.6568%" y="245" width="0.0163%" height="15" fill="rgb(251,123,47)" fg:x="6603" fg:w="2"/><text x="53.9068%" y="255.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (2 samples, 0.02%)</title><rect x="53.6730%" y="245" width="0.0163%" height="15" fill="rgb(221,13,13)" fg:x="6605" fg:w="2"/><text x="53.9230%" y="255.50"></text></g><g><title>jwtd`core::str::_&lt;impl str&gt;::trim_matches (6 samples, 0.05%)</title><rect x="53.6893%" y="245" width="0.0488%" height="15" fill="rgb(238,131,9)" fg:x="6607" fg:w="6"/><text x="53.9393%" y="255.50"></text></g><g><title>jwtd`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.02%)</title><rect x="53.7461%" y="245" width="0.0163%" height="15" fill="rgb(211,50,8)" fg:x="6614" fg:w="2"/><text x="53.9961%" y="255.50"></text></g><g><title>jwtd`http::header::name::HeaderName::from_bytes (25 samples, 0.20%)</title><rect x="53.7624%" y="245" width="0.2032%" height="15" fill="rgb(245,182,24)" fg:x="6616" fg:w="25"/><text x="54.0124%" y="255.50"></text></g><g><title>jwtd`http::header::name::StandardHeader::from_bytes (14 samples, 0.11%)</title><rect x="53.8518%" y="229" width="0.1138%" height="15" fill="rgb(242,14,37)" fg:x="6627" fg:w="14"/><text x="54.1018%" y="239.50"></text></g><g><title>jwtd`http::method::Method::from_bytes (6 samples, 0.05%)</title><rect x="53.9737%" y="245" width="0.0488%" height="15" fill="rgb(246,228,12)" fg:x="6642" fg:w="6"/><text x="54.2237%" y="255.50"></text></g><g><title>jwtd`http::uri::Uri::from_shared (6 samples, 0.05%)</title><rect x="54.0224%" y="245" width="0.0488%" height="15" fill="rgb(213,55,15)" fg:x="6648" fg:w="6"/><text x="54.2724%" y="255.50"></text></g><g><title>jwtd`http::uri::path::PathAndQuery::from_shared (3 samples, 0.02%)</title><rect x="54.0468%" y="229" width="0.0244%" height="15" fill="rgb(209,9,3)" fg:x="6651" fg:w="3"/><text x="54.2968%" y="239.50"></text></g><g><title>jwtd`http::uri::path::PathAndQuery::from_shared (2 samples, 0.02%)</title><rect x="54.0712%" y="245" width="0.0163%" height="15" fill="rgb(230,59,30)" fg:x="6654" fg:w="2"/><text x="54.3212%" y="255.50"></text></g><g><title>jwtd`httparse::Request::parse_with_config_and_uninit_headers (4 samples, 0.03%)</title><rect x="54.0874%" y="245" width="0.0325%" height="15" fill="rgb(209,121,21)" fg:x="6656" fg:w="4"/><text x="54.3374%" y="255.50"></text></g><g><title>jwtd`core::core_arch::x86_64::bmi::_tzcnt_u64 (2 samples, 0.02%)</title><rect x="54.5425%" y="181" width="0.0163%" height="15" fill="rgb(220,109,13)" fg:x="6712" fg:w="2"/><text x="54.7925%" y="191.50"></text></g><g><title>jwtd`httparse::parse_headers_iter_uninit (35 samples, 0.28%)</title><rect x="54.3150%" y="213" width="0.2844%" height="15" fill="rgb(232,18,1)" fg:x="6684" fg:w="35"/><text x="54.5650%" y="223.50"></text></g><g><title>jwtd`httparse::simd::runtime::match_header_value_vectored (9 samples, 0.07%)</title><rect x="54.5262%" y="197" width="0.0731%" height="15" fill="rgb(215,41,42)" fg:x="6710" fg:w="9"/><text x="54.7762%" y="207.50"></text></g><g><title>jwtd`httparse::simd::avx2::match_header_value_char_32_avx (5 samples, 0.04%)</title><rect x="54.5588%" y="181" width="0.0406%" height="15" fill="rgb(224,123,36)" fg:x="6714" fg:w="5"/><text x="54.8088%" y="191.50"></text></g><g><title>jwtd`httparse::parse_version (7 samples, 0.06%)</title><rect x="54.5994%" y="213" width="0.0569%" height="15" fill="rgb(240,125,3)" fg:x="6719" fg:w="7"/><text x="54.8494%" y="223.50"></text></g><g><title>jwtd`httparse::Request::parse_with_config_and_uninit_headers (66 samples, 0.54%)</title><rect x="54.1606%" y="229" width="0.5363%" height="15" fill="rgb(205,98,50)" fg:x="6665" fg:w="66"/><text x="54.4106%" y="239.50"></text></g><g><title>jwtd`httparse::simd::runtime::match_uri_vectored (4 samples, 0.03%)</title><rect x="54.6644%" y="213" width="0.0325%" height="15" fill="rgb(205,185,37)" fg:x="6727" fg:w="4"/><text x="54.9144%" y="223.50"></text></g><g><title>jwtd`httparse::Request::parse_with_uninit_headers (73 samples, 0.59%)</title><rect x="54.1199%" y="245" width="0.5932%" height="15" fill="rgb(238,207,15)" fg:x="6660" fg:w="73"/><text x="54.3699%" y="255.50"></text></g><g><title>jwtd`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.05%)</title><rect x="54.8594%" y="213" width="0.0488%" height="15" fill="rgb(213,199,42)" fg:x="6751" fg:w="6"/><text x="55.1094%" y="223.50"></text></g><g><title>jwtd`bytes::bytes_mut::shared_v_drop (6 samples, 0.05%)</title><rect x="54.8594%" y="197" width="0.0488%" height="15" fill="rgb(235,201,11)" fg:x="6751" fg:w="6"/><text x="55.1094%" y="207.50"></text></g><g><title>jwtd`hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (19 samples, 0.15%)</title><rect x="54.7944%" y="229" width="0.1544%" height="15" fill="rgb(207,46,11)" fg:x="6743" fg:w="19"/><text x="55.0444%" y="239.50"></text></g><g><title>jwtd`bytes::bytes_mut::shared_v_drop (5 samples, 0.04%)</title><rect x="54.9082%" y="213" width="0.0406%" height="15" fill="rgb(241,35,35)" fg:x="6757" fg:w="5"/><text x="55.1582%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.02%)</title><rect x="54.9488%" y="229" width="0.0163%" height="15" fill="rgb(243,32,47)" fg:x="6762" fg:w="2"/><text x="55.1988%" y="239.50"></text></g><g><title>jwtd`std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.27%)</title><rect x="54.7131%" y="245" width="0.2682%" height="15" fill="rgb(247,202,23)" fg:x="6733" fg:w="33"/><text x="54.9631%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="54.9813%" y="245" width="0.0244%" height="15" fill="rgb(219,102,11)" fg:x="6766" fg:w="3"/><text x="55.2313%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.03%)</title><rect x="55.0057%" y="245" width="0.0325%" height="15" fill="rgb(243,110,44)" fg:x="6769" fg:w="4"/><text x="55.2557%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="55.0219%" y="229" width="0.0163%" height="15" fill="rgb(222,74,54)" fg:x="6771" fg:w="2"/><text x="55.2719%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.02%)</title><rect x="55.0382%" y="245" width="0.0244%" height="15" fill="rgb(216,99,12)" fg:x="6773" fg:w="3"/><text x="55.2882%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (41 samples, 0.33%)</title><rect x="55.0707%" y="245" width="0.3332%" height="15" fill="rgb(226,22,26)" fg:x="6777" fg:w="41"/><text x="55.3207%" y="255.50"></text></g><g><title>jwtd`&lt;actix_http::requests::request::Request as actix_http::h1::decoder::MessageType&gt;::decode (331 samples, 2.69%)</title><rect x="52.7304%" y="261" width="2.6897%" height="15" fill="rgb(217,163,10)" fg:x="6489" fg:w="331"/><text x="52.9804%" y="271.50">jw..</text></g><g><title>jwtd`actix_http::header::map::HeaderMap::append (2 samples, 0.02%)</title><rect x="55.4282%" y="261" width="0.0163%" height="15" fill="rgb(213,25,53)" fg:x="6821" fg:w="2"/><text x="55.6782%" y="271.50"></text></g><g><title>jwtd`bytes::bytes::Bytes::slice (2 samples, 0.02%)</title><rect x="55.4526%" y="261" width="0.0163%" height="15" fill="rgb(252,105,26)" fg:x="6824" fg:w="2"/><text x="55.7026%" y="271.50"></text></g><g><title>jwtd`bytes::bytes_mut::BytesMut::freeze (3 samples, 0.02%)</title><rect x="55.4689%" y="261" width="0.0244%" height="15" fill="rgb(220,39,43)" fg:x="6826" fg:w="3"/><text x="55.7189%" y="271.50"></text></g><g><title>jwtd`bytes::bytes_mut::BytesMut::split_to (4 samples, 0.03%)</title><rect x="55.4933%" y="261" width="0.0325%" height="15" fill="rgb(229,68,48)" fg:x="6829" fg:w="4"/><text x="55.7433%" y="271.50"></text></g><g><title>jwtd`core::num::_&lt;impl core::str::traits::FromStr for u64&gt;::from_str (4 samples, 0.03%)</title><rect x="55.5258%" y="261" width="0.0325%" height="15" fill="rgb(252,8,32)" fg:x="6833" fg:w="4"/><text x="55.7758%" y="271.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (2 samples, 0.02%)</title><rect x="55.5583%" y="261" width="0.0163%" height="15" fill="rgb(223,20,43)" fg:x="6837" fg:w="2"/><text x="55.8083%" y="271.50"></text></g><g><title>jwtd`core::str::_&lt;impl str&gt;::trim_matches (3 samples, 0.02%)</title><rect x="55.5745%" y="261" width="0.0244%" height="15" fill="rgb(229,81,49)" fg:x="6839" fg:w="3"/><text x="55.8245%" y="271.50"></text></g><g><title>jwtd`http::uri::Uri::from_shared (2 samples, 0.02%)</title><rect x="55.6151%" y="261" width="0.0163%" height="15" fill="rgb(236,28,36)" fg:x="6844" fg:w="2"/><text x="55.8651%" y="271.50"></text></g><g><title>jwtd`httparse::Request::parse_with_uninit_headers (2 samples, 0.02%)</title><rect x="55.6314%" y="261" width="0.0163%" height="15" fill="rgb(249,185,26)" fg:x="6846" fg:w="2"/><text x="55.8814%" y="271.50"></text></g><g><title>jwtd`std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="55.6558%" y="261" width="0.0163%" height="15" fill="rgb(249,174,33)" fg:x="6849" fg:w="2"/><text x="55.9058%" y="271.50"></text></g><g><title>jwtd`&lt;actix_http::h1::codec::Codec as tokio_util::codec::decoder::Decoder&gt;::decode (412 samples, 3.35%)</title><rect x="52.3647%" y="277" width="3.3480%" height="15" fill="rgb(233,201,37)" fg:x="6444" fg:w="412"/><text x="52.6147%" y="287.50">jwt..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="55.6964%" y="261" width="0.0163%" height="15" fill="rgb(221,78,26)" fg:x="6854" fg:w="2"/><text x="55.9464%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="55.9646%" y="181" width="0.0163%" height="15" fill="rgb(250,127,30)" fg:x="6887" fg:w="2"/><text x="56.2146%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (16 samples, 0.13%)</title><rect x="55.9646%" y="197" width="0.1300%" height="15" fill="rgb(230,49,44)" fg:x="6887" fg:w="16"/><text x="56.2146%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (14 samples, 0.11%)</title><rect x="55.9808%" y="181" width="0.1138%" height="15" fill="rgb(229,67,23)" fg:x="6889" fg:w="14"/><text x="56.2308%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.10%)</title><rect x="55.9971%" y="165" width="0.0975%" height="15" fill="rgb(249,83,47)" fg:x="6891" fg:w="12"/><text x="56.2471%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.10%)</title><rect x="55.9971%" y="149" width="0.0975%" height="15" fill="rgb(215,43,3)" fg:x="6891" fg:w="12"/><text x="56.2471%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.05%)</title><rect x="56.0458%" y="133" width="0.0488%" height="15" fill="rgb(238,154,13)" fg:x="6897" fg:w="6"/><text x="56.2958%" y="143.50"></text></g><g><title>jwtd`&lt;actix_service::boxed::ServiceWrapper&lt;S&gt; as actix_service::Service&lt;Req&gt;&gt;::call (18 samples, 0.15%)</title><rect x="55.9646%" y="213" width="0.1463%" height="15" fill="rgb(219,56,2)" fg:x="6887" fg:w="18"/><text x="56.2146%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="56.0946%" y="197" width="0.0163%" height="15" fill="rgb(233,0,4)" fg:x="6903" fg:w="2"/><text x="56.3446%" y="207.50"></text></g><g><title>jwtd`&lt;actix_web::resource::ResourceService as actix_service::Service&lt;actix_web::service::ServiceRequest&gt;&gt;::call (23 samples, 0.19%)</title><rect x="55.9321%" y="229" width="0.1869%" height="15" fill="rgb(235,30,7)" fg:x="6883" fg:w="23"/><text x="56.1821%" y="239.50"></text></g><g><title>jwtd`&lt;actix_service::boxed::ServiceWrapper&lt;S&gt; as actix_service::Service&lt;Req&gt;&gt;::call (33 samples, 0.27%)</title><rect x="55.9077%" y="245" width="0.2682%" height="15" fill="rgb(250,79,13)" fg:x="6880" fg:w="33"/><text x="56.1577%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.06%)</title><rect x="56.1190%" y="229" width="0.0569%" height="15" fill="rgb(211,146,34)" fg:x="6906" fg:w="7"/><text x="56.3690%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (6 samples, 0.05%)</title><rect x="56.1271%" y="213" width="0.0488%" height="15" fill="rgb(228,22,38)" fg:x="6907" fg:w="6"/><text x="56.3771%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.04%)</title><rect x="56.1352%" y="197" width="0.0406%" height="15" fill="rgb(235,168,5)" fg:x="6908" fg:w="5"/><text x="56.3852%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.03%)</title><rect x="56.1433%" y="181" width="0.0325%" height="15" fill="rgb(221,155,16)" fg:x="6909" fg:w="4"/><text x="56.3933%" y="191.50"></text></g><g><title>jwtd`&lt;actix_web::guard::MethodGuard as actix_web::guard::Guard&gt;::check (2 samples, 0.02%)</title><rect x="56.1758%" y="245" width="0.0163%" height="15" fill="rgb(215,215,53)" fg:x="6913" fg:w="2"/><text x="56.4258%" y="255.50"></text></g><g><title>jwtd`&lt;actix_web::resource::ResourceService as actix_service::Service&lt;actix_web::service::ServiceRequest&gt;&gt;::call (3 samples, 0.02%)</title><rect x="56.1921%" y="245" width="0.0244%" height="15" fill="rgb(223,4,10)" fg:x="6915" fg:w="3"/><text x="56.4421%" y="255.50"></text></g><g><title>jwtd`&lt;actix_router::path::PathItem as core::default::Default&gt;::default (8 samples, 0.07%)</title><rect x="56.3059%" y="229" width="0.0650%" height="15" fill="rgb(234,103,6)" fg:x="6929" fg:w="8"/><text x="56.5559%" y="239.50"></text></g><g><title>jwtd`actix_router::path::Path&lt;T&gt;::unprocessed (4 samples, 0.03%)</title><rect x="56.3709%" y="229" width="0.0325%" height="15" fill="rgb(227,97,0)" fg:x="6937" fg:w="4"/><text x="56.6209%" y="239.50"></text></g><g><title>jwtd`actix_router::resource::ResourceDef::static_match (5 samples, 0.04%)</title><rect x="56.4034%" y="229" width="0.0406%" height="15" fill="rgb(234,150,53)" fg:x="6941" fg:w="5"/><text x="56.6534%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (4 samples, 0.03%)</title><rect x="56.4115%" y="213" width="0.0325%" height="15" fill="rgb(228,201,54)" fg:x="6942" fg:w="4"/><text x="56.6615%" y="223.50"></text></g><g><title>jwtd`core::array::_&lt;impl core::default::Default for [T (15 samples, 0.12%)</title><rect x="56.4440%" y="229" width="0.1219%" height="15" fill="rgb(222,22,37)" fg:x="6946" fg:w="15"/><text x="56.6940%" y="239.50"></text></g><g><title> _]&gt;::default (15 samples, 0.12%)</title><rect x="56.4440%" y="213" width="0.1219%" height="15" fill="rgb(237,53,32)" fg:x="6946" fg:w="15"/><text x="56.6940%" y="223.50"></text></g><g><title>jwtd`&lt;actix_router::path::PathItem as core::default::Default&gt;::default (8 samples, 0.07%)</title><rect x="56.5009%" y="197" width="0.0650%" height="15" fill="rgb(233,25,53)" fg:x="6953" fg:w="8"/><text x="56.7509%" y="207.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;[actix_router::path::PathItem (3 samples, 0.02%)</title><rect x="56.5659%" y="229" width="0.0244%" height="15" fill="rgb(210,40,34)" fg:x="6961" fg:w="3"/><text x="56.8159%" y="239.50"></text></g><g><title> 16]&gt; (3 samples, 0.02%)</title><rect x="56.5659%" y="213" width="0.0244%" height="15" fill="rgb(241,220,44)" fg:x="6961" fg:w="3"/><text x="56.8159%" y="223.50"></text></g><g><title>jwtd`http::uri::Uri::has_path (2 samples, 0.02%)</title><rect x="56.5903%" y="229" width="0.0163%" height="15" fill="rgb(235,28,35)" fg:x="6964" fg:w="2"/><text x="56.8403%" y="239.50"></text></g><g><title>jwtd`actix_router::resource::ResourceDef::capture_match_info_fn (48 samples, 0.39%)</title><rect x="56.2246%" y="245" width="0.3901%" height="15" fill="rgb(210,56,17)" fg:x="6919" fg:w="48"/><text x="56.4746%" y="255.50"></text></g><g><title>jwtd`actix_router::resource::ResourceDef::static_match (3 samples, 0.02%)</title><rect x="56.6147%" y="245" width="0.0244%" height="15" fill="rgb(224,130,29)" fg:x="6967" fg:w="3"/><text x="56.8647%" y="255.50"></text></g><g><title>jwtd`&lt;actix_web::app_service::AppRouting as actix_service::Service&lt;actix_web::service::ServiceRequest&gt;&gt;::call (94 samples, 0.76%)</title><rect x="55.9077%" y="261" width="0.7639%" height="15" fill="rgb(235,212,8)" fg:x="6880" fg:w="94"/><text x="56.1577%" y="271.50"></text></g><g><title>jwtd`core::array::_&lt;impl core::default::Default for [T (4 samples, 0.03%)</title><rect x="56.6390%" y="245" width="0.0325%" height="15" fill="rgb(223,33,50)" fg:x="6970" fg:w="4"/><text x="56.8890%" y="255.50"></text></g><g><title> _]&gt;::default (4 samples, 0.03%)</title><rect x="56.6390%" y="229" width="0.0325%" height="15" fill="rgb(219,149,13)" fg:x="6970" fg:w="4"/><text x="56.8890%" y="239.50"></text></g><g><title>jwtd`&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::gen_hasher_seed (2 samples, 0.02%)</title><rect x="56.6715%" y="261" width="0.0163%" height="15" fill="rgb(250,156,29)" fg:x="6974" fg:w="2"/><text x="56.9215%" y="271.50"></text></g><g><title>jwtd`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="56.6878%" y="261" width="0.0163%" height="15" fill="rgb(216,193,19)" fg:x="6976" fg:w="2"/><text x="56.9378%" y="271.50"></text></g><g><title>jwtd`bytes::bytes::shallow_clone_vec (7 samples, 0.06%)</title><rect x="56.7366%" y="229" width="0.0569%" height="15" fill="rgb(216,135,14)" fg:x="6982" fg:w="7"/><text x="56.9866%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.06%)</title><rect x="56.7366%" y="213" width="0.0569%" height="15" fill="rgb(241,47,5)" fg:x="6982" fg:w="7"/><text x="56.9866%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (7 samples, 0.06%)</title><rect x="56.7366%" y="197" width="0.0569%" height="15" fill="rgb(233,42,35)" fg:x="6982" fg:w="7"/><text x="56.9866%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.04%)</title><rect x="56.7528%" y="181" width="0.0406%" height="15" fill="rgb(231,13,6)" fg:x="6984" fg:w="5"/><text x="57.0028%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.04%)</title><rect x="56.7528%" y="165" width="0.0406%" height="15" fill="rgb(207,181,40)" fg:x="6984" fg:w="5"/><text x="57.0028%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="56.7691%" y="149" width="0.0244%" height="15" fill="rgb(254,173,49)" fg:x="6986" fg:w="3"/><text x="57.0191%" y="159.50"></text></g><g><title>jwtd`&lt;http::uri::Uri as core::clone::Clone&gt;::clone (12 samples, 0.10%)</title><rect x="56.7040%" y="261" width="0.0975%" height="15" fill="rgb(221,1,38)" fg:x="6978" fg:w="12"/><text x="56.9540%" y="271.50"></text></g><g><title>jwtd`bytes::bytes::promotable_even_clone (9 samples, 0.07%)</title><rect x="56.7284%" y="245" width="0.0731%" height="15" fill="rgb(206,124,46)" fg:x="6981" fg:w="9"/><text x="56.9784%" y="255.50"></text></g><g><title>jwtd`actix_http::requests::head::REQUEST_POOL::__getit (2 samples, 0.02%)</title><rect x="56.8016%" y="261" width="0.0163%" height="15" fill="rgb(249,21,11)" fg:x="6990" fg:w="2"/><text x="57.0516%" y="271.50"></text></g><g><title>jwtd`actix_router::url::DEFAULT_QUOTER::__getit (2 samples, 0.02%)</title><rect x="56.8341%" y="261" width="0.0163%" height="15" fill="rgb(222,201,40)" fg:x="6994" fg:w="2"/><text x="57.0841%" y="271.50"></text></g><g><title>jwtd`ahash::random_state::RandomState::from_keys (2 samples, 0.02%)</title><rect x="56.8503%" y="261" width="0.0163%" height="15" fill="rgb(235,61,29)" fg:x="6996" fg:w="2"/><text x="57.1003%" y="271.50"></text></g><g><title>jwtd`bytes::bytes::shared_drop (4 samples, 0.03%)</title><rect x="56.8747%" y="261" width="0.0325%" height="15" fill="rgb(219,207,3)" fg:x="6999" fg:w="4"/><text x="57.1247%" y="271.50"></text></g><g><title>jwtd`bytes::bytes::static_drop (2 samples, 0.02%)</title><rect x="56.9072%" y="261" width="0.0163%" height="15" fill="rgb(222,56,46)" fg:x="7003" fg:w="2"/><text x="57.1572%" y="271.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (3 samples, 0.02%)</title><rect x="56.9235%" y="261" width="0.0244%" height="15" fill="rgb(239,76,54)" fg:x="7005" fg:w="3"/><text x="57.1735%" y="271.50"></text></g><g><title>jwtd`actix_router::quoter::Quoter::requote_str_lossy (7 samples, 0.06%)</title><rect x="56.9722%" y="245" width="0.0569%" height="15" fill="rgb(231,124,27)" fg:x="7011" fg:w="7"/><text x="57.2222%" y="255.50"></text></g><g><title>jwtd`actix_router::quoter::Quoter::requote (7 samples, 0.06%)</title><rect x="56.9722%" y="229" width="0.0569%" height="15" fill="rgb(249,195,6)" fg:x="7011" fg:w="7"/><text x="57.2222%" y="239.50"></text></g><g><title>jwtd`std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.11%)</title><rect x="56.9478%" y="261" width="0.1056%" height="15" fill="rgb(237,174,47)" fg:x="7008" fg:w="13"/><text x="57.1978%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.02%)</title><rect x="57.0291%" y="245" width="0.0244%" height="15" fill="rgb(206,201,31)" fg:x="7018" fg:w="3"/><text x="57.2791%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.04%)</title><rect x="57.0616%" y="261" width="0.0406%" height="15" fill="rgb(231,57,52)" fg:x="7022" fg:w="5"/><text x="57.3116%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.02%)</title><rect x="57.0860%" y="245" width="0.0163%" height="15" fill="rgb(248,177,22)" fg:x="7025" fg:w="2"/><text x="57.3360%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.02%)</title><rect x="57.1022%" y="261" width="0.0244%" height="15" fill="rgb(215,211,37)" fg:x="7027" fg:w="3"/><text x="57.3522%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.02%)</title><rect x="57.1022%" y="245" width="0.0244%" height="15" fill="rgb(241,128,51)" fg:x="7027" fg:w="3"/><text x="57.3522%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="57.1347%" y="229" width="0.0163%" height="15" fill="rgb(227,165,31)" fg:x="7031" fg:w="2"/><text x="57.3847%" y="239.50"></text></g><g><title>jwtd`&lt;actix_web::app_service::AppInitService&lt;T,B&gt; as actix_service::Service&lt;actix_http::requests::request::Request&gt;&gt;::call (187 samples, 1.52%)</title><rect x="55.7289%" y="277" width="1.5196%" height="15" fill="rgb(228,167,24)" fg:x="6858" fg:w="187"/><text x="55.9789%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (15 samples, 0.12%)</title><rect x="57.1266%" y="261" width="0.1219%" height="15" fill="rgb(228,143,12)" fg:x="7030" fg:w="15"/><text x="57.3766%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (15 samples, 0.12%)</title><rect x="57.1266%" y="245" width="0.1219%" height="15" fill="rgb(249,149,8)" fg:x="7030" fg:w="15"/><text x="57.3766%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.10%)</title><rect x="57.1510%" y="229" width="0.0975%" height="15" fill="rgb(243,35,44)" fg:x="7033" fg:w="12"/><text x="57.4010%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.09%)</title><rect x="57.1591%" y="213" width="0.0894%" height="15" fill="rgb(246,89,9)" fg:x="7034" fg:w="11"/><text x="57.4091%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.04%)</title><rect x="57.2079%" y="197" width="0.0406%" height="15" fill="rgb(233,213,13)" fg:x="7040" fg:w="5"/><text x="57.4579%" y="207.50"></text></g><g><title>jwtd`&lt;actix_web::app_service::AppRouting as actix_service::Service&lt;actix_web::service::ServiceRequest&gt;&gt;::call (2 samples, 0.02%)</title><rect x="57.2485%" y="277" width="0.0163%" height="15" fill="rgb(233,141,41)" fg:x="7045" fg:w="2"/><text x="57.4985%" y="287.50"></text></g><g><title>jwtd`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.04%)</title><rect x="57.2729%" y="277" width="0.0406%" height="15" fill="rgb(239,167,4)" fg:x="7048" fg:w="5"/><text x="57.5229%" y="287.50"></text></g><g><title>jwtd`tokio::runtime::task::state::State::ref_inc (2 samples, 0.02%)</title><rect x="57.5817%" y="181" width="0.0163%" height="15" fill="rgb(209,217,16)" fg:x="7086" fg:w="2"/><text x="57.8317%" y="191.50"></text></g><g><title>jwtd`&lt;actix_http::h1::payload::Payload as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.05%)</title><rect x="57.5654%" y="197" width="0.0488%" height="15" fill="rgb(219,88,35)" fg:x="7084" fg:w="6"/><text x="57.8154%" y="207.50"></text></g><g><title>jwtd`tokio::runtime::task::waker::clone_waker (2 samples, 0.02%)</title><rect x="57.5979%" y="181" width="0.0163%" height="15" fill="rgb(220,193,23)" fg:x="7088" fg:w="2"/><text x="57.8479%" y="191.50"></text></g><g><title>jwtd`tokio::runtime::task::state::State::ref_inc (2 samples, 0.02%)</title><rect x="57.5979%" y="165" width="0.0163%" height="15" fill="rgb(230,90,52)" fg:x="7088" fg:w="2"/><text x="57.8479%" y="175.50"></text></g><g><title>jwtd`&lt;actix_web::extract::tuple_from_req::TupleFromRequest3&lt;A,B,C&gt; as core::future::future::Future&gt;::poll (28 samples, 0.23%)</title><rect x="57.3948%" y="245" width="0.2275%" height="15" fill="rgb(252,106,19)" fg:x="7063" fg:w="28"/><text x="57.6448%" y="255.50"></text></g><g><title>jwtd`&lt;actix_web::types::json::JsonExtractFut&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.18%)</title><rect x="57.4435%" y="229" width="0.1788%" height="15" fill="rgb(206,74,20)" fg:x="7069" fg:w="22"/><text x="57.6935%" y="239.50"></text></g><g><title>jwtd`&lt;actix_http::encoding::decoder::Decoder&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (15 samples, 0.12%)</title><rect x="57.5004%" y="213" width="0.1219%" height="15" fill="rgb(230,138,44)" fg:x="7076" fg:w="15"/><text x="57.7504%" y="223.50"></text></g><g><title>jwtd`&lt;actix_web::types::json::JsonExtractFut&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.02%)</title><rect x="57.6223%" y="245" width="0.0244%" height="15" fill="rgb(235,182,43)" fg:x="7091" fg:w="3"/><text x="57.8723%" y="255.50"></text></g><g><title>jwtd`&lt;serde_urlencoded::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.02%)</title><rect x="57.6467%" y="245" width="0.0244%" height="15" fill="rgb(242,16,51)" fg:x="7094" fg:w="3"/><text x="57.8967%" y="255.50"></text></g><g><title>jwtd`actix_web::extract::tuple_from_req::_::_&lt;impl actix_web::extract::tuple_from_req::ExtractFuture&lt;Fut,Res&gt;&gt;::project_replace (2 samples, 0.02%)</title><rect x="57.6792%" y="245" width="0.0163%" height="15" fill="rgb(248,9,4)" fg:x="7098" fg:w="2"/><text x="57.9292%" y="255.50"></text></g><g><title>jwtd`&lt;T as core::any::Any&gt;::type_id (3 samples, 0.02%)</title><rect x="57.8661%" y="213" width="0.0244%" height="15" fill="rgb(210,31,22)" fg:x="7121" fg:w="3"/><text x="58.1161%" y="223.50"></text></g><g><title>jwtd`&lt;actix_web::data::Data&lt;T&gt; as actix_web::extract::FromRequest&gt;::from_request (10 samples, 0.08%)</title><rect x="57.8580%" y="229" width="0.0813%" height="15" fill="rgb(239,54,39)" fg:x="7120" fg:w="10"/><text x="58.1080%" y="239.50"></text></g><g><title>jwtd`actix_http::extensions::Extensions::get (6 samples, 0.05%)</title><rect x="57.8905%" y="213" width="0.0488%" height="15" fill="rgb(230,99,41)" fg:x="7124" fg:w="6"/><text x="58.1405%" y="223.50"></text></g><g><title>jwtd`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.02%)</title><rect x="57.9392%" y="229" width="0.0163%" height="15" fill="rgb(253,106,12)" fg:x="7130" fg:w="2"/><text x="58.1892%" y="239.50"></text></g><g><title>jwtd`&lt;form_urlencoded::Parse as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="58.0449%" y="197" width="0.0163%" height="15" fill="rgb(213,46,41)" fg:x="7143" fg:w="2"/><text x="58.2949%" y="207.50"></text></g><g><title>jwtd`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (8 samples, 0.07%)</title><rect x="58.0124%" y="213" width="0.0650%" height="15" fill="rgb(215,133,35)" fg:x="7139" fg:w="8"/><text x="58.2624%" y="223.50"></text></g><g><title>jwtd`&lt;serde_urlencoded::de::PartIterator as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="58.0611%" y="197" width="0.0163%" height="15" fill="rgb(213,28,5)" fg:x="7145" fg:w="2"/><text x="58.3111%" y="207.50"></text></g><g><title>jwtd`&lt;form_urlencoded::Parse as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="58.0611%" y="181" width="0.0163%" height="15" fill="rgb(215,77,49)" fg:x="7145" fg:w="2"/><text x="58.3111%" y="191.50"></text></g><g><title>jwtd`&lt;serde_urlencoded::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (16 samples, 0.13%)</title><rect x="57.9555%" y="229" width="0.1300%" height="15" fill="rgb(248,100,22)" fg:x="7132" fg:w="16"/><text x="58.2055%" y="239.50"></text></g><g><title>jwtd`__rust_dealloc (2 samples, 0.02%)</title><rect x="58.0936%" y="229" width="0.0163%" height="15" fill="rgb(208,67,9)" fg:x="7149" fg:w="2"/><text x="58.3436%" y="239.50"></text></g><g><title>jwtd`actix_http::extensions::Extensions::get (6 samples, 0.05%)</title><rect x="58.1099%" y="229" width="0.0488%" height="15" fill="rgb(219,133,21)" fg:x="7151" fg:w="6"/><text x="58.3599%" y="239.50"></text></g><g><title>jwtd`actix_http::http_message::HttpMessage::mime_type (5 samples, 0.04%)</title><rect x="58.1586%" y="229" width="0.0406%" height="15" fill="rgb(246,46,29)" fg:x="7157" fg:w="5"/><text x="58.4086%" y="239.50"></text></g><g><title>jwtd`&lt;mime::Mime as core::str::traits::FromStr&gt;::from_str (4 samples, 0.03%)</title><rect x="58.2643%" y="213" width="0.0325%" height="15" fill="rgb(246,185,52)" fg:x="7170" fg:w="4"/><text x="58.5143%" y="223.50"></text></g><g><title>jwtd`actix_http::header::map::Value::first (2 samples, 0.02%)</title><rect x="58.2968%" y="213" width="0.0163%" height="15" fill="rgb(252,136,11)" fg:x="7174" fg:w="2"/><text x="58.5468%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="58.4837%" y="133" width="0.0163%" height="15" fill="rgb(219,138,53)" fg:x="7197" fg:w="2"/><text x="58.7337%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (8 samples, 0.07%)</title><rect x="58.4837%" y="165" width="0.0650%" height="15" fill="rgb(211,51,23)" fg:x="7197" fg:w="8"/><text x="58.7337%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (8 samples, 0.07%)</title><rect x="58.4837%" y="149" width="0.0650%" height="15" fill="rgb(247,221,28)" fg:x="7197" fg:w="8"/><text x="58.7337%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.05%)</title><rect x="58.4999%" y="133" width="0.0488%" height="15" fill="rgb(251,222,45)" fg:x="7199" fg:w="6"/><text x="58.7499%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.04%)</title><rect x="58.5080%" y="117" width="0.0406%" height="15" fill="rgb(217,162,53)" fg:x="7200" fg:w="5"/><text x="58.7580%" y="127.50"></text></g><g><title>jwtd`&lt;mime::Mime as core::str::traits::FromStr&gt;::from_str (25 samples, 0.20%)</title><rect x="58.3618%" y="197" width="0.2032%" height="15" fill="rgb(229,93,14)" fg:x="7182" fg:w="25"/><text x="58.6118%" y="207.50"></text></g><g><title>jwtd`mime::parse::parse (22 samples, 0.18%)</title><rect x="58.3862%" y="181" width="0.1788%" height="15" fill="rgb(209,67,49)" fg:x="7185" fg:w="22"/><text x="58.6362%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="58.5487%" y="165" width="0.0163%" height="15" fill="rgb(213,87,29)" fg:x="7205" fg:w="2"/><text x="58.7987%" y="175.50"></text></g><g><title>jwtd`ahash::hash_map::AHashMap&lt;K,V,S&gt;::get (5 samples, 0.04%)</title><rect x="58.5649%" y="197" width="0.0406%" height="15" fill="rgb(205,151,52)" fg:x="7207" fg:w="5"/><text x="58.8149%" y="207.50"></text></g><g><title>jwtd`http::header::value::HeaderValue::to_str (4 samples, 0.03%)</title><rect x="58.6056%" y="197" width="0.0325%" height="15" fill="rgb(253,215,39)" fg:x="7212" fg:w="4"/><text x="58.8556%" y="207.50"></text></g><g><title>jwtd`actix_http::http_message::HttpMessage::mime_type (41 samples, 0.33%)</title><rect x="58.3130%" y="213" width="0.3332%" height="15" fill="rgb(221,220,41)" fg:x="7176" fg:w="41"/><text x="58.5630%" y="223.50"></text></g><g><title>jwtd`ahash::hash_map::AHashMap&lt;K,V,S&gt;::get (7 samples, 0.06%)</title><rect x="58.6462%" y="213" width="0.0569%" height="15" fill="rgb(218,133,21)" fg:x="7217" fg:w="7"/><text x="58.8962%" y="223.50"></text></g><g><title>jwtd`&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="58.6868%" y="197" width="0.0163%" height="15" fill="rgb(221,193,43)" fg:x="7222" fg:w="2"/><text x="58.9368%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.03%)</title><rect x="58.7193%" y="213" width="0.0325%" height="15" fill="rgb(240,128,52)" fg:x="7226" fg:w="4"/><text x="58.9693%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.02%)</title><rect x="58.7275%" y="197" width="0.0244%" height="15" fill="rgb(253,114,12)" fg:x="7227" fg:w="3"/><text x="58.9775%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.07%)</title><rect x="58.7518%" y="213" width="0.0731%" height="15" fill="rgb(215,223,47)" fg:x="7230" fg:w="9"/><text x="59.0018%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.06%)</title><rect x="58.7681%" y="197" width="0.0569%" height="15" fill="rgb(248,225,23)" fg:x="7232" fg:w="7"/><text x="59.0181%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="58.8250%" y="197" width="0.0163%" height="15" fill="rgb(250,108,0)" fg:x="7239" fg:w="2"/><text x="59.0750%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (3 samples, 0.02%)</title><rect x="58.9387%" y="149" width="0.0244%" height="15" fill="rgb(228,208,7)" fg:x="7253" fg:w="3"/><text x="59.1887%" y="159.50"></text></g><g><title>jwtd`actix_web::types::json::JsonBody&lt;T&gt;::new (107 samples, 0.87%)</title><rect x="58.1993%" y="229" width="0.8695%" height="15" fill="rgb(244,45,10)" fg:x="7162" fg:w="107"/><text x="58.4493%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (30 samples, 0.24%)</title><rect x="58.8250%" y="213" width="0.2438%" height="15" fill="rgb(207,125,25)" fg:x="7239" fg:w="30"/><text x="59.0750%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (28 samples, 0.23%)</title><rect x="58.8412%" y="197" width="0.2275%" height="15" fill="rgb(210,195,18)" fg:x="7241" fg:w="28"/><text x="59.0912%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.23%)</title><rect x="58.8412%" y="181" width="0.2275%" height="15" fill="rgb(249,80,12)" fg:x="7241" fg:w="28"/><text x="59.0912%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (26 samples, 0.21%)</title><rect x="58.8575%" y="165" width="0.2113%" height="15" fill="rgb(221,65,9)" fg:x="7243" fg:w="26"/><text x="59.1075%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (13 samples, 0.11%)</title><rect x="58.9631%" y="149" width="0.1056%" height="15" fill="rgb(235,49,36)" fg:x="7256" fg:w="13"/><text x="59.2131%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (3 samples, 0.02%)</title><rect x="59.0444%" y="133" width="0.0244%" height="15" fill="rgb(225,32,20)" fg:x="7266" fg:w="3"/><text x="59.2944%" y="143.50"></text></g><g><title>jwtd`&lt;T as core::any::Any&gt;::type_id (2 samples, 0.02%)</title><rect x="59.0850%" y="213" width="0.0163%" height="15" fill="rgb(215,141,46)" fg:x="7271" fg:w="2"/><text x="59.3350%" y="223.50"></text></g><g><title>jwtd`actix_web::types::json::JsonConfig::from_req (7 samples, 0.06%)</title><rect x="59.0687%" y="229" width="0.0569%" height="15" fill="rgb(250,160,47)" fg:x="7269" fg:w="7"/><text x="59.3187%" y="239.50"></text></g><g><title>jwtd`actix_http::extensions::Extensions::get (3 samples, 0.02%)</title><rect x="59.1013%" y="213" width="0.0244%" height="15" fill="rgb(216,222,40)" fg:x="7273" fg:w="3"/><text x="59.3513%" y="223.50"></text></g><g><title>jwtd`actix_web::extract::tuple_from_req::_&lt;impl actix_web::extract::FromRequest for (A,B,C)&gt;::from_request (180 samples, 1.46%)</title><rect x="57.6954%" y="245" width="1.4627%" height="15" fill="rgb(234,217,39)" fg:x="7100" fg:w="180"/><text x="57.9454%" y="255.50"></text></g><g><title>jwtd`actix_web::types::json::JsonBody&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="59.1581%" y="245" width="0.0244%" height="15" fill="rgb(207,178,40)" fg:x="7280" fg:w="3"/><text x="59.4081%" y="255.50"></text></g><g><title>jwtd`actix_web::types::json::JsonConfig::from_req (2 samples, 0.02%)</title><rect x="59.1825%" y="245" width="0.0163%" height="15" fill="rgb(221,136,13)" fg:x="7283" fg:w="2"/><text x="59.4325%" y="255.50"></text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (230 samples, 1.87%)</title><rect x="57.3541%" y="261" width="1.8690%" height="15" fill="rgb(249,199,10)" fg:x="7058" fg:w="230"/><text x="57.6041%" y="271.50">j..</text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (237 samples, 1.93%)</title><rect x="57.3135%" y="277" width="1.9259%" height="15" fill="rgb(249,222,13)" fg:x="7053" fg:w="237"/><text x="57.5635%" y="287.50">j..</text></g><g><title>jwtd`actix_web::extract::tuple_from_req::_&lt;impl actix_web::extract::FromRequest for (A,B,C)&gt;::from_request (2 samples, 0.02%)</title><rect x="59.2231%" y="261" width="0.0163%" height="15" fill="rgb(244,185,38)" fg:x="7288" fg:w="2"/><text x="59.4731%" y="271.50"></text></g><g><title>jwtd`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="59.2394%" y="277" width="0.0163%" height="15" fill="rgb(236,202,9)" fg:x="7290" fg:w="2"/><text x="59.4894%" y="287.50"></text></g><g><title>jwtd`__rdl_alloc (2 samples, 0.02%)</title><rect x="59.2638%" y="277" width="0.0163%" height="15" fill="rgb(250,229,37)" fg:x="7293" fg:w="2"/><text x="59.5138%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (11 samples, 0.09%)</title><rect x="59.3207%" y="261" width="0.0894%" height="15" fill="rgb(206,174,23)" fg:x="7300" fg:w="11"/><text x="59.5707%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (11 samples, 0.09%)</title><rect x="59.3207%" y="245" width="0.0894%" height="15" fill="rgb(211,33,43)" fg:x="7300" fg:w="11"/><text x="59.5707%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.09%)</title><rect x="59.3207%" y="229" width="0.0894%" height="15" fill="rgb(245,58,50)" fg:x="7300" fg:w="11"/><text x="59.5707%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.07%)</title><rect x="59.3450%" y="213" width="0.0650%" height="15" fill="rgb(244,68,36)" fg:x="7303" fg:w="8"/><text x="59.5950%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.02%)</title><rect x="59.3938%" y="197" width="0.0163%" height="15" fill="rgb(232,229,15)" fg:x="7309" fg:w="2"/><text x="59.6438%" y="207.50"></text></g><g><title>jwtd`actix_http::h1::payload::Payload::create (18 samples, 0.15%)</title><rect x="59.2882%" y="277" width="0.1463%" height="15" fill="rgb(254,30,23)" fg:x="7296" fg:w="18"/><text x="59.5382%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="59.4100%" y="261" width="0.0244%" height="15" fill="rgb(235,160,14)" fg:x="7311" fg:w="3"/><text x="59.6600%" y="271.50"></text></g><g><title>jwtd`actix_http::h1::timer::TimerState::clear (8 samples, 0.07%)</title><rect x="59.4344%" y="277" width="0.0650%" height="15" fill="rgb(212,155,44)" fg:x="7314" fg:w="8"/><text x="59.6844%" y="287.50"></text></g><g><title>jwtd`actix_web::service::ServiceRequest::from_parts (2 samples, 0.02%)</title><rect x="59.4994%" y="277" width="0.0163%" height="15" fill="rgb(226,2,50)" fg:x="7322" fg:w="2"/><text x="59.7494%" y="287.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;actix_http::h1::dispatcher::State&lt;actix_service::map_err::MapErr&lt;actix_web::app_service::AppInitService&lt;actix_web::app_service::AppRouting,actix_http::body::boxed::BoxBody&gt;,actix_http::requests::request::Request&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;bytes::bytes::Bytes,actix_http::error::PayloadError&gt;&gt;&gt;&gt;,actix_web::server::HttpServer&lt;jwtd::main::{{closure}}::{{closure}},actix_web::app::App&lt;actix_web::app_service::AppEntry&gt;,actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::boxed::BoxBody&gt;,actix_http::body::boxed::BoxBody&gt;::listen::{{closure}}::{{closure}},actix_web::response::response::HttpResponse&gt;,actix_http::body::boxed::BoxBody,actix_http::h1::expect::ExpectHandler&gt;&gt; (4 samples, 0.03%)</title><rect x="59.5157%" y="277" width="0.0325%" height="15" fill="rgb(234,177,6)" fg:x="7324" fg:w="4"/><text x="59.7657%" y="287.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (3 samples, 0.02%)</title><rect x="59.5563%" y="277" width="0.0244%" height="15" fill="rgb(217,24,9)" fg:x="7329" fg:w="3"/><text x="59.8063%" y="287.50"></text></g><g><title>jwtd`std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="59.5888%" y="277" width="0.0163%" height="15" fill="rgb(220,13,46)" fg:x="7333" fg:w="2"/><text x="59.8388%" y="287.50"></text></g><g><title>jwtd`tokio::runtime::task::state::State::transition_to_notified_by_val (3 samples, 0.02%)</title><rect x="59.6051%" y="277" width="0.0244%" height="15" fill="rgb(239,221,27)" fg:x="7335" fg:w="3"/><text x="59.8551%" y="287.50"></text></g><g><title>jwtd`actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_request (935 samples, 7.60%)</title><rect x="52.0559%" y="293" width="7.5979%" height="15" fill="rgb(222,198,25)" fg:x="6406" fg:w="935"/><text x="52.3059%" y="303.50">jwtd`actix..</text></g><g><title>jwtd`actix_http::h1::encoder::TransferEncoding::encode (14 samples, 0.11%)</title><rect x="59.9220%" y="261" width="0.1138%" height="15" fill="rgb(211,99,13)" fg:x="7374" fg:w="14"/><text x="60.1720%" y="271.50"></text></g><g><title>jwtd`bytes::bytes_mut::BytesMut::extend_from_slice (14 samples, 0.11%)</title><rect x="59.9220%" y="245" width="0.1138%" height="15" fill="rgb(232,111,31)" fg:x="7374" fg:w="14"/><text x="60.1720%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.11%)</title><rect x="59.9301%" y="229" width="0.1056%" height="15" fill="rgb(245,82,37)" fg:x="7375" fg:w="13"/><text x="60.1801%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="60.0845%" y="245" width="0.0163%" height="15" fill="rgb(227,149,46)" fg:x="7394" fg:w="2"/><text x="60.3345%" y="255.50"></text></g><g><title>jwtd`&lt;actix_http::h1::codec::Codec as tokio_util::codec::encoder::Encoder&lt;actix_http::h1::Message&lt;(actix_http::responses::response::Response&lt;()&gt;,actix_http::body::size::BodySize)&gt;&gt;&gt;::encode (32 samples, 0.26%)</title><rect x="59.8895%" y="277" width="0.2600%" height="15" fill="rgb(218,36,50)" fg:x="7370" fg:w="32"/><text x="60.1395%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.10%)</title><rect x="60.0520%" y="261" width="0.0975%" height="15" fill="rgb(226,80,48)" fg:x="7390" fg:w="12"/><text x="60.3020%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.05%)</title><rect x="60.1008%" y="245" width="0.0488%" height="15" fill="rgb(238,224,15)" fg:x="7396" fg:w="6"/><text x="60.3508%" y="255.50"></text></g><g><title>jwtd`&lt;actix_web::request::HttpRequest as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="60.1495%" y="277" width="0.0163%" height="15" fill="rgb(241,136,10)" fg:x="7402" fg:w="2"/><text x="60.3995%" y="287.50"></text></g><g><title>jwtd`&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::gen_hasher_seed (2 samples, 0.02%)</title><rect x="60.2552%" y="261" width="0.0163%" height="15" fill="rgb(208,32,45)" fg:x="7415" fg:w="2"/><text x="60.5052%" y="271.50"></text></g><g><title>jwtd`&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::get_fixed_seeds (3 samples, 0.02%)</title><rect x="60.2714%" y="261" width="0.0244%" height="15" fill="rgb(207,135,9)" fg:x="7417" fg:w="3"/><text x="60.5214%" y="271.50"></text></g><g><title>jwtd`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.03%)</title><rect x="60.3039%" y="261" width="0.0325%" height="15" fill="rgb(206,86,44)" fg:x="7421" fg:w="4"/><text x="60.5539%" y="271.50"></text></g><g><title>jwtd`&lt;actix_web::request::HttpRequest as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="60.6371%" y="229" width="0.0244%" height="15" fill="rgb(245,177,15)" fg:x="7462" fg:w="3"/><text x="60.8871%" y="239.50"></text></g><g><title>jwtd`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.02%)</title><rect x="60.7752%" y="197" width="0.0244%" height="15" fill="rgb(206,64,50)" fg:x="7479" fg:w="3"/><text x="61.0252%" y="207.50"></text></g><g><title>jwtd`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (9 samples, 0.07%)</title><rect x="61.0759%" y="149" width="0.0731%" height="15" fill="rgb(234,36,40)" fg:x="7516" fg:w="9"/><text x="61.3259%" y="159.50"></text></g><g><title>jwtd`core::str::converts::from_utf8 (2 samples, 0.02%)</title><rect x="61.1328%" y="133" width="0.0163%" height="15" fill="rgb(213,64,8)" fg:x="7523" fg:w="2"/><text x="61.3828%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="61.1572%" y="117" width="0.0163%" height="15" fill="rgb(210,75,36)" fg:x="7526" fg:w="2"/><text x="61.4072%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.13%)</title><rect x="61.1734%" y="117" width="0.1300%" height="15" fill="rgb(229,88,21)" fg:x="7528" fg:w="16"/><text x="61.4234%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15 samples, 0.12%)</title><rect x="61.1815%" y="101" width="0.1219%" height="15" fill="rgb(252,204,47)" fg:x="7529" fg:w="15"/><text x="61.4315%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.04%)</title><rect x="61.2628%" y="85" width="0.0406%" height="15" fill="rgb(208,77,27)" fg:x="7539" fg:w="5"/><text x="61.5128%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (20 samples, 0.16%)</title><rect x="61.1490%" y="133" width="0.1625%" height="15" fill="rgb(221,76,26)" fg:x="7525" fg:w="20"/><text x="61.3990%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (21 samples, 0.17%)</title><rect x="61.1490%" y="149" width="0.1706%" height="15" fill="rgb(225,139,18)" fg:x="7525" fg:w="21"/><text x="61.3990%" y="159.50"></text></g><g><title>jwtd`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (39 samples, 0.32%)</title><rect x="61.0353%" y="165" width="0.3169%" height="15" fill="rgb(230,137,11)" fg:x="7511" fg:w="39"/><text x="61.2853%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.03%)</title><rect x="61.3197%" y="149" width="0.0325%" height="15" fill="rgb(212,28,1)" fg:x="7546" fg:w="4"/><text x="61.5697%" y="159.50"></text></g><g><title>jwtd`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (8 samples, 0.07%)</title><rect x="61.3522%" y="165" width="0.0650%" height="15" fill="rgb(248,164,17)" fg:x="7550" fg:w="8"/><text x="61.6022%" y="175.50"></text></g><g><title>jwtd`core::str::converts::from_utf8 (5 samples, 0.04%)</title><rect x="61.3766%" y="149" width="0.0406%" height="15" fill="rgb(222,171,42)" fg:x="7553" fg:w="5"/><text x="61.6266%" y="159.50"></text></g><g><title>jwtd`alloc::raw_vec::finish_grow (11 samples, 0.09%)</title><rect x="61.4578%" y="149" width="0.0894%" height="15" fill="rgb(243,84,45)" fg:x="7563" fg:w="11"/><text x="61.7078%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (11 samples, 0.09%)</title><rect x="61.4578%" y="133" width="0.0894%" height="15" fill="rgb(252,49,23)" fg:x="7563" fg:w="11"/><text x="61.7078%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (11 samples, 0.09%)</title><rect x="61.4578%" y="117" width="0.0894%" height="15" fill="rgb(215,19,7)" fg:x="7563" fg:w="11"/><text x="61.7078%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.08%)</title><rect x="61.4660%" y="101" width="0.0813%" height="15" fill="rgb(238,81,41)" fg:x="7564" fg:w="10"/><text x="61.7160%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.08%)</title><rect x="61.4660%" y="85" width="0.0813%" height="15" fill="rgb(210,199,37)" fg:x="7564" fg:w="10"/><text x="61.7160%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="61.5228%" y="69" width="0.0244%" height="15" fill="rgb(244,192,49)" fg:x="7571" fg:w="3"/><text x="61.7728%" y="79.50"></text></g><g><title>jwtd`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.14%)</title><rect x="61.4253%" y="165" width="0.1381%" height="15" fill="rgb(226,211,11)" fg:x="7559" fg:w="17"/><text x="61.6753%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.02%)</title><rect x="61.5472%" y="149" width="0.0163%" height="15" fill="rgb(236,162,54)" fg:x="7574" fg:w="2"/><text x="61.7972%" y="159.50"></text></g><g><title>jwtd`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="61.5635%" y="165" width="0.0163%" height="15" fill="rgb(220,229,9)" fg:x="7576" fg:w="2"/><text x="61.8135%" y="175.50"></text></g><g><title>jwtd`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (101 samples, 0.82%)</title><rect x="60.8484%" y="181" width="0.8207%" height="15" fill="rgb(250,87,22)" fg:x="7488" fg:w="101"/><text x="61.0984%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (11 samples, 0.09%)</title><rect x="61.5797%" y="165" width="0.0894%" height="15" fill="rgb(239,43,17)" fg:x="7578" fg:w="11"/><text x="61.8297%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (10 samples, 0.08%)</title><rect x="61.5878%" y="149" width="0.0813%" height="15" fill="rgb(231,177,25)" fg:x="7579" fg:w="10"/><text x="61.8378%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.08%)</title><rect x="61.5878%" y="133" width="0.0813%" height="15" fill="rgb(219,179,1)" fg:x="7579" fg:w="10"/><text x="61.8378%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.07%)</title><rect x="61.5960%" y="117" width="0.0731%" height="15" fill="rgb(238,219,53)" fg:x="7580" fg:w="9"/><text x="61.8460%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.03%)</title><rect x="61.6366%" y="101" width="0.0325%" height="15" fill="rgb(232,167,36)" fg:x="7585" fg:w="4"/><text x="61.8866%" y="111.50"></text></g><g><title>jwtd`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.02%)</title><rect x="61.7179%" y="165" width="0.0244%" height="15" fill="rgb(244,19,51)" fg:x="7595" fg:w="3"/><text x="61.9679%" y="175.50"></text></g><g><title>jwtd`core::str::converts::from_utf8 (2 samples, 0.02%)</title><rect x="61.7260%" y="149" width="0.0163%" height="15" fill="rgb(224,6,22)" fg:x="7596" fg:w="2"/><text x="61.9760%" y="159.50"></text></g><g><title>jwtd`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (11 samples, 0.09%)</title><rect x="61.7666%" y="149" width="0.0894%" height="15" fill="rgb(224,145,5)" fg:x="7601" fg:w="11"/><text x="62.0166%" y="159.50"></text></g><g><title>jwtd`core::str::converts::from_utf8 (3 samples, 0.02%)</title><rect x="61.8316%" y="133" width="0.0244%" height="15" fill="rgb(234,130,49)" fg:x="7609" fg:w="3"/><text x="62.0816%" y="143.50"></text></g><g><title>jwtd`core::str::converts::from_utf8 (5 samples, 0.04%)</title><rect x="61.8560%" y="149" width="0.0406%" height="15" fill="rgb(254,6,2)" fg:x="7612" fg:w="5"/><text x="62.1060%" y="159.50"></text></g><g><title>jwtd`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (26 samples, 0.21%)</title><rect x="61.7422%" y="165" width="0.2113%" height="15" fill="rgb(208,96,46)" fg:x="7598" fg:w="26"/><text x="61.9922%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.06%)</title><rect x="61.8966%" y="149" width="0.0569%" height="15" fill="rgb(239,3,39)" fg:x="7617" fg:w="7"/><text x="62.1466%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (7 samples, 0.06%)</title><rect x="61.8966%" y="133" width="0.0569%" height="15" fill="rgb(233,210,1)" fg:x="7617" fg:w="7"/><text x="62.1466%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.05%)</title><rect x="61.9048%" y="117" width="0.0488%" height="15" fill="rgb(244,137,37)" fg:x="7618" fg:w="6"/><text x="62.1548%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.04%)</title><rect x="61.9129%" y="101" width="0.0406%" height="15" fill="rgb(240,136,2)" fg:x="7619" fg:w="5"/><text x="62.1629%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (11 samples, 0.09%)</title><rect x="61.9535%" y="165" width="0.0894%" height="15" fill="rgb(239,18,37)" fg:x="7624" fg:w="11"/><text x="62.2035%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (8 samples, 0.07%)</title><rect x="61.9779%" y="149" width="0.0650%" height="15" fill="rgb(218,185,22)" fg:x="7627" fg:w="8"/><text x="62.2279%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.06%)</title><rect x="61.9860%" y="133" width="0.0569%" height="15" fill="rgb(225,218,4)" fg:x="7628" fg:w="7"/><text x="62.2360%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.05%)</title><rect x="61.9941%" y="117" width="0.0488%" height="15" fill="rgb(230,182,32)" fg:x="7629" fg:w="6"/><text x="62.2441%" y="127.50"></text></g><g><title>jwtd`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (48 samples, 0.39%)</title><rect x="61.6691%" y="181" width="0.3901%" height="15" fill="rgb(242,56,43)" fg:x="7589" fg:w="48"/><text x="61.9191%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="62.0429%" y="165" width="0.0163%" height="15" fill="rgb(233,99,24)" fg:x="7635" fg:w="2"/><text x="62.2929%" y="175.50"></text></g><g><title>jwtd`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.02%)</title><rect x="62.0673%" y="181" width="0.0163%" height="15" fill="rgb(234,209,42)" fg:x="7638" fg:w="2"/><text x="62.3173%" y="191.50"></text></g><g><title>jwtd`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (5 samples, 0.04%)</title><rect x="62.1892%" y="149" width="0.0406%" height="15" fill="rgb(227,7,12)" fg:x="7653" fg:w="5"/><text x="62.4392%" y="159.50"></text></g><g><title>jwtd`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (25 samples, 0.20%)</title><rect x="62.1404%" y="165" width="0.2032%" height="15" fill="rgb(245,203,43)" fg:x="7647" fg:w="25"/><text x="62.3904%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (14 samples, 0.11%)</title><rect x="62.2298%" y="149" width="0.1138%" height="15" fill="rgb(238,205,33)" fg:x="7658" fg:w="14"/><text x="62.4798%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (13 samples, 0.11%)</title><rect x="62.2379%" y="133" width="0.1056%" height="15" fill="rgb(231,56,7)" fg:x="7659" fg:w="13"/><text x="62.4879%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.10%)</title><rect x="62.2461%" y="117" width="0.0975%" height="15" fill="rgb(244,186,29)" fg:x="7660" fg:w="12"/><text x="62.4961%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.10%)</title><rect x="62.2461%" y="101" width="0.0975%" height="15" fill="rgb(234,111,31)" fg:x="7660" fg:w="12"/><text x="62.4961%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="62.3192%" y="85" width="0.0244%" height="15" fill="rgb(241,149,10)" fg:x="7669" fg:w="3"/><text x="62.5692%" y="95.50"></text></g><g><title>jwtd`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (34 samples, 0.28%)</title><rect x="62.0917%" y="181" width="0.2763%" height="15" fill="rgb(249,206,44)" fg:x="7641" fg:w="34"/><text x="62.3417%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.02%)</title><rect x="62.3517%" y="165" width="0.0163%" height="15" fill="rgb(251,153,30)" fg:x="7673" fg:w="2"/><text x="62.6017%" y="175.50"></text></g><g><title>jwtd`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (2 samples, 0.02%)</title><rect x="62.3680%" y="181" width="0.0163%" height="15" fill="rgb(239,152,38)" fg:x="7675" fg:w="2"/><text x="62.6180%" y="191.50"></text></g><g><title>jwtd`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (197 samples, 1.60%)</title><rect x="60.7996%" y="197" width="1.6008%" height="15" fill="rgb(249,139,47)" fg:x="7482" fg:w="197"/><text x="61.0496%" y="207.50"></text></g><g><title>jwtd`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (206 samples, 1.67%)</title><rect x="60.7427%" y="213" width="1.6740%" height="15" fill="rgb(244,64,35)" fg:x="7475" fg:w="206"/><text x="60.9927%" y="223.50"></text></g><g><title>jwtd`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (2 samples, 0.02%)</title><rect x="62.4005%" y="197" width="0.0163%" height="15" fill="rgb(216,46,15)" fg:x="7679" fg:w="2"/><text x="62.6505%" y="207.50"></text></g><g><title>jwtd`&lt;actix_http::encoding::decoder::Decoder&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (11 samples, 0.09%)</title><rect x="62.4167%" y="213" width="0.0894%" height="15" fill="rgb(250,74,19)" fg:x="7681" fg:w="11"/><text x="62.6667%" y="223.50"></text></g><g><title>jwtd`&lt;actix_http::h1::payload::Payload as futures_core::stream::Stream&gt;::poll_next (4 samples, 0.03%)</title><rect x="62.4736%" y="197" width="0.0325%" height="15" fill="rgb(249,42,33)" fg:x="7688" fg:w="4"/><text x="62.7236%" y="207.50"></text></g><g><title>jwtd`bytes::bytes_mut::BytesMut::extend_from_slice (4 samples, 0.03%)</title><rect x="62.5142%" y="213" width="0.0325%" height="15" fill="rgb(242,149,17)" fg:x="7693" fg:w="4"/><text x="62.7642%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.03%)</title><rect x="62.5142%" y="197" width="0.0325%" height="15" fill="rgb(244,29,21)" fg:x="7693" fg:w="4"/><text x="62.7642%" y="207.50"></text></g><g><title>jwtd`&lt;actix_web::types::json::JsonExtractFut&lt;T&gt; as core::future::future::Future&gt;::poll (233 samples, 1.89%)</title><rect x="60.6615%" y="229" width="1.8934%" height="15" fill="rgb(220,130,37)" fg:x="7465" fg:w="233"/><text x="60.9115%" y="239.50">j..</text></g><g><title>jwtd`&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="62.5549%" y="229" width="0.0163%" height="15" fill="rgb(211,67,2)" fg:x="7698" fg:w="2"/><text x="62.8049%" y="239.50"></text></g><g><title>jwtd`actix_web::extract::tuple_from_req::_::_&lt;impl actix_web::extract::tuple_from_req::ExtractFuture&lt;Fut,Res&gt;&gt;::project_replace (3 samples, 0.02%)</title><rect x="62.5711%" y="229" width="0.0244%" height="15" fill="rgb(235,68,52)" fg:x="7700" fg:w="3"/><text x="62.8211%" y="239.50"></text></g><g><title>jwtd`bytes::bytes_mut::BytesMut::extend_from_slice (2 samples, 0.02%)</title><rect x="62.5955%" y="229" width="0.0163%" height="15" fill="rgb(246,142,3)" fg:x="7703" fg:w="2"/><text x="62.8455%" y="239.50"></text></g><g><title>jwtd`&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="62.6930%" y="181" width="0.0163%" height="15" fill="rgb(241,25,7)" fg:x="7715" fg:w="2"/><text x="62.9430%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.02%)</title><rect x="62.7092%" y="181" width="0.0163%" height="15" fill="rgb(242,119,39)" fg:x="7717" fg:w="2"/><text x="62.9592%" y="191.50"></text></g><g><title>jwtd`&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.11%)</title><rect x="62.6767%" y="197" width="0.1056%" height="15" fill="rgb(241,98,45)" fg:x="7713" fg:w="13"/><text x="62.9267%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.06%)</title><rect x="62.7255%" y="181" width="0.0569%" height="15" fill="rgb(254,28,30)" fg:x="7719" fg:w="7"/><text x="62.9755%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="62.7661%" y="165" width="0.0163%" height="15" fill="rgb(241,142,54)" fg:x="7724" fg:w="2"/><text x="63.0161%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="62.7824%" y="197" width="0.0244%" height="15" fill="rgb(222,85,15)" fg:x="7726" fg:w="3"/><text x="63.0324%" y="207.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;actix_web::types::json::JsonBody&lt;serde_json::value::Value&gt;&gt; (21 samples, 0.17%)</title><rect x="62.6524%" y="213" width="0.1706%" height="15" fill="rgb(210,85,47)" fg:x="7710" fg:w="21"/><text x="62.9024%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_size (4 samples, 0.03%)</title><rect x="62.8311%" y="197" width="0.0325%" height="15" fill="rgb(224,206,25)" fg:x="7732" fg:w="4"/><text x="63.0811%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.06%)</title><rect x="62.8230%" y="213" width="0.0569%" height="15" fill="rgb(243,201,19)" fg:x="7731" fg:w="7"/><text x="63.0730%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_small (13 samples, 0.11%)</title><rect x="62.8799%" y="213" width="0.1056%" height="15" fill="rgb(236,59,4)" fg:x="7738" fg:w="13"/><text x="63.1299%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (2 samples, 0.02%)</title><rect x="62.9693%" y="197" width="0.0163%" height="15" fill="rgb(254,179,45)" fg:x="7749" fg:w="2"/><text x="63.2193%" y="207.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;actix_web::types::json::JsonExtractFut&lt;serde_json::value::Value&gt;&gt; (51 samples, 0.41%)</title><rect x="62.6199%" y="229" width="0.4144%" height="15" fill="rgb(226,14,10)" fg:x="7706" fg:w="51"/><text x="62.8699%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (5 samples, 0.04%)</title><rect x="62.9937%" y="213" width="0.0406%" height="15" fill="rgb(244,27,41)" fg:x="7752" fg:w="5"/><text x="63.2437%" y="223.50"></text></g><g><title>jwtd`&lt;actix_web::extract::tuple_from_req::TupleFromRequest3&lt;A,B,C&gt; as core::future::future::Future&gt;::poll (311 samples, 2.53%)</title><rect x="60.5314%" y="245" width="2.5272%" height="15" fill="rgb(235,35,32)" fg:x="7449" fg:w="311"/><text x="60.7814%" y="255.50">jw..</text></g><g><title>libsystem_malloc.dylib`malloc (27 samples, 0.22%)</title><rect x="63.2049%" y="213" width="0.2194%" height="15" fill="rgb(218,68,31)" fg:x="7778" fg:w="27"/><text x="63.4549%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (26 samples, 0.21%)</title><rect x="63.2131%" y="197" width="0.2113%" height="15" fill="rgb(207,120,37)" fg:x="7779" fg:w="26"/><text x="63.4631%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.19%)</title><rect x="63.2374%" y="181" width="0.1869%" height="15" fill="rgb(227,98,0)" fg:x="7782" fg:w="23"/><text x="63.4874%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.15%)</title><rect x="63.2699%" y="165" width="0.1544%" height="15" fill="rgb(207,7,3)" fg:x="7786" fg:w="19"/><text x="63.5199%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.04%)</title><rect x="63.3837%" y="149" width="0.0406%" height="15" fill="rgb(206,98,19)" fg:x="7800" fg:w="5"/><text x="63.6337%" y="159.50"></text></g><g><title>jwtd`&lt;alloc::string::String as core::clone::Clone&gt;::clone (34 samples, 0.28%)</title><rect x="63.1806%" y="229" width="0.2763%" height="15" fill="rgb(217,5,26)" fg:x="7775" fg:w="34"/><text x="63.4306%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.03%)</title><rect x="63.4243%" y="213" width="0.0325%" height="15" fill="rgb(235,190,38)" fg:x="7805" fg:w="4"/><text x="63.6743%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="63.5219%" y="165" width="0.0163%" height="15" fill="rgb(247,86,24)" fg:x="7817" fg:w="2"/><text x="63.7719%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (18 samples, 0.15%)</title><rect x="63.5056%" y="197" width="0.1463%" height="15" fill="rgb(205,101,16)" fg:x="7815" fg:w="18"/><text x="63.7556%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (17 samples, 0.14%)</title><rect x="63.5137%" y="181" width="0.1381%" height="15" fill="rgb(246,168,33)" fg:x="7816" fg:w="17"/><text x="63.7637%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.11%)</title><rect x="63.5381%" y="165" width="0.1138%" height="15" fill="rgb(231,114,1)" fg:x="7819" fg:w="14"/><text x="63.7881%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.11%)</title><rect x="63.5381%" y="149" width="0.1138%" height="15" fill="rgb(207,184,53)" fg:x="7819" fg:w="14"/><text x="63.7881%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="63.6275%" y="133" width="0.0244%" height="15" fill="rgb(224,95,51)" fg:x="7830" fg:w="3"/><text x="63.8775%" y="143.50"></text></g><g><title>jwtd`&lt;alloc::string::String as core::clone::Clone&gt;::clone (20 samples, 0.16%)</title><rect x="63.5056%" y="213" width="0.1625%" height="15" fill="rgb(212,188,45)" fg:x="7815" fg:w="20"/><text x="63.7556%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="63.6519%" y="197" width="0.0163%" height="15" fill="rgb(223,154,38)" fg:x="7833" fg:w="2"/><text x="63.9019%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.07%)</title><rect x="63.6844%" y="181" width="0.0650%" height="15" fill="rgb(251,22,52)" fg:x="7837" fg:w="8"/><text x="63.9344%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.05%)</title><rect x="63.7006%" y="165" width="0.0488%" height="15" fill="rgb(229,209,22)" fg:x="7839" fg:w="6"/><text x="63.9506%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.02%)</title><rect x="63.7331%" y="149" width="0.0163%" height="15" fill="rgb(234,138,34)" fg:x="7843" fg:w="2"/><text x="63.9831%" y="159.50"></text></g><g><title>jwtd`alloc::slice::hack::to_vec (37 samples, 0.30%)</title><rect x="63.4569%" y="229" width="0.3007%" height="15" fill="rgb(212,95,11)" fg:x="7809" fg:w="37"/><text x="63.7069%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (10 samples, 0.08%)</title><rect x="63.6763%" y="213" width="0.0813%" height="15" fill="rgb(240,179,47)" fg:x="7836" fg:w="10"/><text x="63.9263%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (9 samples, 0.07%)</title><rect x="63.6844%" y="197" width="0.0731%" height="15" fill="rgb(240,163,11)" fg:x="7837" fg:w="9"/><text x="63.9344%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="63.8388%" y="165" width="0.0163%" height="15" fill="rgb(236,37,12)" fg:x="7856" fg:w="2"/><text x="64.0888%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.07%)</title><rect x="63.7900%" y="197" width="0.0731%" height="15" fill="rgb(232,164,16)" fg:x="7850" fg:w="9"/><text x="64.0400%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.07%)</title><rect x="63.7981%" y="181" width="0.0650%" height="15" fill="rgb(244,205,15)" fg:x="7851" fg:w="8"/><text x="64.0481%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (14 samples, 0.11%)</title><rect x="63.7575%" y="229" width="0.1138%" height="15" fill="rgb(223,117,47)" fg:x="7846" fg:w="14"/><text x="64.0075%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (11 samples, 0.09%)</title><rect x="63.7819%" y="213" width="0.0894%" height="15" fill="rgb(244,107,35)" fg:x="7849" fg:w="11"/><text x="64.0319%" y="223.50"></text></g><g><title>jwtd`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (101 samples, 0.82%)</title><rect x="63.0587%" y="245" width="0.8207%" height="15" fill="rgb(205,140,8)" fg:x="7760" fg:w="101"/><text x="63.3087%" y="255.50"></text></g><g><title>jwtd`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (8 samples, 0.07%)</title><rect x="63.9769%" y="229" width="0.0650%" height="15" fill="rgb(228,84,46)" fg:x="7873" fg:w="8"/><text x="64.2269%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.04%)</title><rect x="64.0988%" y="197" width="0.0406%" height="15" fill="rgb(254,188,9)" fg:x="7888" fg:w="5"/><text x="64.3488%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.02%)</title><rect x="64.1151%" y="181" width="0.0244%" height="15" fill="rgb(206,112,54)" fg:x="7890" fg:w="3"/><text x="64.3651%" y="191.50"></text></g><g><title>jwtd`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.24%)</title><rect x="64.0663%" y="213" width="0.2438%" height="15" fill="rgb(216,84,49)" fg:x="7884" fg:w="30"/><text x="64.3163%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.17%)</title><rect x="64.1394%" y="197" width="0.1706%" height="15" fill="rgb(214,194,35)" fg:x="7893" fg:w="21"/><text x="64.3894%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.10%)</title><rect x="64.2126%" y="181" width="0.0975%" height="15" fill="rgb(249,28,3)" fg:x="7902" fg:w="12"/><text x="64.4626%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.02%)</title><rect x="64.3101%" y="213" width="0.0163%" height="15" fill="rgb(222,56,52)" fg:x="7914" fg:w="2"/><text x="64.5601%" y="223.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (37 samples, 0.30%)</title><rect x="64.0419%" y="229" width="0.3007%" height="15" fill="rgb(245,217,50)" fg:x="7881" fg:w="37"/><text x="64.2919%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="64.3263%" y="213" width="0.0163%" height="15" fill="rgb(213,201,24)" fg:x="7916" fg:w="2"/><text x="64.5763%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.02%)</title><rect x="64.3426%" y="229" width="0.0244%" height="15" fill="rgb(248,116,28)" fg:x="7918" fg:w="3"/><text x="64.5926%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.04%)</title><rect x="64.3914%" y="213" width="0.0406%" height="15" fill="rgb(219,72,43)" fg:x="7924" fg:w="5"/><text x="64.6414%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (25 samples, 0.20%)</title><rect x="64.3670%" y="229" width="0.2032%" height="15" fill="rgb(209,138,14)" fg:x="7921" fg:w="25"/><text x="64.6170%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (17 samples, 0.14%)</title><rect x="64.4320%" y="213" width="0.1381%" height="15" fill="rgb(222,18,33)" fg:x="7929" fg:w="17"/><text x="64.6820%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.03%)</title><rect x="64.7408%" y="213" width="0.0325%" height="15" fill="rgb(213,199,7)" fg:x="7967" fg:w="4"/><text x="64.9908%" y="223.50"></text></g><g><title>jwtd`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (134 samples, 1.09%)</title><rect x="63.8794%" y="245" width="1.0889%" height="15" fill="rgb(250,110,10)" fg:x="7861" fg:w="134"/><text x="64.1294%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (49 samples, 0.40%)</title><rect x="64.5701%" y="229" width="0.3982%" height="15" fill="rgb(248,123,6)" fg:x="7946" fg:w="49"/><text x="64.8201%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (24 samples, 0.20%)</title><rect x="64.7733%" y="213" width="0.1950%" height="15" fill="rgb(206,91,31)" fg:x="7971" fg:w="24"/><text x="65.0233%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.05%)</title><rect x="64.9196%" y="197" width="0.0488%" height="15" fill="rgb(211,154,13)" fg:x="7989" fg:w="6"/><text x="65.1696%" y="207.50"></text></g><g><title>jwtd`&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.03%)</title><rect x="64.9683%" y="245" width="0.0325%" height="15" fill="rgb(225,148,7)" fg:x="7995" fg:w="4"/><text x="65.2183%" y="255.50"></text></g><g><title>jwtd`__rdl_dealloc (2 samples, 0.02%)</title><rect x="65.0008%" y="245" width="0.0163%" height="15" fill="rgb(220,160,43)" fg:x="7999" fg:w="2"/><text x="65.2508%" y="255.50"></text></g><g><title>jwtd`actix_http::responses::head::RESPONSE_POOL::__getit (2 samples, 0.02%)</title><rect x="65.0983%" y="213" width="0.0163%" height="15" fill="rgb(213,52,39)" fg:x="8011" fg:w="2"/><text x="65.3483%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.05%)</title><rect x="65.2121%" y="181" width="0.0488%" height="15" fill="rgb(243,137,7)" fg:x="8025" fg:w="6"/><text x="65.4621%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.03%)</title><rect x="65.2283%" y="165" width="0.0325%" height="15" fill="rgb(230,79,13)" fg:x="8027" fg:w="4"/><text x="65.4783%" y="175.50"></text></g><g><title>jwtd`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.15%)</title><rect x="65.1715%" y="197" width="0.1463%" height="15" fill="rgb(247,105,23)" fg:x="8020" fg:w="18"/><text x="65.4215%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.06%)</title><rect x="65.2608%" y="181" width="0.0569%" height="15" fill="rgb(223,179,41)" fg:x="8031" fg:w="7"/><text x="65.5108%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.02%)</title><rect x="65.2934%" y="165" width="0.0244%" height="15" fill="rgb(218,9,34)" fg:x="8035" fg:w="3"/><text x="65.5434%" y="175.50"></text></g><g><title>jwtd`hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (30 samples, 0.24%)</title><rect x="65.1146%" y="213" width="0.2438%" height="15" fill="rgb(222,106,8)" fg:x="8013" fg:w="30"/><text x="65.3646%" y="223.50"></text></g><g><title>jwtd`bytes::bytes::promotable_even_drop (4 samples, 0.03%)</title><rect x="65.3259%" y="197" width="0.0325%" height="15" fill="rgb(211,220,0)" fg:x="8039" fg:w="4"/><text x="65.5759%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.07%)</title><rect x="65.3584%" y="213" width="0.0650%" height="15" fill="rgb(229,52,16)" fg:x="8043" fg:w="8"/><text x="65.6084%" y="223.50"></text></g><g><title>jwtd`actix_http::responses::head::BoxedResponseHead::new (49 samples, 0.40%)</title><rect x="65.0333%" y="245" width="0.3982%" height="15" fill="rgb(212,155,18)" fg:x="8003" fg:w="49"/><text x="65.2833%" y="255.50"></text></g><g><title>jwtd`std::thread::local::LocalKey&lt;T&gt;::with (47 samples, 0.38%)</title><rect x="65.0496%" y="229" width="0.3819%" height="15" fill="rgb(242,21,14)" fg:x="8005" fg:w="47"/><text x="65.2996%" y="239.50"></text></g><g><title>jwtd`&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (2 samples, 0.02%)</title><rect x="65.4965%" y="229" width="0.0163%" height="15" fill="rgb(222,19,48)" fg:x="8060" fg:w="2"/><text x="65.7465%" y="239.50"></text></g><g><title>jwtd`actix_web::response::builder::HttpResponseBuilder::body (13 samples, 0.11%)</title><rect x="65.4396%" y="245" width="0.1056%" height="15" fill="rgb(232,45,27)" fg:x="8053" fg:w="13"/><text x="65.6896%" y="255.50"></text></g><g><title>jwtd`actix_web::response::response::HttpResponse&lt;B&gt;::map_body (4 samples, 0.03%)</title><rect x="65.5128%" y="229" width="0.0325%" height="15" fill="rgb(249,103,42)" fg:x="8062" fg:w="4"/><text x="65.7628%" y="239.50"></text></g><g><title>jwtd`actix_web::response::builder::HttpResponseBuilder::inner (2 samples, 0.02%)</title><rect x="65.5453%" y="245" width="0.0163%" height="15" fill="rgb(246,81,33)" fg:x="8066" fg:w="2"/><text x="65.7953%" y="255.50"></text></g><g><title>jwtd`hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.04%)</title><rect x="65.6672%" y="197" width="0.0406%" height="15" fill="rgb(252,33,42)" fg:x="8081" fg:w="5"/><text x="65.9172%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="65.6834%" y="181" width="0.0244%" height="15" fill="rgb(209,212,41)" fg:x="8083" fg:w="3"/><text x="65.9334%" y="191.50"></text></g><g><title>jwtd`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.10%)</title><rect x="65.6428%" y="213" width="0.0975%" height="15" fill="rgb(207,154,6)" fg:x="8078" fg:w="12"/><text x="65.8928%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.03%)</title><rect x="65.7078%" y="197" width="0.0325%" height="15" fill="rgb(223,64,47)" fg:x="8086" fg:w="4"/><text x="65.9578%" y="207.50"></text></g><g><title>jwtd`actix_http::header::map::HeaderMap::insert (19 samples, 0.15%)</title><rect x="65.6103%" y="229" width="0.1544%" height="15" fill="rgb(211,161,38)" fg:x="8074" fg:w="19"/><text x="65.8603%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="65.7484%" y="213" width="0.0163%" height="15" fill="rgb(219,138,40)" fg:x="8091" fg:w="2"/><text x="65.9984%" y="223.50"></text></g><g><title>jwtd`alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (2 samples, 0.02%)</title><rect x="65.7647%" y="229" width="0.0163%" height="15" fill="rgb(241,228,46)" fg:x="8093" fg:w="2"/><text x="66.0147%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (12 samples, 0.10%)</title><rect x="65.8216%" y="213" width="0.0975%" height="15" fill="rgb(223,209,38)" fg:x="8100" fg:w="12"/><text x="66.0716%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (11 samples, 0.09%)</title><rect x="65.8297%" y="197" width="0.0894%" height="15" fill="rgb(236,164,45)" fg:x="8101" fg:w="11"/><text x="66.0797%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.09%)</title><rect x="65.8297%" y="181" width="0.0894%" height="15" fill="rgb(231,15,5)" fg:x="8101" fg:w="11"/><text x="66.0797%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.09%)</title><rect x="65.8297%" y="165" width="0.0894%" height="15" fill="rgb(252,35,15)" fg:x="8101" fg:w="11"/><text x="66.0797%" y="175.50"></text></g><g><title>jwtd`bytes::bytes::Bytes::copy_from_slice (18 samples, 0.15%)</title><rect x="65.7809%" y="229" width="0.1463%" height="15" fill="rgb(248,181,18)" fg:x="8095" fg:w="18"/><text x="66.0309%" y="239.50"></text></g><g><title>jwtd`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.03%)</title><rect x="65.9272%" y="229" width="0.0325%" height="15" fill="rgb(233,39,42)" fg:x="8113" fg:w="4"/><text x="66.1772%" y="239.50"></text></g><g><title>jwtd`actix_web::response::builder::HttpResponseBuilder::insert_header (55 samples, 0.45%)</title><rect x="65.5615%" y="245" width="0.4469%" height="15" fill="rgb(238,110,33)" fg:x="8068" fg:w="55"/><text x="65.8115%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.03%)</title><rect x="65.9759%" y="229" width="0.0325%" height="15" fill="rgb(233,195,10)" fg:x="8119" fg:w="4"/><text x="66.2259%" y="239.50"></text></g><g><title>jwtd`actix_web::response::response::HttpResponse&lt;B&gt;::map_body (3 samples, 0.02%)</title><rect x="66.0085%" y="245" width="0.0244%" height="15" fill="rgb(254,105,3)" fg:x="8123" fg:w="3"/><text x="66.2585%" y="255.50"></text></g><g><title>jwtd`alloc::slice::_&lt;impl [T]&gt;::join (2 samples, 0.02%)</title><rect x="66.0410%" y="245" width="0.0163%" height="15" fill="rgb(221,225,9)" fg:x="8127" fg:w="2"/><text x="66.2910%" y="255.50"></text></g><g><title>jwtd`alloc::str::_&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (4 samples, 0.03%)</title><rect x="66.0572%" y="245" width="0.0325%" height="15" fill="rgb(224,227,45)" fg:x="8129" fg:w="4"/><text x="66.3072%" y="255.50"></text></g><g><title>jwtd`bytes::bytes::Bytes::copy_from_slice (2 samples, 0.02%)</title><rect x="66.0897%" y="245" width="0.0163%" height="15" fill="rgb(229,198,43)" fg:x="8133" fg:w="2"/><text x="66.3397%" y="255.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;actix_web::extract::tuple_from_req::ExtractFuture&lt;actix_utils::future::ready::Ready&lt;core::result::Result&lt;actix_web::data::Data&lt;jwtd::AppState&gt;,actix_web::error::error::Error&gt;&gt;,actix_web::data::Data&lt;jwtd::AppState&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="66.1060%" y="245" width="0.0163%" height="15" fill="rgb(206,209,35)" fg:x="8135" fg:w="2"/><text x="66.3560%" y="255.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;actix_web::extract::tuple_from_req::ExtractFuture&lt;actix_web::types::json::JsonExtractFut&lt;serde_json::value::Value&gt;,actix_web::types::json::Json&lt;serde_json::value::Value&gt;&gt;&gt; (5 samples, 0.04%)</title><rect x="66.1303%" y="245" width="0.0406%" height="15" fill="rgb(245,195,53)" fg:x="8138" fg:w="5"/><text x="66.3803%" y="255.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;jsonwebtoken::header::Header&gt; (9 samples, 0.07%)</title><rect x="66.1791%" y="245" width="0.0731%" height="15" fill="rgb(240,92,26)" fg:x="8144" fg:w="9"/><text x="66.4291%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.05%)</title><rect x="66.2035%" y="229" width="0.0488%" height="15" fill="rgb(207,40,23)" fg:x="8147" fg:w="6"/><text x="66.4535%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.03%)</title><rect x="66.2197%" y="213" width="0.0325%" height="15" fill="rgb(223,111,35)" fg:x="8149" fg:w="4"/><text x="66.4697%" y="223.50"></text></g><g><title>jwtd`jsonwebtoken::crypto::sign (4 samples, 0.03%)</title><rect x="66.2604%" y="245" width="0.0325%" height="15" fill="rgb(229,147,28)" fg:x="8154" fg:w="4"/><text x="66.5104%" y="255.50"></text></g><g><title>jwtd`__rdl_alloc (2 samples, 0.02%)</title><rect x="66.3579%" y="229" width="0.0163%" height="15" fill="rgb(211,29,28)" fg:x="8166" fg:w="2"/><text x="66.6079%" y="239.50"></text></g><g><title>jwtd`__rdl_dealloc (2 samples, 0.02%)</title><rect x="66.3741%" y="229" width="0.0163%" height="15" fill="rgb(228,72,33)" fg:x="8168" fg:w="2"/><text x="66.6241%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (11 samples, 0.09%)</title><rect x="66.4879%" y="213" width="0.0894%" height="15" fill="rgb(205,214,31)" fg:x="8182" fg:w="11"/><text x="66.7379%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (10 samples, 0.08%)</title><rect x="66.4960%" y="197" width="0.0813%" height="15" fill="rgb(224,111,15)" fg:x="8183" fg:w="10"/><text x="66.7460%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.08%)</title><rect x="66.4960%" y="181" width="0.0813%" height="15" fill="rgb(253,21,26)" fg:x="8183" fg:w="10"/><text x="66.7460%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.08%)</title><rect x="66.4960%" y="165" width="0.0813%" height="15" fill="rgb(245,139,43)" fg:x="8183" fg:w="10"/><text x="66.7460%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="66.5529%" y="149" width="0.0244%" height="15" fill="rgb(252,170,7)" fg:x="8190" fg:w="3"/><text x="66.8029%" y="159.50"></text></g><g><title>jwtd`alloc::slice::_&lt;impl [T]&gt;::join (28 samples, 0.23%)</title><rect x="66.4066%" y="229" width="0.2275%" height="15" fill="rgb(231,118,14)" fg:x="8172" fg:w="28"/><text x="66.6566%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.06%)</title><rect x="66.5773%" y="213" width="0.0569%" height="15" fill="rgb(238,83,0)" fg:x="8193" fg:w="7"/><text x="66.8273%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.02%)</title><rect x="66.8211%" y="149" width="0.0244%" height="15" fill="rgb(221,39,39)" fg:x="8223" fg:w="3"/><text x="67.0711%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (11 samples, 0.09%)</title><rect x="66.7642%" y="213" width="0.0894%" height="15" fill="rgb(222,119,46)" fg:x="8216" fg:w="11"/><text x="67.0142%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (11 samples, 0.09%)</title><rect x="66.7642%" y="197" width="0.0894%" height="15" fill="rgb(222,165,49)" fg:x="8216" fg:w="11"/><text x="67.0142%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.07%)</title><rect x="66.7804%" y="181" width="0.0731%" height="15" fill="rgb(219,113,52)" fg:x="8218" fg:w="9"/><text x="67.0304%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.07%)</title><rect x="66.7886%" y="165" width="0.0650%" height="15" fill="rgb(214,7,15)" fg:x="8219" fg:w="8"/><text x="67.0386%" y="175.50"></text></g><g><title>jwtd`alloc::str::_&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (33 samples, 0.27%)</title><rect x="66.6342%" y="229" width="0.2682%" height="15" fill="rgb(235,32,4)" fg:x="8200" fg:w="33"/><text x="66.8842%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.05%)</title><rect x="66.8536%" y="213" width="0.0488%" height="15" fill="rgb(238,90,54)" fg:x="8227" fg:w="6"/><text x="67.1036%" y="223.50"></text></g><g><title>jwtd`jsonwebtoken::crypto::rsa::sign (4 samples, 0.03%)</title><rect x="66.9023%" y="229" width="0.0325%" height="15" fill="rgb(213,208,19)" fg:x="8233" fg:w="4"/><text x="67.1523%" y="239.50"></text></g><g><title>jwtd`base64::encode::encode_config (4 samples, 0.03%)</title><rect x="67.0405%" y="213" width="0.0325%" height="15" fill="rgb(233,156,4)" fg:x="8250" fg:w="4"/><text x="67.2905%" y="223.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;ring::rsa::signing::RsaKeyPair&gt; (2 samples, 0.02%)</title><rect x="67.0730%" y="213" width="0.0163%" height="15" fill="rgb(207,194,5)" fg:x="8254" fg:w="2"/><text x="67.3230%" y="223.50"></text></g><g><title>jwtd`&lt;ring::rsa::padding::PKCS1 as ring::rsa::padding::Padding&gt;::digest_alg (2 samples, 0.02%)</title><rect x="67.1136%" y="197" width="0.0163%" height="15" fill="rgb(206,111,30)" fg:x="8259" fg:w="2"/><text x="67.3636%" y="207.50"></text></g><g><title>jwtd`GFp_bn_mul_mont (5 samples, 0.04%)</title><rect x="67.1624%" y="197" width="0.0406%" height="15" fill="rgb(243,70,54)" fg:x="8265" fg:w="5"/><text x="67.4124%" y="207.50"></text></g><g><title>jwtd`LIMBS_equal (2 samples, 0.02%)</title><rect x="67.2030%" y="197" width="0.0163%" height="15" fill="rgb(242,28,8)" fg:x="8270" fg:w="2"/><text x="67.4530%" y="207.50"></text></g><g><title>jwtd`base64::encode::encode_with_padding (21 samples, 0.17%)</title><rect x="67.2761%" y="181" width="0.1706%" height="15" fill="rgb(219,106,18)" fg:x="8279" fg:w="21"/><text x="67.5261%" y="191.50"></text></g><g><title>jwtd`core::str::converts::from_utf8 (7 samples, 0.06%)</title><rect x="67.4468%" y="181" width="0.0569%" height="15" fill="rgb(244,222,10)" fg:x="8300" fg:w="7"/><text x="67.6968%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.07%)</title><rect x="67.5280%" y="133" width="0.0650%" height="15" fill="rgb(236,179,52)" fg:x="8310" fg:w="8"/><text x="67.7780%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (11 samples, 0.09%)</title><rect x="67.5118%" y="165" width="0.0894%" height="15" fill="rgb(213,23,39)" fg:x="8308" fg:w="11"/><text x="67.7618%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.08%)</title><rect x="67.5199%" y="149" width="0.0813%" height="15" fill="rgb(238,48,10)" fg:x="8309" fg:w="10"/><text x="67.7699%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`calloc (13 samples, 0.11%)</title><rect x="67.5037%" y="181" width="0.1056%" height="15" fill="rgb(251,196,23)" fg:x="8307" fg:w="13"/><text x="67.7537%" y="191.50"></text></g><g><title>jwtd`base64::encode::encode_config (45 samples, 0.37%)</title><rect x="67.2517%" y="197" width="0.3657%" height="15" fill="rgb(250,152,24)" fg:x="8276" fg:w="45"/><text x="67.5017%" y="207.50"></text></g><g><title>jwtd`base64::encode::encode_with_padding (2 samples, 0.02%)</title><rect x="67.6174%" y="197" width="0.0163%" height="15" fill="rgb(209,150,17)" fg:x="8321" fg:w="2"/><text x="67.8674%" y="207.50"></text></g><g><title>jwtd`base64::encode::encoded_size (4 samples, 0.03%)</title><rect x="67.6337%" y="197" width="0.0325%" height="15" fill="rgb(234,202,34)" fg:x="8323" fg:w="4"/><text x="67.8837%" y="207.50"></text></g><g><title>jwtd`bn_mul4x_mont (13 samples, 0.11%)</title><rect x="67.6662%" y="197" width="0.1056%" height="15" fill="rgb(253,148,53)" fg:x="8327" fg:w="13"/><text x="67.9162%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (8 samples, 0.07%)</title><rect x="67.7881%" y="181" width="0.0650%" height="15" fill="rgb(218,129,16)" fg:x="8342" fg:w="8"/><text x="68.0381%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.24%)</title><rect x="67.8531%" y="181" width="0.2357%" height="15" fill="rgb(216,85,19)" fg:x="8350" fg:w="29"/><text x="68.1031%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (20 samples, 0.16%)</title><rect x="67.9262%" y="165" width="0.1625%" height="15" fill="rgb(235,228,7)" fg:x="8359" fg:w="20"/><text x="68.1762%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.07%)</title><rect x="68.3488%" y="165" width="0.0731%" height="15" fill="rgb(245,175,0)" fg:x="8411" fg:w="9"/><text x="68.5988%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (84 samples, 0.68%)</title><rect x="68.0887%" y="181" width="0.6826%" height="15" fill="rgb(208,168,36)" fg:x="8379" fg:w="84"/><text x="68.3387%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (43 samples, 0.35%)</title><rect x="68.4219%" y="165" width="0.3494%" height="15" fill="rgb(246,171,24)" fg:x="8420" fg:w="43"/><text x="68.6719%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (9 samples, 0.07%)</title><rect x="68.6982%" y="149" width="0.0731%" height="15" fill="rgb(215,142,24)" fg:x="8454" fg:w="9"/><text x="68.9482%" y="159.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;ring::rsa::signing::RsaKeyPair&gt; (124 samples, 1.01%)</title><rect x="67.7718%" y="197" width="1.0076%" height="15" fill="rgb(250,187,7)" fg:x="8340" fg:w="124"/><text x="68.0218%" y="207.50"></text></g><g><title>jwtd`core::str::converts::from_utf8 (2 samples, 0.02%)</title><rect x="68.7795%" y="197" width="0.0163%" height="15" fill="rgb(228,66,33)" fg:x="8464" fg:w="2"/><text x="69.0295%" y="207.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::elem_exp_consttime (2 samples, 0.02%)</title><rect x="68.8038%" y="197" width="0.0163%" height="15" fill="rgb(234,215,21)" fg:x="8467" fg:w="2"/><text x="69.0538%" y="207.50"></text></g><g><title>jwtd`ring::io::der::read_tag_and_get_value (2 samples, 0.02%)</title><rect x="68.8363%" y="197" width="0.0163%" height="15" fill="rgb(222,191,20)" fg:x="8471" fg:w="2"/><text x="69.0863%" y="207.50"></text></g><g><title>jwtd`ring::io::der::read_tag_and_get_value (3 samples, 0.02%)</title><rect x="68.8851%" y="181" width="0.0244%" height="15" fill="rgb(245,79,54)" fg:x="8477" fg:w="3"/><text x="69.1351%" y="191.50"></text></g><g><title>jwtd`LIMBS_are_zero (2 samples, 0.02%)</title><rect x="68.9339%" y="165" width="0.0163%" height="15" fill="rgb(240,10,37)" fg:x="8483" fg:w="2"/><text x="69.1839%" y="175.50"></text></g><g><title>jwtd`LIMBS_less_than (2 samples, 0.02%)</title><rect x="68.9501%" y="165" width="0.0163%" height="15" fill="rgb(214,192,32)" fg:x="8485" fg:w="2"/><text x="69.2001%" y="175.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Nonnegative::from_be_bytes_with_bit_length (10 samples, 0.08%)</title><rect x="68.9664%" y="165" width="0.0813%" height="15" fill="rgb(209,36,54)" fg:x="8487" fg:w="10"/><text x="69.2164%" y="175.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::elem_mul (2 samples, 0.02%)</title><rect x="69.0557%" y="165" width="0.0163%" height="15" fill="rgb(220,10,11)" fg:x="8498" fg:w="2"/><text x="69.3057%" y="175.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::verify_inverses_consttime (2 samples, 0.02%)</title><rect x="69.0720%" y="165" width="0.0163%" height="15" fill="rgb(221,106,17)" fg:x="8500" fg:w="2"/><text x="69.3220%" y="175.50"></text></g><g><title>jwtd`ring::io::der::positive_integer (2 samples, 0.02%)</title><rect x="69.0882%" y="165" width="0.0163%" height="15" fill="rgb(251,142,44)" fg:x="8502" fg:w="2"/><text x="69.3382%" y="175.50"></text></g><g><title>jwtd`ring::io::der::read_tag_and_get_value (5 samples, 0.04%)</title><rect x="69.1045%" y="165" width="0.0406%" height="15" fill="rgb(238,13,15)" fg:x="8504" fg:w="5"/><text x="69.3545%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="69.3483%" y="101" width="0.0163%" height="15" fill="rgb(208,107,27)" fg:x="8534" fg:w="2"/><text x="69.5983%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.06%)</title><rect x="69.3483%" y="133" width="0.0569%" height="15" fill="rgb(205,136,37)" fg:x="8534" fg:w="7"/><text x="69.5983%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (7 samples, 0.06%)</title><rect x="69.3483%" y="117" width="0.0569%" height="15" fill="rgb(250,205,27)" fg:x="8534" fg:w="7"/><text x="69.5983%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.04%)</title><rect x="69.3645%" y="101" width="0.0406%" height="15" fill="rgb(210,80,43)" fg:x="8536" fg:w="5"/><text x="69.6145%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.04%)</title><rect x="69.3645%" y="85" width="0.0406%" height="15" fill="rgb(247,160,36)" fg:x="8536" fg:w="5"/><text x="69.6145%" y="95.50"></text></g><g><title>jwtd`&lt;ring::arithmetic::bigint::Elem&lt;M,E&gt; as core::clone::Clone&gt;::clone (8 samples, 0.07%)</title><rect x="69.3483%" y="149" width="0.0650%" height="15" fill="rgb(234,13,49)" fg:x="8534" fg:w="8"/><text x="69.5983%" y="159.50"></text></g><g><title>jwtd`GFp_bn_mul_mont (3 samples, 0.02%)</title><rect x="69.4214%" y="149" width="0.0244%" height="15" fill="rgb(234,122,0)" fg:x="8543" fg:w="3"/><text x="69.6714%" y="159.50"></text></g><g><title>jwtd`GFp_bn_neg_inv_mod_r_u64 (2 samples, 0.02%)</title><rect x="69.4458%" y="149" width="0.0163%" height="15" fill="rgb(207,146,38)" fg:x="8546" fg:w="2"/><text x="69.6958%" y="159.50"></text></g><g><title>jwtd`LIMBS_are_zero (9 samples, 0.07%)</title><rect x="69.4702%" y="149" width="0.0731%" height="15" fill="rgb(207,177,25)" fg:x="8549" fg:w="9"/><text x="69.7202%" y="159.50"></text></g><g><title>jwtd`LIMBS_less_than (13 samples, 0.11%)</title><rect x="69.5433%" y="149" width="0.1056%" height="15" fill="rgb(211,178,42)" fg:x="8558" fg:w="13"/><text x="69.7933%" y="159.50"></text></g><g><title>jwtd`__rust_alloc (2 samples, 0.02%)</title><rect x="69.6815%" y="149" width="0.0163%" height="15" fill="rgb(230,69,54)" fg:x="8575" fg:w="2"/><text x="69.9315%" y="159.50"></text></g><g><title>jwtd`LIMBS_less_than (4 samples, 0.03%)</title><rect x="69.8196%" y="133" width="0.0325%" height="15" fill="rgb(214,135,41)" fg:x="8592" fg:w="4"/><text x="70.0696%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (4 samples, 0.03%)</title><rect x="69.8602%" y="117" width="0.0325%" height="15" fill="rgb(237,67,25)" fg:x="8597" fg:w="4"/><text x="70.1102%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="69.8684%" y="101" width="0.0244%" height="15" fill="rgb(222,189,50)" fg:x="8598" fg:w="3"/><text x="70.1184%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.02%)</title><rect x="69.8684%" y="85" width="0.0244%" height="15" fill="rgb(245,148,34)" fg:x="8598" fg:w="3"/><text x="70.1184%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`calloc (6 samples, 0.05%)</title><rect x="69.8521%" y="133" width="0.0488%" height="15" fill="rgb(222,29,6)" fg:x="8596" fg:w="6"/><text x="70.1021%" y="143.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::BoxedLimbs&lt;M&gt;::from_be_bytes_padded_less_than (24 samples, 0.20%)</title><rect x="69.7140%" y="149" width="0.1950%" height="15" fill="rgb(221,189,43)" fg:x="8579" fg:w="24"/><text x="69.9640%" y="159.50"></text></g><g><title>jwtd`GFp_bn_neg_inv_mod_r_u64 (15 samples, 0.12%)</title><rect x="69.9821%" y="133" width="0.1219%" height="15" fill="rgb(207,36,27)" fg:x="8612" fg:w="15"/><text x="70.2321%" y="143.50"></text></g><g><title>jwtd`LIMBS_less_than_limb (6 samples, 0.05%)</title><rect x="70.1040%" y="133" width="0.0488%" height="15" fill="rgb(217,90,24)" fg:x="8627" fg:w="6"/><text x="70.3540%" y="143.50"></text></g><g><title>jwtd`LIMBS_shl_mod (26 samples, 0.21%)</title><rect x="70.1528%" y="133" width="0.2113%" height="15" fill="rgb(224,66,35)" fg:x="8633" fg:w="26"/><text x="70.4028%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`calloc (6 samples, 0.05%)</title><rect x="70.3641%" y="133" width="0.0488%" height="15" fill="rgb(221,13,50)" fg:x="8659" fg:w="6"/><text x="70.6141%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (5 samples, 0.04%)</title><rect x="70.3722%" y="117" width="0.0406%" height="15" fill="rgb(236,68,49)" fg:x="8660" fg:w="5"/><text x="70.6222%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.03%)</title><rect x="70.3803%" y="101" width="0.0325%" height="15" fill="rgb(229,146,28)" fg:x="8661" fg:w="4"/><text x="70.6303%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.03%)</title><rect x="70.3803%" y="85" width="0.0325%" height="15" fill="rgb(225,31,38)" fg:x="8661" fg:w="4"/><text x="70.6303%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.09%)</title><rect x="70.4128%" y="133" width="0.0894%" height="15" fill="rgb(250,208,3)" fg:x="8665" fg:w="11"/><text x="70.6628%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.03%)</title><rect x="70.4697%" y="117" width="0.0325%" height="15" fill="rgb(246,54,23)" fg:x="8672" fg:w="4"/><text x="70.7197%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.07%)</title><rect x="70.5022%" y="133" width="0.0731%" height="15" fill="rgb(243,76,11)" fg:x="8676" fg:w="9"/><text x="70.7522%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="70.5591%" y="117" width="0.0163%" height="15" fill="rgb(245,21,50)" fg:x="8683" fg:w="2"/><text x="70.8091%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="70.5916%" y="101" width="0.0163%" height="15" fill="rgb(228,9,43)" fg:x="8687" fg:w="2"/><text x="70.8416%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (17 samples, 0.14%)</title><rect x="70.5753%" y="133" width="0.1381%" height="15" fill="rgb(208,100,47)" fg:x="8685" fg:w="17"/><text x="70.8253%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (17 samples, 0.14%)</title><rect x="70.5753%" y="117" width="0.1381%" height="15" fill="rgb(232,26,8)" fg:x="8685" fg:w="17"/><text x="70.8253%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.11%)</title><rect x="70.6078%" y="101" width="0.1056%" height="15" fill="rgb(216,166,38)" fg:x="8689" fg:w="13"/><text x="70.8578%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.11%)</title><rect x="70.6078%" y="85" width="0.1056%" height="15" fill="rgb(251,202,51)" fg:x="8689" fg:w="13"/><text x="70.8578%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.05%)</title><rect x="70.6647%" y="69" width="0.0488%" height="15" fill="rgb(254,216,34)" fg:x="8696" fg:w="6"/><text x="70.9147%" y="79.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Elem&lt;M&gt;::into_modulus (106 samples, 0.86%)</title><rect x="69.9090%" y="149" width="0.8614%" height="15" fill="rgb(251,32,27)" fg:x="8603" fg:w="106"/><text x="70.1590%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.05%)</title><rect x="70.7216%" y="133" width="0.0488%" height="15" fill="rgb(208,127,28)" fg:x="8703" fg:w="6"/><text x="70.9716%" y="143.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Modulus&lt;M&gt;::from_be_bytes_with_bit_length (3 samples, 0.02%)</title><rect x="70.7704%" y="149" width="0.0244%" height="15" fill="rgb(224,137,22)" fg:x="8709" fg:w="3"/><text x="71.0204%" y="159.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Modulus&lt;M&gt;::to_elem (6 samples, 0.05%)</title><rect x="70.7947%" y="149" width="0.0488%" height="15" fill="rgb(254,70,32)" fg:x="8712" fg:w="6"/><text x="71.0447%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (6 samples, 0.05%)</title><rect x="70.7947%" y="133" width="0.0488%" height="15" fill="rgb(229,75,37)" fg:x="8712" fg:w="6"/><text x="71.0447%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (6 samples, 0.05%)</title><rect x="70.7947%" y="117" width="0.0488%" height="15" fill="rgb(252,64,23)" fg:x="8712" fg:w="6"/><text x="71.0447%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.03%)</title><rect x="70.8110%" y="101" width="0.0325%" height="15" fill="rgb(232,162,48)" fg:x="8714" fg:w="4"/><text x="71.0610%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.02%)</title><rect x="70.8272%" y="85" width="0.0163%" height="15" fill="rgb(246,160,12)" fg:x="8716" fg:w="2"/><text x="71.0772%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_calloc (8 samples, 0.07%)</title><rect x="71.6317%" y="101" width="0.0650%" height="15" fill="rgb(247,166,0)" fg:x="8815" fg:w="8"/><text x="71.8817%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.02%)</title><rect x="71.8430%" y="69" width="0.0244%" height="15" fill="rgb(249,219,21)" fg:x="8841" fg:w="3"/><text x="72.0930%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21 samples, 0.17%)</title><rect x="71.7292%" y="85" width="0.1706%" height="15" fill="rgb(205,209,3)" fg:x="8827" fg:w="21"/><text x="71.9792%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="71.8836%" y="69" width="0.0163%" height="15" fill="rgb(243,44,1)" fg:x="8846" fg:w="2"/><text x="72.1336%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`calloc (40 samples, 0.33%)</title><rect x="71.5992%" y="133" width="0.3250%" height="15" fill="rgb(206,159,16)" fg:x="8811" fg:w="40"/><text x="71.8492%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (38 samples, 0.31%)</title><rect x="71.6155%" y="117" width="0.3088%" height="15" fill="rgb(244,77,30)" fg:x="8813" fg:w="38"/><text x="71.8655%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.23%)</title><rect x="71.6967%" y="101" width="0.2275%" height="15" fill="rgb(218,69,12)" fg:x="8823" fg:w="28"/><text x="71.9467%" y="111.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Nonnegative::from_be_bytes_with_bit_length (134 samples, 1.09%)</title><rect x="70.8435%" y="149" width="1.0889%" height="15" fill="rgb(212,87,7)" fg:x="8718" fg:w="134"/><text x="71.0935%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="72.0218%" y="69" width="0.0244%" height="15" fill="rgb(245,114,25)" fg:x="8863" fg:w="3"/><text x="72.2718%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.11%)</title><rect x="71.9486%" y="85" width="0.1138%" height="15" fill="rgb(210,61,42)" fg:x="8854" fg:w="14"/><text x="72.1986%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="72.0462%" y="69" width="0.0163%" height="15" fill="rgb(211,52,33)" fg:x="8866" fg:w="2"/><text x="72.2962%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (20 samples, 0.16%)</title><rect x="71.9324%" y="117" width="0.1625%" height="15" fill="rgb(234,58,33)" fg:x="8852" fg:w="20"/><text x="72.1824%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (20 samples, 0.16%)</title><rect x="71.9324%" y="101" width="0.1625%" height="15" fill="rgb(220,115,36)" fg:x="8852" fg:w="20"/><text x="72.1824%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="72.0705%" y="85" width="0.0244%" height="15" fill="rgb(243,153,54)" fg:x="8869" fg:w="3"/><text x="72.3205%" y="95.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Nonnegative::to_elem (21 samples, 0.17%)</title><rect x="71.9324%" y="149" width="0.1706%" height="15" fill="rgb(251,47,18)" fg:x="8852" fg:w="21"/><text x="72.1824%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`calloc (21 samples, 0.17%)</title><rect x="71.9324%" y="133" width="0.1706%" height="15" fill="rgb(242,102,42)" fg:x="8852" fg:w="21"/><text x="72.1824%" y="143.50"></text></g><g><title>jwtd`LIMBS_equal_limb (6 samples, 0.05%)</title><rect x="72.1193%" y="133" width="0.0488%" height="15" fill="rgb(234,31,38)" fg:x="8875" fg:w="6"/><text x="72.3693%" y="143.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::verify_inverses_consttime (12 samples, 0.10%)</title><rect x="72.1112%" y="149" width="0.0975%" height="15" fill="rgb(221,117,51)" fg:x="8874" fg:w="12"/><text x="72.3612%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.03%)</title><rect x="72.1762%" y="133" width="0.0325%" height="15" fill="rgb(212,20,18)" fg:x="8882" fg:w="4"/><text x="72.4262%" y="143.50"></text></g><g><title>jwtd`ring::io::der::positive_integer (10 samples, 0.08%)</title><rect x="72.2087%" y="149" width="0.0813%" height="15" fill="rgb(245,133,36)" fg:x="8886" fg:w="10"/><text x="72.4587%" y="159.50"></text></g><g><title>jwtd`ring::io::der::read_tag_and_get_value (11 samples, 0.09%)</title><rect x="72.2899%" y="149" width="0.0894%" height="15" fill="rgb(212,6,19)" fg:x="8896" fg:w="11"/><text x="72.5399%" y="159.50"></text></g><g><title>jwtd`ring::io::der_writer::write_all (2 samples, 0.02%)</title><rect x="72.3793%" y="149" width="0.0163%" height="15" fill="rgb(218,1,36)" fg:x="8907" fg:w="2"/><text x="72.6293%" y="159.50"></text></g><g><title>jwtd`GFp_bn_mul_mont (2 samples, 0.02%)</title><rect x="72.4037%" y="133" width="0.0163%" height="15" fill="rgb(246,84,54)" fg:x="8910" fg:w="2"/><text x="72.6537%" y="143.50"></text></g><g><title>jwtd`GFp_bn_neg_inv_mod_r_u64 (2 samples, 0.02%)</title><rect x="72.4200%" y="133" width="0.0163%" height="15" fill="rgb(242,110,6)" fg:x="8912" fg:w="2"/><text x="72.6700%" y="143.50"></text></g><g><title>jwtd`bn_sqr8x_mont (2 samples, 0.02%)</title><rect x="72.4687%" y="133" width="0.0163%" height="15" fill="rgb(214,47,5)" fg:x="8918" fg:w="2"/><text x="72.7187%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (7 samples, 0.06%)</title><rect x="72.6231%" y="101" width="0.0569%" height="15" fill="rgb(218,159,25)" fg:x="8937" fg:w="7"/><text x="72.8731%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.06%)</title><rect x="72.6231%" y="85" width="0.0569%" height="15" fill="rgb(215,211,28)" fg:x="8937" fg:w="7"/><text x="72.8731%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.06%)</title><rect x="72.6231%" y="69" width="0.0569%" height="15" fill="rgb(238,59,32)" fg:x="8937" fg:w="7"/><text x="72.8731%" y="79.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::BoxedLimbs&lt;M&gt;::from_be_bytes_padded_less_than (25 samples, 0.20%)</title><rect x="72.4850%" y="133" width="0.2032%" height="15" fill="rgb(226,82,3)" fg:x="8920" fg:w="25"/><text x="72.7350%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`calloc (8 samples, 0.07%)</title><rect x="72.6231%" y="117" width="0.0650%" height="15" fill="rgb(240,164,32)" fg:x="8937" fg:w="8"/><text x="72.8731%" y="127.50"></text></g><g><title>jwtd`GFp_bn_neg_inv_mod_r_u64 (14 samples, 0.11%)</title><rect x="72.7775%" y="117" width="0.1138%" height="15" fill="rgb(232,46,7)" fg:x="8956" fg:w="14"/><text x="73.0275%" y="127.50"></text></g><g><title>jwtd`LIMBS_less_than_limb (3 samples, 0.02%)</title><rect x="72.8913%" y="117" width="0.0244%" height="15" fill="rgb(229,129,53)" fg:x="8970" fg:w="3"/><text x="73.1413%" y="127.50"></text></g><g><title>jwtd`LIMBS_shl_mod (29 samples, 0.24%)</title><rect x="72.9157%" y="117" width="0.2357%" height="15" fill="rgb(234,188,29)" fg:x="8973" fg:w="29"/><text x="73.1657%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_calloc (3 samples, 0.02%)</title><rect x="73.1513%" y="85" width="0.0244%" height="15" fill="rgb(246,141,4)" fg:x="9002" fg:w="3"/><text x="73.4013%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (6 samples, 0.05%)</title><rect x="73.1513%" y="101" width="0.0488%" height="15" fill="rgb(229,23,39)" fg:x="9002" fg:w="6"/><text x="73.4013%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.02%)</title><rect x="73.1757%" y="85" width="0.0244%" height="15" fill="rgb(206,12,3)" fg:x="9005" fg:w="3"/><text x="73.4257%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.02%)</title><rect x="73.1757%" y="69" width="0.0244%" height="15" fill="rgb(252,226,20)" fg:x="9005" fg:w="3"/><text x="73.4257%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`calloc (7 samples, 0.06%)</title><rect x="73.1513%" y="117" width="0.0569%" height="15" fill="rgb(216,123,35)" fg:x="9002" fg:w="7"/><text x="73.4013%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.03%)</title><rect x="73.2082%" y="117" width="0.0325%" height="15" fill="rgb(212,68,40)" fg:x="9009" fg:w="4"/><text x="73.4582%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.02%)</title><rect x="73.2244%" y="101" width="0.0163%" height="15" fill="rgb(254,125,32)" fg:x="9011" fg:w="2"/><text x="73.4744%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.03%)</title><rect x="73.2407%" y="117" width="0.0325%" height="15" fill="rgb(253,97,22)" fg:x="9013" fg:w="4"/><text x="73.4907%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="73.3301%" y="53" width="0.0163%" height="15" fill="rgb(241,101,14)" fg:x="9024" fg:w="2"/><text x="73.5801%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (12 samples, 0.10%)</title><rect x="73.2732%" y="101" width="0.0975%" height="15" fill="rgb(238,103,29)" fg:x="9017" fg:w="12"/><text x="73.5232%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.10%)</title><rect x="73.2732%" y="85" width="0.0975%" height="15" fill="rgb(233,195,47)" fg:x="9017" fg:w="12"/><text x="73.5232%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.09%)</title><rect x="73.2813%" y="69" width="0.0894%" height="15" fill="rgb(246,218,30)" fg:x="9018" fg:w="11"/><text x="73.5313%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="73.3463%" y="53" width="0.0244%" height="15" fill="rgb(219,145,47)" fg:x="9026" fg:w="3"/><text x="73.5963%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc (13 samples, 0.11%)</title><rect x="73.2732%" y="117" width="0.1056%" height="15" fill="rgb(243,12,26)" fg:x="9017" fg:w="13"/><text x="73.5232%" y="127.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Modulus&lt;M&gt;::from_nonnegative_with_bit_length (86 samples, 0.70%)</title><rect x="72.6881%" y="133" width="0.6988%" height="15" fill="rgb(214,87,16)" fg:x="8945" fg:w="86"/><text x="72.9381%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.02%)</title><rect x="73.5576%" y="69" width="0.0244%" height="15" fill="rgb(208,99,42)" fg:x="9052" fg:w="3"/><text x="73.8076%" y="79.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::PrivateExponent&lt;M&gt;::from_be_bytes_padded (25 samples, 0.20%)</title><rect x="73.3870%" y="133" width="0.2032%" height="15" fill="rgb(253,99,2)" fg:x="9031" fg:w="25"/><text x="73.6370%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`calloc (5 samples, 0.04%)</title><rect x="73.5495%" y="117" width="0.0406%" height="15" fill="rgb(220,168,23)" fg:x="9051" fg:w="5"/><text x="73.7995%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (4 samples, 0.03%)</title><rect x="73.5576%" y="101" width="0.0325%" height="15" fill="rgb(242,38,24)" fg:x="9052" fg:w="4"/><text x="73.8076%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.03%)</title><rect x="73.5576%" y="85" width="0.0325%" height="15" fill="rgb(225,182,9)" fg:x="9052" fg:w="4"/><text x="73.8076%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.02%)</title><rect x="73.5982%" y="133" width="0.0163%" height="15" fill="rgb(243,178,37)" fg:x="9057" fg:w="2"/><text x="73.8482%" y="143.50"></text></g><g><title>jwtd`ring::rsa::signing::PrivatePrime&lt;M&gt;::new (152 samples, 1.24%)</title><rect x="72.3956%" y="149" width="1.2352%" height="15" fill="rgb(232,139,19)" fg:x="8909" fg:w="152"/><text x="72.6456%" y="159.50"></text></g><g><title>jwtd`&lt;ring::io::writer::Writer as ring::io::writer::Accumulator&gt;::write_byte (3 samples, 0.02%)</title><rect x="73.6958%" y="117" width="0.0244%" height="15" fill="rgb(225,201,24)" fg:x="9069" fg:w="3"/><text x="73.9458%" y="127.50"></text></g><g><title>jwtd`ring::io::der_writer::write_positive_integer (10 samples, 0.08%)</title><rect x="73.7201%" y="117" width="0.0813%" height="15" fill="rgb(221,47,46)" fg:x="9072" fg:w="10"/><text x="73.9701%" y="127.50"></text></g><g><title>jwtd`&lt;ring::io::writer::LengthMeasurement as ring::io::writer::Accumulator&gt;::write_bytes (4 samples, 0.03%)</title><rect x="73.8176%" y="101" width="0.0325%" height="15" fill="rgb(249,23,13)" fg:x="9084" fg:w="4"/><text x="74.0676%" y="111.50"></text></g><g><title>jwtd`&lt;ring::io::writer::LengthMeasurement as ring::io::writer::Accumulator&gt;::write_byte (2 samples, 0.02%)</title><rect x="73.8908%" y="85" width="0.0163%" height="15" fill="rgb(219,9,5)" fg:x="9093" fg:w="2"/><text x="74.1408%" y="95.50"></text></g><g><title>jwtd`&lt;ring::io::writer::Writer as ring::io::writer::Accumulator&gt;::write_bytes (3 samples, 0.02%)</title><rect x="73.9233%" y="85" width="0.0244%" height="15" fill="rgb(254,171,16)" fg:x="9097" fg:w="3"/><text x="74.1733%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="73.9233%" y="69" width="0.0244%" height="15" fill="rgb(230,171,20)" fg:x="9097" fg:w="3"/><text x="74.1733%" y="79.50"></text></g><g><title>jwtd`ring::rsa::signing::RsaSubjectPublicKey::from_n_and_e::_{{closure}} (19 samples, 0.15%)</title><rect x="73.8014%" y="117" width="0.1544%" height="15" fill="rgb(210,71,41)" fg:x="9082" fg:w="19"/><text x="74.0514%" y="127.50"></text></g><g><title>jwtd`ring::io::der_writer::write_positive_integer (13 samples, 0.11%)</title><rect x="73.8502%" y="101" width="0.1056%" height="15" fill="rgb(206,173,20)" fg:x="9088" fg:w="13"/><text x="74.1002%" y="111.50"></text></g><g><title>jwtd`ring::io::der_writer::write_all (47 samples, 0.38%)</title><rect x="73.6551%" y="133" width="0.3819%" height="15" fill="rgb(233,88,34)" fg:x="9064" fg:w="47"/><text x="73.9051%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (10 samples, 0.08%)</title><rect x="73.9558%" y="117" width="0.0813%" height="15" fill="rgb(223,209,46)" fg:x="9101" fg:w="10"/><text x="74.2058%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (10 samples, 0.08%)</title><rect x="73.9558%" y="101" width="0.0813%" height="15" fill="rgb(250,43,18)" fg:x="9101" fg:w="10"/><text x="74.2058%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.07%)</title><rect x="73.9639%" y="85" width="0.0731%" height="15" fill="rgb(208,13,10)" fg:x="9102" fg:w="9"/><text x="74.2139%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.07%)</title><rect x="73.9639%" y="69" width="0.0731%" height="15" fill="rgb(212,200,36)" fg:x="9102" fg:w="9"/><text x="74.2139%" y="79.50"></text></g><g><title>jwtd`ring::rsa::signing::RsaSubjectPublicKey::from_n_and_e (51 samples, 0.41%)</title><rect x="73.6307%" y="149" width="0.4144%" height="15" fill="rgb(225,90,30)" fg:x="9061" fg:w="51"/><text x="73.8807%" y="159.50"></text></g><g><title>jwtd`GFp_bn_mul_mont (4 samples, 0.03%)</title><rect x="74.5978%" y="117" width="0.0325%" height="15" fill="rgb(236,182,39)" fg:x="9180" fg:w="4"/><text x="74.8478%" y="127.50"></text></g><g><title>jwtd`GFp_bn_neg_inv_mod_r_u64 (17 samples, 0.14%)</title><rect x="74.6303%" y="117" width="0.1381%" height="15" fill="rgb(212,144,35)" fg:x="9184" fg:w="17"/><text x="74.8803%" y="127.50"></text></g><g><title>jwtd`LIMBS_less_than_limb (13 samples, 0.11%)</title><rect x="74.7684%" y="117" width="0.1056%" height="15" fill="rgb(228,63,44)" fg:x="9201" fg:w="13"/><text x="75.0184%" y="127.50"></text></g><g><title>jwtd`LIMBS_shl_mod (54 samples, 0.44%)</title><rect x="74.8740%" y="117" width="0.4388%" height="15" fill="rgb(228,109,6)" fg:x="9214" fg:w="54"/><text x="75.1240%" y="127.50"></text></g><g><title>jwtd`__rdl_alloc (2 samples, 0.02%)</title><rect x="75.3210%" y="117" width="0.0163%" height="15" fill="rgb(238,117,24)" fg:x="9269" fg:w="2"/><text x="75.5710%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.04%)</title><rect x="75.4510%" y="37" width="0.0406%" height="15" fill="rgb(242,26,26)" fg:x="9285" fg:w="5"/><text x="75.7010%" y="47.50"></text></g><g><title>jwtd`alloc::vec::from_elem (17 samples, 0.14%)</title><rect x="75.3616%" y="117" width="0.1381%" height="15" fill="rgb(221,92,48)" fg:x="9274" fg:w="17"/><text x="75.6116%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`calloc (14 samples, 0.11%)</title><rect x="75.3860%" y="101" width="0.1138%" height="15" fill="rgb(209,209,32)" fg:x="9277" fg:w="14"/><text x="75.6360%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (13 samples, 0.11%)</title><rect x="75.3941%" y="85" width="0.1056%" height="15" fill="rgb(221,70,22)" fg:x="9278" fg:w="13"/><text x="75.6441%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.11%)</title><rect x="75.3941%" y="69" width="0.1056%" height="15" fill="rgb(248,145,5)" fg:x="9278" fg:w="13"/><text x="75.6441%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.11%)</title><rect x="75.3941%" y="53" width="0.1056%" height="15" fill="rgb(226,116,26)" fg:x="9278" fg:w="13"/><text x="75.6441%" y="63.50"></text></g><g><title>jwtd`bn_sqr8x_mont (6 samples, 0.05%)</title><rect x="75.4998%" y="117" width="0.0488%" height="15" fill="rgb(244,5,17)" fg:x="9291" fg:w="6"/><text x="75.7498%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.04%)</title><rect x="75.6054%" y="101" width="0.0406%" height="15" fill="rgb(252,159,33)" fg:x="9304" fg:w="5"/><text x="75.8554%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.02%)</title><rect x="75.6216%" y="85" width="0.0244%" height="15" fill="rgb(206,71,0)" fg:x="9306" fg:w="3"/><text x="75.8716%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.08%)</title><rect x="75.6460%" y="101" width="0.0813%" height="15" fill="rgb(233,118,54)" fg:x="9309" fg:w="10"/><text x="75.8960%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.05%)</title><rect x="75.6785%" y="85" width="0.0488%" height="15" fill="rgb(234,83,48)" fg:x="9313" fg:w="6"/><text x="75.9285%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.02%)</title><rect x="75.7110%" y="69" width="0.0163%" height="15" fill="rgb(228,3,54)" fg:x="9317" fg:w="2"/><text x="75.9610%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="75.7354%" y="85" width="0.0163%" height="15" fill="rgb(226,155,13)" fg:x="9320" fg:w="2"/><text x="75.9854%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc (14 samples, 0.11%)</title><rect x="75.7273%" y="101" width="0.1138%" height="15" fill="rgb(241,28,37)" fg:x="9319" fg:w="14"/><text x="75.9773%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (11 samples, 0.09%)</title><rect x="75.7517%" y="85" width="0.0894%" height="15" fill="rgb(233,93,10)" fg:x="9322" fg:w="11"/><text x="76.0017%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.08%)</title><rect x="75.7598%" y="69" width="0.0813%" height="15" fill="rgb(225,113,19)" fg:x="9323" fg:w="10"/><text x="76.0098%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.08%)</title><rect x="75.7598%" y="53" width="0.0813%" height="15" fill="rgb(241,2,18)" fg:x="9323" fg:w="10"/><text x="76.0098%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.05%)</title><rect x="75.7923%" y="37" width="0.0488%" height="15" fill="rgb(228,207,21)" fg:x="9327" fg:w="6"/><text x="76.0423%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.02%)</title><rect x="75.8411%" y="101" width="0.0163%" height="15" fill="rgb(213,211,35)" fg:x="9333" fg:w="2"/><text x="76.0911%" y="111.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::elem_exp_vartime_ (39 samples, 0.32%)</title><rect x="75.5485%" y="117" width="0.3169%" height="15" fill="rgb(209,83,10)" fg:x="9297" fg:w="39"/><text x="75.7985%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="75.9223%" y="53" width="0.0244%" height="15" fill="rgb(209,164,1)" fg:x="9343" fg:w="3"/><text x="76.1723%" y="63.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="75.9467%" y="53" width="0.0163%" height="15" fill="rgb(213,184,43)" fg:x="9346" fg:w="2"/><text x="76.1967%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (12 samples, 0.10%)</title><rect x="75.8736%" y="101" width="0.0975%" height="15" fill="rgb(231,61,34)" fg:x="9337" fg:w="12"/><text x="76.1236%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.10%)</title><rect x="75.8736%" y="85" width="0.0975%" height="15" fill="rgb(235,75,3)" fg:x="9337" fg:w="12"/><text x="76.1236%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.10%)</title><rect x="75.8736%" y="69" width="0.0975%" height="15" fill="rgb(220,106,47)" fg:x="9337" fg:w="12"/><text x="76.1236%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`calloc (13 samples, 0.11%)</title><rect x="75.8736%" y="117" width="0.1056%" height="15" fill="rgb(210,196,33)" fg:x="9337" fg:w="13"/><text x="76.1236%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.02%)</title><rect x="75.9792%" y="117" width="0.0163%" height="15" fill="rgb(229,154,42)" fg:x="9350" fg:w="2"/><text x="76.2292%" y="127.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Modulus&lt;M&gt;::from_be_bytes_with_bit_length (232 samples, 1.89%)</title><rect x="74.1264%" y="133" width="1.8853%" height="15" fill="rgb(228,114,26)" fg:x="9122" fg:w="232"/><text x="74.3764%" y="143.50">j..</text></g><g><title>jwtd`ring::rsa::verification::Key::from_modulus_and_exponent (246 samples, 2.00%)</title><rect x="74.0452%" y="149" width="1.9990%" height="15" fill="rgb(208,144,1)" fg:x="9112" fg:w="246"/><text x="74.2952%" y="159.50">j..</text></g><g><title>jwtd`ring::limb::limbs_minimal_bits (3 samples, 0.02%)</title><rect x="76.0198%" y="133" width="0.0244%" height="15" fill="rgb(239,112,37)" fg:x="9355" fg:w="3"/><text x="76.2698%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`calloc (3 samples, 0.02%)</title><rect x="76.0442%" y="149" width="0.0244%" height="15" fill="rgb(210,96,50)" fg:x="9358" fg:w="3"/><text x="76.2942%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.05%)</title><rect x="76.0686%" y="149" width="0.0488%" height="15" fill="rgb(222,178,2)" fg:x="9361" fg:w="6"/><text x="76.3186%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (2 samples, 0.02%)</title><rect x="76.1011%" y="133" width="0.0163%" height="15" fill="rgb(226,74,18)" fg:x="9365" fg:w="2"/><text x="76.3511%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.10%)</title><rect x="76.1173%" y="149" width="0.0975%" height="15" fill="rgb(225,67,54)" fg:x="9367" fg:w="12"/><text x="76.3673%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.07%)</title><rect x="76.1498%" y="133" width="0.0650%" height="15" fill="rgb(251,92,32)" fg:x="9371" fg:w="8"/><text x="76.3998%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (4 samples, 0.03%)</title><rect x="76.2149%" y="149" width="0.0325%" height="15" fill="rgb(228,149,22)" fg:x="9379" fg:w="4"/><text x="76.4649%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="76.2474%" y="149" width="0.0163%" height="15" fill="rgb(243,54,13)" fg:x="9383" fg:w="2"/><text x="76.4974%" y="159.50"></text></g><g><title>jwtd`ring::rsa::signing::RsaKeyPair::from_der_reader (880 samples, 7.15%)</title><rect x="69.1451%" y="165" width="7.1510%" height="15" fill="rgb(243,180,28)" fg:x="8509" fg:w="880"/><text x="69.3951%" y="175.50">jwtd`ring:..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.03%)</title><rect x="76.2636%" y="149" width="0.0325%" height="15" fill="rgb(208,167,24)" fg:x="9385" fg:w="4"/><text x="76.5136%" y="159.50"></text></g><g><title>jwtd`ring::rsa::verification::Key::from_modulus_and_exponent (2 samples, 0.02%)</title><rect x="76.3042%" y="165" width="0.0163%" height="15" fill="rgb(245,73,45)" fg:x="9390" fg:w="2"/><text x="76.5542%" y="175.50"></text></g><g><title>jwtd`untrusted::Input::read_all (916 samples, 7.44%)</title><rect x="68.9095%" y="181" width="7.4435%" height="15" fill="rgb(237,203,48)" fg:x="8480" fg:w="916"/><text x="69.1595%" y="191.50">jwtd`untru..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="76.3286%" y="165" width="0.0244%" height="15" fill="rgb(211,197,16)" fg:x="9393" fg:w="3"/><text x="76.5786%" y="175.50"></text></g><g><title>jwtd`ring::rsa::signing::RsaKeyPair::from_der (923 samples, 7.50%)</title><rect x="68.8607%" y="197" width="7.5004%" height="15" fill="rgb(243,99,51)" fg:x="8474" fg:w="923"/><text x="69.1107%" y="207.50">jwtd`ring:..</text></g><g><title>jwtd`ring::io::der::read_tag_and_get_value (2 samples, 0.02%)</title><rect x="76.3855%" y="181" width="0.0163%" height="15" fill="rgb(215,123,29)" fg:x="9400" fg:w="2"/><text x="76.6355%" y="191.50"></text></g><g><title>jwtd`ring::rsa::signing::RsaKeyPair::public_modulus_len (11 samples, 0.09%)</title><rect x="76.3611%" y="197" width="0.0894%" height="15" fill="rgb(239,186,37)" fg:x="9397" fg:w="11"/><text x="76.6111%" y="207.50"></text></g><g><title>jwtd`untrusted::Input::read_all (5 samples, 0.04%)</title><rect x="76.4099%" y="181" width="0.0406%" height="15" fill="rgb(252,136,39)" fg:x="9403" fg:w="5"/><text x="76.6599%" y="191.50"></text></g><g><title>jwtd`&lt;ring::rsa::padding::PKCS1 as ring::rsa::padding::RsaEncoding&gt;::encode (13 samples, 0.11%)</title><rect x="76.5968%" y="181" width="0.1056%" height="15" fill="rgb(223,213,32)" fg:x="9426" fg:w="13"/><text x="76.8468%" y="191.50"></text></g><g><title>jwtd`ring::rsa::padding::pkcs1_encode (13 samples, 0.11%)</title><rect x="76.5968%" y="165" width="0.1056%" height="15" fill="rgb(233,115,5)" fg:x="9426" fg:w="13"/><text x="76.8468%" y="175.50"></text></g><g><title>jwtd`GFp_bn_from_montgomery_in_place (103 samples, 0.84%)</title><rect x="76.7105%" y="181" width="0.8370%" height="15" fill="rgb(207,226,44)" fg:x="9440" fg:w="103"/><text x="76.9605%" y="191.50"></text></g><g><title>jwtd`GFp_limbs_mul_add_limb (86 samples, 0.70%)</title><rect x="76.8487%" y="165" width="0.6988%" height="15" fill="rgb(208,126,0)" fg:x="9457" fg:w="86"/><text x="77.0987%" y="175.50"></text></g><g><title>jwtd`GFp_bn_gather5 (309 samples, 2.51%)</title><rect x="77.5475%" y="181" width="2.5110%" height="15" fill="rgb(244,66,21)" fg:x="9543" fg:w="309"/><text x="77.7975%" y="191.50">jw..</text></g><g><title>jwtd`GFp_bn_mul_mont (12 samples, 0.10%)</title><rect x="80.0585%" y="181" width="0.0975%" height="15" fill="rgb(222,97,12)" fg:x="9852" fg:w="12"/><text x="80.3085%" y="191.50"></text></g><g><title>jwtd`GFp_bn_mul_mont_gather5 (5 samples, 0.04%)</title><rect x="80.1560%" y="181" width="0.0406%" height="15" fill="rgb(219,213,19)" fg:x="9864" fg:w="5"/><text x="80.4060%" y="191.50"></text></g><g><title>jwtd`GFp_bn_scatter5 (70 samples, 0.57%)</title><rect x="80.1967%" y="181" width="0.5688%" height="15" fill="rgb(252,169,30)" fg:x="9869" fg:w="70"/><text x="80.4467%" y="191.50"></text></g><g><title>jwtd`GFp_limbs_mul_add_limb (3 samples, 0.02%)</title><rect x="80.7655%" y="181" width="0.0244%" height="15" fill="rgb(206,32,51)" fg:x="9939" fg:w="3"/><text x="81.0155%" y="191.50"></text></g><g><title>jwtd`GFp_sha256_block_data_order (3 samples, 0.02%)</title><rect x="80.7899%" y="181" width="0.0244%" height="15" fill="rgb(250,172,42)" fg:x="9942" fg:w="3"/><text x="81.0399%" y="191.50"></text></g><g><title>jwtd`GFp_sha256_block_data_order_avx (3 samples, 0.02%)</title><rect x="80.8142%" y="181" width="0.0244%" height="15" fill="rgb(209,34,43)" fg:x="9945" fg:w="3"/><text x="81.0642%" y="191.50"></text></g><g><title>jwtd`LIMBS_add_mod (12 samples, 0.10%)</title><rect x="80.8386%" y="181" width="0.0975%" height="15" fill="rgb(223,11,35)" fg:x="9948" fg:w="12"/><text x="81.0886%" y="191.50"></text></g><g><title>jwtd`LIMBS_equal (6 samples, 0.05%)</title><rect x="80.9361%" y="181" width="0.0488%" height="15" fill="rgb(251,219,26)" fg:x="9960" fg:w="6"/><text x="81.1861%" y="191.50"></text></g><g><title>jwtd`LIMBS_sub_mod (4 samples, 0.03%)</title><rect x="80.9849%" y="181" width="0.0325%" height="15" fill="rgb(231,119,3)" fg:x="9966" fg:w="4"/><text x="81.2349%" y="191.50"></text></g><g><title>jwtd`__rdl_alloc (2 samples, 0.02%)</title><rect x="81.0174%" y="181" width="0.0163%" height="15" fill="rgb(216,97,11)" fg:x="9970" fg:w="2"/><text x="81.2674%" y="191.50"></text></g><g><title>jwtd`__rdl_alloc_zeroed (2 samples, 0.02%)</title><rect x="81.0336%" y="181" width="0.0163%" height="15" fill="rgb(223,59,9)" fg:x="9972" fg:w="2"/><text x="81.2836%" y="191.50"></text></g><g><title>jwtd`__rdl_dealloc (3 samples, 0.02%)</title><rect x="81.0499%" y="181" width="0.0244%" height="15" fill="rgb(233,93,31)" fg:x="9974" fg:w="3"/><text x="81.2999%" y="191.50"></text></g><g><title>jwtd`__rust_dealloc (3 samples, 0.02%)</title><rect x="81.0824%" y="181" width="0.0244%" height="15" fill="rgb(239,81,33)" fg:x="9978" fg:w="3"/><text x="81.3324%" y="191.50"></text></g><g><title>jwtd`bn_from_mont8x (3 samples, 0.02%)</title><rect x="81.1068%" y="181" width="0.0244%" height="15" fill="rgb(213,120,34)" fg:x="9981" fg:w="3"/><text x="81.3568%" y="191.50"></text></g><g><title>jwtd`bn_mul4x_mont (5 samples, 0.04%)</title><rect x="81.1312%" y="181" width="0.0406%" height="15" fill="rgb(243,49,53)" fg:x="9984" fg:w="5"/><text x="81.3812%" y="191.50"></text></g><g><title>jwtd`bn_mul4x_mont_gather5 (6 samples, 0.05%)</title><rect x="81.1718%" y="181" width="0.0488%" height="15" fill="rgb(247,216,33)" fg:x="9989" fg:w="6"/><text x="81.4218%" y="191.50"></text></g><g><title>jwtd`bn_sqr8x_mont (13 samples, 0.11%)</title><rect x="81.2205%" y="181" width="0.1056%" height="15" fill="rgb(226,26,14)" fg:x="9995" fg:w="13"/><text x="81.4705%" y="191.50"></text></g><g><title>jwtd`LIMBS_less_than (5 samples, 0.04%)</title><rect x="81.6025%" y="165" width="0.0406%" height="15" fill="rgb(215,49,53)" fg:x="10042" fg:w="5"/><text x="81.8525%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`calloc (6 samples, 0.05%)</title><rect x="81.6431%" y="165" width="0.0488%" height="15" fill="rgb(245,162,40)" fg:x="10047" fg:w="6"/><text x="81.8931%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (5 samples, 0.04%)</title><rect x="81.6512%" y="149" width="0.0406%" height="15" fill="rgb(229,68,17)" fg:x="10048" fg:w="5"/><text x="81.9012%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.04%)</title><rect x="81.6512%" y="133" width="0.0406%" height="15" fill="rgb(213,182,10)" fg:x="10048" fg:w="5"/><text x="81.9012%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.04%)</title><rect x="81.6512%" y="117" width="0.0406%" height="15" fill="rgb(245,125,30)" fg:x="10048" fg:w="5"/><text x="81.9012%" y="127.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Elem&lt;M&gt;::from_be_bytes_padded (46 samples, 0.37%)</title><rect x="81.3262%" y="181" width="0.3738%" height="15" fill="rgb(232,202,2)" fg:x="10008" fg:w="46"/><text x="81.5762%" y="191.50"></text></g><g><title>jwtd`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="82.0169%" y="165" width="0.0163%" height="15" fill="rgb(237,140,51)" fg:x="10093" fg:w="2"/><text x="82.2669%" y="175.50"></text></g><g><title>jwtd`GFp_bn_gather5 (15 samples, 0.12%)</title><rect x="82.0332%" y="165" width="0.1219%" height="15" fill="rgb(236,157,25)" fg:x="10095" fg:w="15"/><text x="82.2832%" y="175.50"></text></g><g><title>jwtd`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (202 samples, 1.64%)</title><rect x="82.1957%" y="149" width="1.6415%" height="15" fill="rgb(219,209,0)" fg:x="10115" fg:w="202"/><text x="82.4457%" y="159.50"></text></g><g><title>jwtd`LIMBS_window5_unsplit_window (14 samples, 0.11%)</title><rect x="83.7234%" y="133" width="0.1138%" height="15" fill="rgb(240,116,54)" fg:x="10303" fg:w="14"/><text x="83.9734%" y="143.50"></text></g><g><title>jwtd`GFp_bn_power5 (105 samples, 0.85%)</title><rect x="83.8372%" y="149" width="0.8532%" height="15" fill="rgb(216,10,36)" fg:x="10317" fg:w="105"/><text x="84.0872%" y="159.50"></text></g><g><title>jwtd`LIMBS_window5_split_window (2 samples, 0.02%)</title><rect x="84.6904%" y="149" width="0.0163%" height="15" fill="rgb(222,72,44)" fg:x="10422" fg:w="2"/><text x="84.9404%" y="159.50"></text></g><g><title>jwtd`ring::limb::fold_5_bit_windows (333 samples, 2.71%)</title><rect x="82.1632%" y="165" width="2.7060%" height="15" fill="rgb(232,159,9)" fg:x="10111" fg:w="333"/><text x="82.4132%" y="175.50">jw..</text></g><g><title>jwtd`LIMBS_window5_unsplit_window (20 samples, 0.16%)</title><rect x="84.7066%" y="149" width="0.1625%" height="15" fill="rgb(210,39,32)" fg:x="10424" fg:w="20"/><text x="84.9566%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (3 samples, 0.02%)</title><rect x="84.8854%" y="133" width="0.0244%" height="15" fill="rgb(216,194,45)" fg:x="10446" fg:w="3"/><text x="85.1354%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (9 samples, 0.07%)</title><rect x="84.9586%" y="101" width="0.0731%" height="15" fill="rgb(218,18,35)" fg:x="10455" fg:w="9"/><text x="85.2086%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (7 samples, 0.06%)</title><rect x="84.9748%" y="85" width="0.0569%" height="15" fill="rgb(207,83,51)" fg:x="10457" fg:w="7"/><text x="85.2248%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`calloc (44 samples, 0.36%)</title><rect x="84.8692%" y="165" width="0.3575%" height="15" fill="rgb(225,63,43)" fg:x="10444" fg:w="44"/><text x="85.1192%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (43 samples, 0.35%)</title><rect x="84.8773%" y="149" width="0.3494%" height="15" fill="rgb(207,57,36)" fg:x="10445" fg:w="43"/><text x="85.1273%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (39 samples, 0.32%)</title><rect x="84.9098%" y="133" width="0.3169%" height="15" fill="rgb(216,99,33)" fg:x="10449" fg:w="39"/><text x="85.1598%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (38 samples, 0.31%)</title><rect x="84.9179%" y="117" width="0.3088%" height="15" fill="rgb(225,42,16)" fg:x="10450" fg:w="38"/><text x="85.1679%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (24 samples, 0.20%)</title><rect x="85.0317%" y="101" width="0.1950%" height="15" fill="rgb(220,201,45)" fg:x="10464" fg:w="24"/><text x="85.2817%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.03%)</title><rect x="85.2267%" y="165" width="0.0325%" height="15" fill="rgb(225,33,4)" fg:x="10488" fg:w="4"/><text x="85.4767%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_size (10 samples, 0.08%)</title><rect x="85.2917%" y="149" width="0.0813%" height="15" fill="rgb(224,33,50)" fg:x="10496" fg:w="10"/><text x="85.5417%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.15%)</title><rect x="85.2592%" y="165" width="0.1544%" height="15" fill="rgb(246,198,51)" fg:x="10492" fg:w="19"/><text x="85.5092%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (4 samples, 0.03%)</title><rect x="85.3811%" y="149" width="0.0325%" height="15" fill="rgb(205,22,4)" fg:x="10507" fg:w="4"/><text x="85.6311%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_small (9 samples, 0.07%)</title><rect x="85.4136%" y="165" width="0.0731%" height="15" fill="rgb(206,3,8)" fg:x="10511" fg:w="9"/><text x="85.6636%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (7 samples, 0.06%)</title><rect x="85.4868%" y="165" width="0.0569%" height="15" fill="rgb(251,23,15)" fg:x="10520" fg:w="7"/><text x="85.7368%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.02%)</title><rect x="85.5518%" y="165" width="0.0244%" height="15" fill="rgb(252,88,28)" fg:x="10528" fg:w="3"/><text x="85.8018%" y="175.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::elem_exp_consttime (486 samples, 3.95%)</title><rect x="81.7000%" y="181" width="3.9493%" height="15" fill="rgb(212,127,14)" fg:x="10054" fg:w="486"/><text x="81.9500%" y="191.50">jwtd..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.07%)</title><rect x="85.5761%" y="165" width="0.0731%" height="15" fill="rgb(247,145,37)" fg:x="10531" fg:w="9"/><text x="85.8261%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.05%)</title><rect x="85.7143%" y="165" width="0.0488%" height="15" fill="rgb(209,117,53)" fg:x="10548" fg:w="6"/><text x="85.9643%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.02%)</title><rect x="85.7387%" y="149" width="0.0244%" height="15" fill="rgb(212,90,42)" fg:x="10551" fg:w="3"/><text x="85.9887%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.04%)</title><rect x="85.7630%" y="165" width="0.0406%" height="15" fill="rgb(218,164,37)" fg:x="10554" fg:w="5"/><text x="86.0130%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.03%)</title><rect x="85.7712%" y="149" width="0.0325%" height="15" fill="rgb(246,65,34)" fg:x="10555" fg:w="4"/><text x="86.0212%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.02%)</title><rect x="85.7874%" y="133" width="0.0163%" height="15" fill="rgb(231,100,33)" fg:x="10557" fg:w="2"/><text x="86.0374%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (11 samples, 0.09%)</title><rect x="85.8037%" y="165" width="0.0894%" height="15" fill="rgb(228,126,14)" fg:x="10559" fg:w="11"/><text x="86.0537%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (11 samples, 0.09%)</title><rect x="85.8037%" y="149" width="0.0894%" height="15" fill="rgb(215,173,21)" fg:x="10559" fg:w="11"/><text x="86.0537%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.08%)</title><rect x="85.8118%" y="133" width="0.0813%" height="15" fill="rgb(210,6,40)" fg:x="10560" fg:w="10"/><text x="86.0618%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.08%)</title><rect x="85.8118%" y="117" width="0.0813%" height="15" fill="rgb(212,48,18)" fg:x="10560" fg:w="10"/><text x="86.0618%" y="127.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::elem_exp_vartime_ (32 samples, 0.26%)</title><rect x="85.6493%" y="181" width="0.2600%" height="15" fill="rgb(230,214,11)" fg:x="10540" fg:w="32"/><text x="85.8993%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="85.8931%" y="165" width="0.0163%" height="15" fill="rgb(254,105,39)" fg:x="10570" fg:w="2"/><text x="86.1431%" y="175.50"></text></g><g><title>jwtd`LIMBS_reduce_once (13 samples, 0.11%)</title><rect x="85.9093%" y="165" width="0.1056%" height="15" fill="rgb(245,158,5)" fg:x="10572" fg:w="13"/><text x="86.1593%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (14 samples, 0.11%)</title><rect x="86.0150%" y="149" width="0.1138%" height="15" fill="rgb(249,208,11)" fg:x="10585" fg:w="14"/><text x="86.2650%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.11%)</title><rect x="86.0231%" y="133" width="0.1056%" height="15" fill="rgb(210,39,28)" fg:x="10586" fg:w="13"/><text x="86.2731%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.11%)</title><rect x="86.0231%" y="117" width="0.1056%" height="15" fill="rgb(211,56,53)" fg:x="10586" fg:w="13"/><text x="86.2731%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.05%)</title><rect x="86.0800%" y="101" width="0.0488%" height="15" fill="rgb(226,201,30)" fg:x="10593" fg:w="6"/><text x="86.3300%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (15 samples, 0.12%)</title><rect x="86.0150%" y="165" width="0.1219%" height="15" fill="rgb(239,101,34)" fg:x="10585" fg:w="15"/><text x="86.2650%" y="175.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::elem_reduced_once (29 samples, 0.24%)</title><rect x="85.9093%" y="181" width="0.2357%" height="15" fill="rgb(226,209,5)" fg:x="10572" fg:w="29"/><text x="86.1593%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.10%)</title><rect x="86.3075%" y="101" width="0.0975%" height="15" fill="rgb(250,105,47)" fg:x="10621" fg:w="12"/><text x="86.5575%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (25 samples, 0.20%)</title><rect x="86.2100%" y="117" width="0.2032%" height="15" fill="rgb(230,72,3)" fg:x="10609" fg:w="25"/><text x="86.4600%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (29 samples, 0.24%)</title><rect x="86.1856%" y="149" width="0.2357%" height="15" fill="rgb(232,218,39)" fg:x="10606" fg:w="29"/><text x="86.4356%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.23%)</title><rect x="86.1937%" y="133" width="0.2275%" height="15" fill="rgb(248,166,6)" fg:x="10607" fg:w="28"/><text x="86.4437%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`calloc (30 samples, 0.24%)</title><rect x="86.1856%" y="165" width="0.2438%" height="15" fill="rgb(247,89,20)" fg:x="10606" fg:w="30"/><text x="86.4356%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.09%)</title><rect x="86.4294%" y="165" width="0.0894%" height="15" fill="rgb(248,130,54)" fg:x="10636" fg:w="11"/><text x="86.6794%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.07%)</title><rect x="86.4538%" y="149" width="0.0650%" height="15" fill="rgb(234,196,4)" fg:x="10639" fg:w="8"/><text x="86.7038%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.17%)</title><rect x="86.5188%" y="165" width="0.1706%" height="15" fill="rgb(250,143,31)" fg:x="10647" fg:w="21"/><text x="86.7688%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.09%)</title><rect x="86.6000%" y="149" width="0.0894%" height="15" fill="rgb(211,110,34)" fg:x="10657" fg:w="11"/><text x="86.8500%" y="159.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::elem_widen (69 samples, 0.56%)</title><rect x="86.1450%" y="181" width="0.5607%" height="15" fill="rgb(215,124,48)" fg:x="10601" fg:w="69"/><text x="86.3950%" y="191.50"></text></g><g><title>jwtd`ring::digest::sha256_format_output (2 samples, 0.02%)</title><rect x="86.7219%" y="165" width="0.0163%" height="15" fill="rgb(216,46,13)" fg:x="10672" fg:w="2"/><text x="86.9719%" y="175.50"></text></g><g><title>jwtd`ring::digest::BlockContext::finish (7 samples, 0.06%)</title><rect x="86.7057%" y="181" width="0.0569%" height="15" fill="rgb(205,184,25)" fg:x="10670" fg:w="7"/><text x="86.9557%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="86.7382%" y="165" width="0.0244%" height="15" fill="rgb(228,1,10)" fg:x="10674" fg:w="3"/><text x="86.9882%" y="175.50"></text></g><g><title>jwtd`ring::digest::Context::update (6 samples, 0.05%)</title><rect x="86.7626%" y="181" width="0.0488%" height="15" fill="rgb(213,116,27)" fg:x="10677" fg:w="6"/><text x="87.0126%" y="191.50"></text></g><g><title>jwtd`ring::limb::big_endian_from_limbs (13 samples, 0.11%)</title><rect x="86.8113%" y="181" width="0.1056%" height="15" fill="rgb(241,95,50)" fg:x="10683" fg:w="13"/><text x="87.0613%" y="191.50"></text></g><g><title>jwtd`ring::limb::fold_5_bit_windows (2 samples, 0.02%)</title><rect x="86.9170%" y="181" width="0.0163%" height="15" fill="rgb(238,48,32)" fg:x="10696" fg:w="2"/><text x="87.1670%" y="191.50"></text></g><g><title>jwtd`spin::once::Once&lt;T&gt;::call_once (3 samples, 0.02%)</title><rect x="86.9413%" y="181" width="0.0244%" height="15" fill="rgb(235,113,49)" fg:x="10699" fg:w="3"/><text x="87.1913%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_calloc (3 samples, 0.02%)</title><rect x="86.9901%" y="149" width="0.0244%" height="15" fill="rgb(205,127,43)" fg:x="10705" fg:w="3"/><text x="87.2401%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.07%)</title><rect x="87.0226%" y="133" width="0.0731%" height="15" fill="rgb(250,162,2)" fg:x="10709" fg:w="9"/><text x="87.2726%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`calloc (16 samples, 0.13%)</title><rect x="86.9738%" y="181" width="0.1300%" height="15" fill="rgb(220,13,41)" fg:x="10703" fg:w="16"/><text x="87.2238%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (15 samples, 0.12%)</title><rect x="86.9820%" y="165" width="0.1219%" height="15" fill="rgb(249,221,25)" fg:x="10704" fg:w="15"/><text x="87.2320%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.09%)</title><rect x="87.0145%" y="149" width="0.0894%" height="15" fill="rgb(215,208,19)" fg:x="10708" fg:w="11"/><text x="87.2645%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.18%)</title><rect x="87.1120%" y="181" width="0.1788%" height="15" fill="rgb(236,175,2)" fg:x="10720" fg:w="22"/><text x="87.3620%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (11 samples, 0.09%)</title><rect x="87.2014%" y="165" width="0.0894%" height="15" fill="rgb(241,52,2)" fg:x="10731" fg:w="11"/><text x="87.4514%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.02%)</title><rect x="87.3801%" y="165" width="0.0244%" height="15" fill="rgb(248,140,14)" fg:x="10753" fg:w="3"/><text x="87.6301%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.02%)</title><rect x="87.4045%" y="165" width="0.0244%" height="15" fill="rgb(253,22,42)" fg:x="10756" fg:w="3"/><text x="87.6545%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (40 samples, 0.33%)</title><rect x="87.2908%" y="181" width="0.3250%" height="15" fill="rgb(234,61,47)" fg:x="10742" fg:w="40"/><text x="87.5408%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (23 samples, 0.19%)</title><rect x="87.4289%" y="165" width="0.1869%" height="15" fill="rgb(208,226,15)" fg:x="10759" fg:w="23"/><text x="87.6789%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (9 samples, 0.07%)</title><rect x="87.5427%" y="149" width="0.0731%" height="15" fill="rgb(217,221,4)" fg:x="10773" fg:w="9"/><text x="87.7927%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (9 samples, 0.07%)</title><rect x="87.6158%" y="181" width="0.0731%" height="15" fill="rgb(212,174,34)" fg:x="10782" fg:w="9"/><text x="87.8658%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (7 samples, 0.06%)</title><rect x="87.6320%" y="165" width="0.0569%" height="15" fill="rgb(253,83,4)" fg:x="10784" fg:w="7"/><text x="87.8820%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.05%)</title><rect x="87.6402%" y="149" width="0.0488%" height="15" fill="rgb(250,195,49)" fg:x="10785" fg:w="6"/><text x="87.8902%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.03%)</title><rect x="87.6564%" y="133" width="0.0325%" height="15" fill="rgb(241,192,25)" fg:x="10787" fg:w="4"/><text x="87.9064%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (6 samples, 0.05%)</title><rect x="87.7133%" y="181" width="0.0488%" height="15" fill="rgb(208,124,10)" fg:x="10794" fg:w="6"/><text x="87.9633%" y="191.50"></text></g><g><title>jwtd`ring::rsa::signing::RsaKeyPair::sign (1,412 samples, 11.47%)</title><rect x="76.4505%" y="197" width="11.4741%" height="15" fill="rgb(222,33,0)" fg:x="9408" fg:w="1412"/><text x="76.7005%" y="207.50">jwtd`ring::rsa::s..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.16%)</title><rect x="87.7621%" y="181" width="0.1625%" height="15" fill="rgb(234,209,28)" fg:x="10800" fg:w="20"/><text x="88.0121%" y="191.50"></text></g><g><title>jwtd`untrusted::Input::from (5 samples, 0.04%)</title><rect x="87.9246%" y="197" width="0.0406%" height="15" fill="rgb(224,11,23)" fg:x="10820" fg:w="5"/><text x="88.1746%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.03%)</title><rect x="87.9896%" y="149" width="0.0325%" height="15" fill="rgb(232,99,1)" fg:x="10828" fg:w="4"/><text x="88.2396%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`calloc (7 samples, 0.06%)</title><rect x="87.9733%" y="197" width="0.0569%" height="15" fill="rgb(237,95,45)" fg:x="10826" fg:w="7"/><text x="88.2233%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (6 samples, 0.05%)</title><rect x="87.9815%" y="181" width="0.0488%" height="15" fill="rgb(208,109,11)" fg:x="10827" fg:w="6"/><text x="88.2315%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.04%)</title><rect x="87.9896%" y="165" width="0.0406%" height="15" fill="rgb(216,190,48)" fg:x="10828" fg:w="5"/><text x="88.2396%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.02%)</title><rect x="88.0302%" y="197" width="0.0244%" height="15" fill="rgb(251,171,36)" fg:x="10833" fg:w="3"/><text x="88.2802%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.07%)</title><rect x="88.0546%" y="197" width="0.0650%" height="15" fill="rgb(230,62,22)" fg:x="10836" fg:w="8"/><text x="88.3046%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.02%)</title><rect x="88.0952%" y="181" width="0.0244%" height="15" fill="rgb(225,114,35)" fg:x="10841" fg:w="3"/><text x="88.3452%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.04%)</title><rect x="88.1521%" y="181" width="0.0406%" height="15" fill="rgb(215,118,42)" fg:x="10848" fg:w="5"/><text x="88.4021%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.12%)</title><rect x="88.1196%" y="197" width="0.1219%" height="15" fill="rgb(243,119,21)" fg:x="10844" fg:w="15"/><text x="88.3696%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.05%)</title><rect x="88.1928%" y="181" width="0.0488%" height="15" fill="rgb(252,177,53)" fg:x="10853" fg:w="6"/><text x="88.4428%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.02%)</title><rect x="88.2253%" y="165" width="0.0163%" height="15" fill="rgb(237,209,29)" fg:x="10857" fg:w="2"/><text x="88.4753%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.02%)</title><rect x="88.2415%" y="197" width="0.0163%" height="15" fill="rgb(212,65,23)" fg:x="10859" fg:w="2"/><text x="88.4915%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (2 samples, 0.02%)</title><rect x="88.2578%" y="197" width="0.0163%" height="15" fill="rgb(230,222,46)" fg:x="10861" fg:w="2"/><text x="88.5078%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="88.2740%" y="197" width="0.0163%" height="15" fill="rgb(215,135,32)" fg:x="10863" fg:w="2"/><text x="88.5240%" y="207.50"></text></g><g><title>jwtd`jsonwebtoken::crypto::rsa::sign (2,612 samples, 21.23%)</title><rect x="67.0892%" y="213" width="21.2254%" height="15" fill="rgb(246,101,22)" fg:x="8256" fg:w="2612"/><text x="67.3392%" y="223.50">jwtd`jsonwebtoken::crypto::rsa::s..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="88.2903%" y="197" width="0.0244%" height="15" fill="rgb(206,107,13)" fg:x="10865" fg:w="3"/><text x="88.5403%" y="207.50"></text></g><g><title>jwtd`jsonwebtoken::crypto::sign (2,632 samples, 21.39%)</title><rect x="66.9348%" y="229" width="21.3879%" height="15" fill="rgb(250,100,44)" fg:x="8237" fg:w="2632"/><text x="67.1848%" y="239.50">jwtd`jsonwebtoken::crypto::sign</text></g><g><title>jwtd`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (3 samples, 0.02%)</title><rect x="88.4365%" y="213" width="0.0244%" height="15" fill="rgb(231,147,38)" fg:x="10883" fg:w="3"/><text x="88.6865%" y="223.50"></text></g><g><title>jwtd`serde_json::ser::format_escaped_str (21 samples, 0.17%)</title><rect x="88.5340%" y="197" width="0.1706%" height="15" fill="rgb(229,8,40)" fg:x="10895" fg:w="21"/><text x="88.7840%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="88.6884%" y="181" width="0.0163%" height="15" fill="rgb(221,135,30)" fg:x="10914" fg:w="2"/><text x="88.9384%" y="191.50"></text></g><g><title>jwtd`jsonwebtoken::header::_::_&lt;impl serde::ser::Serialize for jsonwebtoken::header::Header&gt;::serialize (31 samples, 0.25%)</title><rect x="88.4690%" y="213" width="0.2519%" height="15" fill="rgb(249,193,18)" fg:x="10887" fg:w="31"/><text x="88.7190%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="88.7047%" y="197" width="0.0163%" height="15" fill="rgb(209,133,39)" fg:x="10916" fg:w="2"/><text x="88.9547%" y="207.50"></text></g><g><title>jwtd`__rdl_alloc_zeroed (4 samples, 0.03%)</title><rect x="88.7209%" y="197" width="0.0325%" height="15" fill="rgb(232,100,14)" fg:x="10918" fg:w="4"/><text x="88.9709%" y="207.50"></text></g><g><title>jwtd`base64::encode::encode_with_padding (26 samples, 0.21%)</title><rect x="88.7860%" y="181" width="0.2113%" height="15" fill="rgb(224,185,1)" fg:x="10926" fg:w="26"/><text x="89.0360%" y="191.50"></text></g><g><title>jwtd`core::str::converts::from_utf8 (4 samples, 0.03%)</title><rect x="88.9972%" y="181" width="0.0325%" height="15" fill="rgb(223,139,8)" fg:x="10952" fg:w="4"/><text x="89.2472%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_calloc (4 samples, 0.03%)</title><rect x="89.0379%" y="165" width="0.0325%" height="15" fill="rgb(232,213,38)" fg:x="10957" fg:w="4"/><text x="89.2879%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="89.2085%" y="117" width="0.0163%" height="15" fill="rgb(207,94,22)" fg:x="10978" fg:w="2"/><text x="89.4585%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="89.2248%" y="117" width="0.0244%" height="15" fill="rgb(219,183,54)" fg:x="10980" fg:w="3"/><text x="89.4748%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="89.2491%" y="117" width="0.0163%" height="15" fill="rgb(216,185,54)" fg:x="10983" fg:w="2"/><text x="89.4991%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.16%)</title><rect x="89.1273%" y="133" width="0.1625%" height="15" fill="rgb(254,217,39)" fg:x="10968" fg:w="20"/><text x="89.3773%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="89.2654%" y="117" width="0.0244%" height="15" fill="rgb(240,178,23)" fg:x="10985" fg:w="3"/><text x="89.5154%" y="127.50"></text></g><g><title>jwtd`base64::encode::encode_config (67 samples, 0.54%)</title><rect x="88.7535%" y="197" width="0.5444%" height="15" fill="rgb(218,11,47)" fg:x="10922" fg:w="67"/><text x="89.0035%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`calloc (33 samples, 0.27%)</title><rect x="89.0297%" y="181" width="0.2682%" height="15" fill="rgb(218,51,51)" fg:x="10956" fg:w="33"/><text x="89.2797%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (28 samples, 0.23%)</title><rect x="89.0704%" y="165" width="0.2275%" height="15" fill="rgb(238,126,27)" fg:x="10961" fg:w="28"/><text x="89.3204%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.20%)</title><rect x="89.1029%" y="149" width="0.1950%" height="15" fill="rgb(249,202,22)" fg:x="10965" fg:w="24"/><text x="89.3529%" y="159.50"></text></g><g><title>jwtd`base64::encode::encoded_size (3 samples, 0.02%)</title><rect x="89.2979%" y="197" width="0.0244%" height="15" fill="rgb(254,195,49)" fg:x="10989" fg:w="3"/><text x="89.5479%" y="207.50"></text></g><g><title>jwtd`jsonwebtoken::serialization::b64_encode (80 samples, 0.65%)</title><rect x="88.7209%" y="213" width="0.6501%" height="15" fill="rgb(208,123,14)" fg:x="10918" fg:w="80"/><text x="88.9709%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`calloc (6 samples, 0.05%)</title><rect x="89.3223%" y="197" width="0.0488%" height="15" fill="rgb(224,200,8)" fg:x="10992" fg:w="6"/><text x="89.5723%" y="207.50"></text></g><g><title>jwtd`serde_json::ser::format_escaped_str (8 samples, 0.07%)</title><rect x="89.3954%" y="197" width="0.0650%" height="15" fill="rgb(217,61,36)" fg:x="11001" fg:w="8"/><text x="89.6454%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="89.4442%" y="181" width="0.0163%" height="15" fill="rgb(206,35,45)" fg:x="11007" fg:w="2"/><text x="89.6942%" y="191.50"></text></g><g><title>jwtd`serde::ser::Serializer::collect_seq (8 samples, 0.07%)</title><rect x="89.4929%" y="181" width="0.0650%" height="15" fill="rgb(217,65,33)" fg:x="11013" fg:w="8"/><text x="89.7429%" y="191.50"></text></g><g><title>jwtd`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.04%)</title><rect x="89.5173%" y="165" width="0.0406%" height="15" fill="rgb(222,158,48)" fg:x="11016" fg:w="5"/><text x="89.7673%" y="175.50"></text></g><g><title>jwtd`serde_json::ser::format_escaped_str (4 samples, 0.03%)</title><rect x="89.5254%" y="149" width="0.0325%" height="15" fill="rgb(254,2,54)" fg:x="11017" fg:w="4"/><text x="89.7754%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (3 samples, 0.02%)</title><rect x="89.5336%" y="133" width="0.0244%" height="15" fill="rgb(250,143,38)" fg:x="11018" fg:w="3"/><text x="89.7836%" y="143.50"></text></g><g><title>jwtd`serde_json::ser::format_escaped_str (2 samples, 0.02%)</title><rect x="89.5579%" y="181" width="0.0163%" height="15" fill="rgb(248,25,0)" fg:x="11021" fg:w="2"/><text x="89.8079%" y="191.50"></text></g><g><title>jwtd`serde_json::value::ser::_&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 0.12%)</title><rect x="89.4604%" y="197" width="0.1219%" height="15" fill="rgb(206,152,27)" fg:x="11009" fg:w="15"/><text x="89.7104%" y="207.50"></text></g><g><title>jwtd`serde::ser::SerializeMap::serialize_entry (27 samples, 0.22%)</title><rect x="89.3710%" y="213" width="0.2194%" height="15" fill="rgb(240,77,30)" fg:x="10998" fg:w="27"/><text x="89.6210%" y="223.50"></text></g><g><title>jwtd`serde_json::ser::format_escaped_str (2 samples, 0.02%)</title><rect x="89.5904%" y="213" width="0.0163%" height="15" fill="rgb(231,5,3)" fg:x="11025" fg:w="2"/><text x="89.8404%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.02%)</title><rect x="89.6067%" y="213" width="0.0244%" height="15" fill="rgb(207,226,32)" fg:x="11027" fg:w="3"/><text x="89.8567%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.09%)</title><rect x="89.6311%" y="213" width="0.0894%" height="15" fill="rgb(222,207,47)" fg:x="11030" fg:w="11"/><text x="89.8811%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.06%)</title><rect x="89.6636%" y="197" width="0.0569%" height="15" fill="rgb(229,115,45)" fg:x="11034" fg:w="7"/><text x="89.9136%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="89.7855%" y="197" width="0.0163%" height="15" fill="rgb(224,191,6)" fg:x="11049" fg:w="2"/><text x="90.0355%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.12%)</title><rect x="89.7205%" y="213" width="0.1219%" height="15" fill="rgb(230,227,24)" fg:x="11041" fg:w="15"/><text x="89.9705%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.04%)</title><rect x="89.8017%" y="197" width="0.0406%" height="15" fill="rgb(228,80,19)" fg:x="11051" fg:w="5"/><text x="90.0517%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (11 samples, 0.09%)</title><rect x="89.8505%" y="197" width="0.0894%" height="15" fill="rgb(247,229,0)" fg:x="11057" fg:w="11"/><text x="90.1005%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.07%)</title><rect x="89.8667%" y="181" width="0.0731%" height="15" fill="rgb(237,194,15)" fg:x="11059" fg:w="9"/><text x="90.1167%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.07%)</title><rect x="89.8667%" y="165" width="0.0731%" height="15" fill="rgb(219,203,20)" fg:x="11059" fg:w="9"/><text x="90.1167%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="89.9155%" y="149" width="0.0244%" height="15" fill="rgb(234,128,8)" fg:x="11065" fg:w="3"/><text x="90.1655%" y="159.50"></text></g><g><title>jwtd`jsonwebtoken::serialization::b64_encode_part (200 samples, 1.63%)</title><rect x="88.3309%" y="229" width="1.6252%" height="15" fill="rgb(248,202,8)" fg:x="10870" fg:w="200"/><text x="88.5809%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (14 samples, 0.11%)</title><rect x="89.8424%" y="213" width="0.1138%" height="15" fill="rgb(206,104,37)" fg:x="11056" fg:w="14"/><text x="90.0924%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="89.9399%" y="197" width="0.0163%" height="15" fill="rgb(223,8,27)" fg:x="11068" fg:w="2"/><text x="90.1899%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.07%)</title><rect x="89.9642%" y="229" width="0.0650%" height="15" fill="rgb(216,217,28)" fg:x="11071" fg:w="8"/><text x="90.2142%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.04%)</title><rect x="89.9886%" y="213" width="0.0406%" height="15" fill="rgb(249,199,1)" fg:x="11074" fg:w="5"/><text x="90.2386%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (30 samples, 0.24%)</title><rect x="90.0293%" y="229" width="0.2438%" height="15" fill="rgb(240,85,17)" fg:x="11079" fg:w="30"/><text x="90.2793%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (23 samples, 0.19%)</title><rect x="90.0861%" y="213" width="0.1869%" height="15" fill="rgb(206,108,45)" fg:x="11086" fg:w="23"/><text x="90.3361%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (7 samples, 0.06%)</title><rect x="90.2162%" y="197" width="0.0569%" height="15" fill="rgb(245,210,41)" fg:x="11102" fg:w="7"/><text x="90.4662%" y="207.50"></text></g><g><title>jwtd`jsonwebtoken::encoding::encode (2,955 samples, 24.01%)</title><rect x="66.2929%" y="245" width="24.0127%" height="15" fill="rgb(206,13,37)" fg:x="8158" fg:w="2955"/><text x="66.5429%" y="255.50">jwtd`jsonwebtoken::encoding::encode</text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.02%)</title><rect x="90.4924%" y="197" width="0.0163%" height="15" fill="rgb(250,61,18)" fg:x="11136" fg:w="2"/><text x="90.7424%" y="207.50"></text></g><g><title>jwtd`jsonwebtoken::header::Header::new (36 samples, 0.29%)</title><rect x="90.3055%" y="245" width="0.2925%" height="15" fill="rgb(235,172,48)" fg:x="11113" fg:w="36"/><text x="90.5555%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (15 samples, 0.12%)</title><rect x="90.4762%" y="229" width="0.1219%" height="15" fill="rgb(249,201,17)" fg:x="11134" fg:w="15"/><text x="90.7262%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (14 samples, 0.11%)</title><rect x="90.4843%" y="213" width="0.1138%" height="15" fill="rgb(219,208,6)" fg:x="11135" fg:w="14"/><text x="90.7343%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.09%)</title><rect x="90.5087%" y="197" width="0.0894%" height="15" fill="rgb(248,31,23)" fg:x="11138" fg:w="11"/><text x="90.7587%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.08%)</title><rect x="90.5168%" y="181" width="0.0813%" height="15" fill="rgb(245,15,42)" fg:x="11139" fg:w="10"/><text x="90.7668%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="90.5737%" y="165" width="0.0244%" height="15" fill="rgb(222,217,39)" fg:x="11146" fg:w="3"/><text x="90.8237%" y="175.50"></text></g><g><title>jwtd`mime::Source::as_ref (2 samples, 0.02%)</title><rect x="90.5981%" y="245" width="0.0163%" height="15" fill="rgb(210,219,27)" fg:x="11149" fg:w="2"/><text x="90.8481%" y="255.50"></text></g><g><title>jwtd`once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_init (3 samples, 0.02%)</title><rect x="90.6143%" y="245" width="0.0244%" height="15" fill="rgb(252,166,36)" fg:x="11151" fg:w="3"/><text x="90.8643%" y="255.50"></text></g><g><title>jwtd`std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.07%)</title><rect x="90.6387%" y="245" width="0.0650%" height="15" fill="rgb(245,132,34)" fg:x="11154" fg:w="8"/><text x="90.8887%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.04%)</title><rect x="90.7118%" y="245" width="0.0406%" height="15" fill="rgb(236,54,3)" fg:x="11163" fg:w="5"/><text x="90.9618%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="90.7525%" y="245" width="0.0163%" height="15" fill="rgb(241,173,43)" fg:x="11168" fg:w="2"/><text x="91.0025%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.02%)</title><rect x="90.7687%" y="245" width="0.0163%" height="15" fill="rgb(215,190,9)" fg:x="11170" fg:w="2"/><text x="91.0187%" y="255.50"></text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,751 samples, 30.48%)</title><rect x="60.3364%" y="261" width="30.4811%" height="15" fill="rgb(242,101,16)" fg:x="7425" fg:w="3751"/><text x="60.5864%" y="271.50">jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; ..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.03%)</title><rect x="90.7850%" y="245" width="0.0325%" height="15" fill="rgb(223,190,21)" fg:x="11172" fg:w="4"/><text x="91.0350%" y="255.50"></text></g><g><title>jwtd`actix_http::responses::head::BoxedResponseHead::new (5 samples, 0.04%)</title><rect x="90.8175%" y="261" width="0.0406%" height="15" fill="rgb(215,228,25)" fg:x="11176" fg:w="5"/><text x="91.0675%" y="271.50"></text></g><g><title>jwtd`actix_web::response::response::HttpResponse&lt;B&gt;::map_body (5 samples, 0.04%)</title><rect x="90.8581%" y="261" width="0.0406%" height="15" fill="rgb(225,36,22)" fg:x="11181" fg:w="5"/><text x="91.1081%" y="271.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;actix_http::payload::Payload&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;bytes::bytes::Bytes,actix_http::error::PayloadError&gt;&gt;&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="90.8987%" y="261" width="0.0244%" height="15" fill="rgb(251,106,46)" fg:x="11186" fg:w="3"/><text x="91.1487%" y="271.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;actix_web::extract::tuple_from_req::ExtractFuture&lt;actix_utils::future::ready::Ready&lt;core::result::Result&lt;actix_web::data::Data&lt;jwtd::AppState&gt;,actix_web::error::error::Error&gt;&gt;,actix_web::data::Data&lt;jwtd::AppState&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="90.9231%" y="261" width="0.0244%" height="15" fill="rgb(208,90,1)" fg:x="11189" fg:w="3"/><text x="91.1731%" y="271.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;actix_web::extract::tuple_from_req::ExtractFuture&lt;actix_utils::future::ready::Ready&lt;core::result::Result&lt;actix_web::types::query::Query&lt;jwtd::SignOpts&gt;,actix_web::error::error::Error&gt;&gt;,actix_web::types::query::Query&lt;jwtd::SignOpts&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="90.9475%" y="261" width="0.0163%" height="15" fill="rgb(243,10,4)" fg:x="11192" fg:w="2"/><text x="91.1975%" y="271.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;actix_web::extract::tuple_from_req::ExtractFuture&lt;actix_web::types::json::JsonExtractFut&lt;serde_json::value::Value&gt;,actix_web::types::json::Json&lt;serde_json::value::Value&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="90.9638%" y="261" width="0.0163%" height="15" fill="rgb(212,137,27)" fg:x="11194" fg:w="2"/><text x="91.2138%" y="271.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;actix_web::handler::handler_service&lt;&lt;jwtd::sign as actix_web::service::HttpServiceFactory&gt;::register::sign,(actix_web::data::Data&lt;jwtd::AppState&gt;,actix_web::types::json::Json&lt;serde_json::value::Value&gt;,actix_web::types::query::Query&lt;jwtd::SignOpts&gt;)&gt;::{{closure}}::{{closure}}&gt;&gt; (2 samples, 0.02%)</title><rect x="90.9800%" y="261" width="0.0163%" height="15" fill="rgb(231,220,49)" fg:x="11196" fg:w="2"/><text x="91.2300%" y="271.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;jsonwebtoken::header::Header&gt; (3 samples, 0.02%)</title><rect x="90.9963%" y="261" width="0.0244%" height="15" fill="rgb(237,96,20)" fg:x="11198" fg:w="3"/><text x="91.2463%" y="271.50"></text></g><g><title>jwtd`once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_init (2 samples, 0.02%)</title><rect x="91.0450%" y="261" width="0.0163%" height="15" fill="rgb(239,229,30)" fg:x="11204" fg:w="2"/><text x="91.2950%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.03%)</title><rect x="91.0694%" y="261" width="0.0325%" height="15" fill="rgb(219,65,33)" fg:x="11207" fg:w="4"/><text x="91.3194%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.02%)</title><rect x="91.0775%" y="245" width="0.0244%" height="15" fill="rgb(243,134,7)" fg:x="11208" fg:w="3"/><text x="91.3275%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.02%)</title><rect x="91.1019%" y="261" width="0.0244%" height="15" fill="rgb(216,177,54)" fg:x="11211" fg:w="3"/><text x="91.3519%" y="271.50"></text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,812 samples, 30.98%)</title><rect x="60.1658%" y="277" width="30.9768%" height="15" fill="rgb(211,160,20)" fg:x="7404" fg:w="3812"/><text x="60.4158%" y="287.50">jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; a..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="91.1263%" y="261" width="0.0163%" height="15" fill="rgb(239,85,39)" fg:x="11214" fg:w="2"/><text x="91.3763%" y="271.50"></text></g><g><title>jwtd`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (2 samples, 0.02%)</title><rect x="91.2888%" y="213" width="0.0163%" height="15" fill="rgb(232,125,22)" fg:x="11234" fg:w="2"/><text x="91.5388%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="91.2888%" y="197" width="0.0163%" height="15" fill="rgb(244,57,34)" fg:x="11234" fg:w="2"/><text x="91.5388%" y="207.50"></text></g><g><title>jwtd`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (7 samples, 0.06%)</title><rect x="91.3132%" y="197" width="0.0569%" height="15" fill="rgb(214,203,32)" fg:x="11237" fg:w="7"/><text x="91.5632%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.05%)</title><rect x="91.3213%" y="181" width="0.0488%" height="15" fill="rgb(207,58,43)" fg:x="11238" fg:w="6"/><text x="91.5713%" y="191.50"></text></g><g><title>jwtd`actix_http::helpers::write_status_line (9 samples, 0.07%)</title><rect x="91.3051%" y="213" width="0.0731%" height="15" fill="rgb(215,193,15)" fg:x="11236" fg:w="9"/><text x="91.5551%" y="223.50"></text></g><g><title>jwtd`&lt;actix_http::responses::response::Response&lt;()&gt; as actix_http::h1::encoder::MessageType&gt;::encode_status (18 samples, 0.15%)</title><rect x="91.2400%" y="229" width="0.1463%" height="15" fill="rgb(232,15,44)" fg:x="11228" fg:w="18"/><text x="91.4900%" y="239.50"></text></g><g><title>jwtd`&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (3 samples, 0.02%)</title><rect x="91.5651%" y="197" width="0.0244%" height="15" fill="rgb(212,3,48)" fg:x="11268" fg:w="3"/><text x="91.8151%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="91.5732%" y="181" width="0.0163%" height="15" fill="rgb(218,128,7)" fg:x="11269" fg:w="2"/><text x="91.8232%" y="191.50"></text></g><g><title>jwtd`actix_http::helpers::write_content_length (8 samples, 0.07%)</title><rect x="91.5407%" y="213" width="0.0650%" height="15" fill="rgb(226,216,39)" fg:x="11265" fg:w="8"/><text x="91.7907%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="91.5895%" y="197" width="0.0163%" height="15" fill="rgb(243,47,51)" fg:x="11271" fg:w="2"/><text x="91.8395%" y="207.50"></text></g><g><title>jwtd`actix_http::h1::encoder::MessageType::encode_headers (32 samples, 0.26%)</title><rect x="91.3944%" y="229" width="0.2600%" height="15" fill="rgb(241,183,40)" fg:x="11247" fg:w="32"/><text x="91.6444%" y="239.50"></text></g><g><title>jwtd`bytes::bytes_mut::BytesMut::extend_from_slice (6 samples, 0.05%)</title><rect x="91.6057%" y="213" width="0.0488%" height="15" fill="rgb(231,217,32)" fg:x="11273" fg:w="6"/><text x="91.8557%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (4 samples, 0.03%)</title><rect x="91.6220%" y="197" width="0.0325%" height="15" fill="rgb(229,61,38)" fg:x="11275" fg:w="4"/><text x="91.8720%" y="207.50"></text></g><g><title>jwtd`actix_http::helpers::write_status_line (3 samples, 0.02%)</title><rect x="91.6545%" y="229" width="0.0244%" height="15" fill="rgb(225,210,5)" fg:x="11279" fg:w="3"/><text x="91.9045%" y="239.50"></text></g><g><title>jwtd`http::status::StatusCode::canonical_reason (3 samples, 0.02%)</title><rect x="91.6870%" y="229" width="0.0244%" height="15" fill="rgb(231,79,45)" fg:x="11283" fg:w="3"/><text x="91.9370%" y="239.50"></text></g><g><title>jwtd`&lt;actix_http::h1::codec::Codec as tokio_util::codec::encoder::Encoder&lt;actix_http::h1::Message&lt;(actix_http::responses::response::Response&lt;()&gt;,actix_http::body::size::BodySize)&gt;&gt;&gt;::encode (66 samples, 0.54%)</title><rect x="91.1832%" y="245" width="0.5363%" height="15" fill="rgb(224,100,7)" fg:x="11221" fg:w="66"/><text x="91.4332%" y="255.50"></text></g><g><title>jwtd`actix_http::h1::encoder::MessageType::encode_headers (3 samples, 0.02%)</title><rect x="91.7276%" y="245" width="0.0244%" height="15" fill="rgb(241,198,18)" fg:x="11288" fg:w="3"/><text x="91.9776%" y="255.50"></text></g><g><title>jwtd`actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::send_response_inner (74 samples, 0.60%)</title><rect x="91.1588%" y="261" width="0.6013%" height="15" fill="rgb(252,97,53)" fg:x="11218" fg:w="74"/><text x="91.4088%" y="271.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;actix_http::h1::dispatcher::State&lt;actix_service::map_err::MapErr&lt;actix_web::app_service::AppInitService&lt;actix_web::app_service::AppRouting,actix_http::body::boxed::BoxBody&gt;,actix_http::requests::request::Request&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;bytes::bytes::Bytes,actix_http::error::PayloadError&gt;&gt;&gt;&gt;,actix_web::server::HttpServer&lt;jwtd::main::{{closure}}::{{closure}},actix_web::app::App&lt;actix_web::app_service::AppEntry&gt;,actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::boxed::BoxBody&gt;,actix_http::body::boxed::BoxBody&gt;::listen::{{closure}}::{{closure}},actix_web::response::response::HttpResponse&gt;,actix_http::body::boxed::BoxBody,actix_http::h1::expect::ExpectHandler&gt;&gt; (6 samples, 0.05%)</title><rect x="91.7601%" y="261" width="0.0488%" height="15" fill="rgb(220,88,7)" fg:x="11292" fg:w="6"/><text x="92.0101%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="91.8170%" y="261" width="0.0244%" height="15" fill="rgb(213,176,14)" fg:x="11299" fg:w="3"/><text x="92.0670%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.07%)</title><rect x="91.8414%" y="261" width="0.0650%" height="15" fill="rgb(246,73,7)" fg:x="11302" fg:w="8"/><text x="92.0914%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.05%)</title><rect x="91.8576%" y="245" width="0.0488%" height="15" fill="rgb(245,64,36)" fg:x="11304" fg:w="6"/><text x="92.1076%" y="255.50"></text></g><g><title>jwtd`actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::send_response (95 samples, 0.77%)</title><rect x="91.1425%" y="277" width="0.7720%" height="15" fill="rgb(245,80,10)" fg:x="11216" fg:w="95"/><text x="91.3925%" y="287.50"></text></g><g><title>jwtd`actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::send_response_inner (2 samples, 0.02%)</title><rect x="91.9145%" y="277" width="0.0163%" height="15" fill="rgb(232,107,50)" fg:x="11311" fg:w="2"/><text x="92.1645%" y="287.50"></text></g><g><title>jwtd`&lt;actix_web::request::HttpRequest as core::ops::drop::Drop&gt;::drop (8 samples, 0.07%)</title><rect x="91.9551%" y="261" width="0.0650%" height="15" fill="rgb(253,3,0)" fg:x="11316" fg:w="8"/><text x="92.2051%" y="271.50"></text></g><g><title>jwtd`actix_web::service::_&lt;impl core::convert::From&lt;actix_web::service::ServiceResponse&lt;B&gt;&gt; for actix_http::responses::response::Response&lt;B&gt;&gt;::from (13 samples, 0.11%)</title><rect x="91.9308%" y="277" width="0.1056%" height="15" fill="rgb(212,99,53)" fg:x="11313" fg:w="13"/><text x="92.1808%" y="287.50"></text></g><g><title>jwtd`hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (2 samples, 0.02%)</title><rect x="92.0202%" y="261" width="0.0163%" height="15" fill="rgb(249,111,54)" fg:x="11324" fg:w="2"/><text x="92.2702%" y="271.50"></text></g><g><title>jwtd`bytes::bytes::promotable_even_drop (2 samples, 0.02%)</title><rect x="92.0364%" y="277" width="0.0163%" height="15" fill="rgb(249,55,30)" fg:x="11326" fg:w="2"/><text x="92.2864%" y="287.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;actix_http::h1::dispatcher::State&lt;actix_service::map_err::MapErr&lt;actix_web::app_service::AppInitService&lt;actix_web::app_service::AppRouting,actix_http::body::boxed::BoxBody&gt;,actix_http::requests::request::Request&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;bytes::bytes::Bytes,actix_http::error::PayloadError&gt;&gt;&gt;&gt;,actix_web::server::HttpServer&lt;jwtd::main::{{closure}}::{{closure}},actix_web::app::App&lt;actix_web::app_service::AppEntry&gt;,actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::boxed::BoxBody&gt;,actix_http::body::boxed::BoxBody&gt;::listen::{{closure}}::{{closure}},actix_web::response::response::HttpResponse&gt;,actix_http::body::boxed::BoxBody,actix_http::h1::expect::ExpectHandler&gt;&gt; (2 samples, 0.02%)</title><rect x="92.0527%" y="277" width="0.0163%" height="15" fill="rgb(237,47,42)" fg:x="11328" fg:w="2"/><text x="92.3027%" y="287.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;actix_web::handler::handler_service&lt;&lt;jwtd::sign as actix_web::service::HttpServiceFactory&gt;::register::sign,(actix_web::data::Data&lt;jwtd::AppState&gt;,actix_web::types::json::Json&lt;serde_json::value::Value&gt;,actix_web::types::query::Query&lt;jwtd::SignOpts&gt;)&gt;::{{closure}}::{{closure}}&gt;&gt; (3 samples, 0.02%)</title><rect x="92.0689%" y="277" width="0.0244%" height="15" fill="rgb(211,20,18)" fg:x="11330" fg:w="3"/><text x="92.3189%" y="287.50"></text></g><g><title>jwtd`core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (2 samples, 0.02%)</title><rect x="92.0933%" y="277" width="0.0163%" height="15" fill="rgb(231,203,46)" fg:x="11333" fg:w="2"/><text x="92.3433%" y="287.50"></text></g><g><title>jwtd`actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_response (3,996 samples, 32.47%)</title><rect x="59.6538%" y="293" width="32.4720%" height="15" fill="rgb(237,142,3)" fg:x="7341" fg:w="3996"/><text x="59.9038%" y="303.50">jwtd`actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,..</text></g><g><title>jwtd`tokio::runtime::task::waker::drop_waker (2 samples, 0.02%)</title><rect x="92.3208%" y="245" width="0.0163%" height="15" fill="rgb(241,107,1)" fg:x="11361" fg:w="2"/><text x="92.5708%" y="255.50"></text></g><g><title>jwtd`tokio::runtime::task::state::State::ref_inc (2 samples, 0.02%)</title><rect x="92.4021%" y="229" width="0.0163%" height="15" fill="rgb(229,83,13)" fg:x="11371" fg:w="2"/><text x="92.6521%" y="239.50"></text></g><g><title>jwtd`tokio::time::driver::entry::TimerEntry::poll_elapsed (29 samples, 0.24%)</title><rect x="92.2152%" y="261" width="0.2357%" height="15" fill="rgb(241,91,40)" fg:x="11348" fg:w="29"/><text x="92.4652%" y="271.50"></text></g><g><title>jwtd`tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (14 samples, 0.11%)</title><rect x="92.3371%" y="245" width="0.1138%" height="15" fill="rgb(225,3,45)" fg:x="11363" fg:w="14"/><text x="92.5871%" y="255.50"></text></g><g><title>jwtd`tokio::runtime::task::waker::clone_waker (4 samples, 0.03%)</title><rect x="92.4183%" y="229" width="0.0325%" height="15" fill="rgb(244,223,14)" fg:x="11373" fg:w="4"/><text x="92.6683%" y="239.50"></text></g><g><title>jwtd`tokio::runtime::task::state::State::ref_inc (4 samples, 0.03%)</title><rect x="92.4183%" y="213" width="0.0325%" height="15" fill="rgb(224,124,37)" fg:x="11373" fg:w="4"/><text x="92.6683%" y="223.50"></text></g><g><title>jwtd`&lt;tokio::time::driver::sleep::Sleep as core::future::future::Future&gt;::poll (34 samples, 0.28%)</title><rect x="92.1827%" y="277" width="0.2763%" height="15" fill="rgb(251,171,30)" fg:x="11344" fg:w="34"/><text x="92.4327%" y="287.50"></text></g><g><title>jwtd`actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_timers (42 samples, 0.34%)</title><rect x="92.1258%" y="293" width="0.3413%" height="15" fill="rgb(236,46,54)" fg:x="11337" fg:w="42"/><text x="92.3758%" y="303.50"></text></g><g><title>jwtd`actix_http::h1::dispatcher::trace_timer_states (29 samples, 0.24%)</title><rect x="92.4671%" y="293" width="0.2357%" height="15" fill="rgb(245,213,5)" fg:x="11379" fg:w="29"/><text x="92.7171%" y="303.50"></text></g><g><title>jwtd`actix_http::h1::payload::Payload::create (3 samples, 0.02%)</title><rect x="92.7027%" y="293" width="0.0244%" height="15" fill="rgb(230,144,27)" fg:x="11408" fg:w="3"/><text x="92.9527%" y="303.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;tokio::time::driver::sleep::Sleep&gt;&gt;&gt; (8 samples, 0.07%)</title><rect x="92.7759%" y="277" width="0.0650%" height="15" fill="rgb(220,86,6)" fg:x="11417" fg:w="8"/><text x="93.0259%" y="287.50"></text></g><g><title>jwtd`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::clear_entry (8 samples, 0.07%)</title><rect x="92.7759%" y="261" width="0.0650%" height="15" fill="rgb(240,20,13)" fg:x="11417" fg:w="8"/><text x="93.0259%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.02%)</title><rect x="92.8571%" y="277" width="0.0163%" height="15" fill="rgb(217,89,34)" fg:x="11427" fg:w="2"/><text x="93.1071%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.17%)</title><rect x="92.8734%" y="277" width="0.1706%" height="15" fill="rgb(229,13,5)" fg:x="11429" fg:w="21"/><text x="93.1234%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.15%)</title><rect x="92.8978%" y="261" width="0.1463%" height="15" fill="rgb(244,67,35)" fg:x="11432" fg:w="18"/><text x="93.1478%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (7 samples, 0.06%)</title><rect x="92.9872%" y="245" width="0.0569%" height="15" fill="rgb(221,40,2)" fg:x="11443" fg:w="7"/><text x="93.2372%" y="255.50"></text></g><g><title>jwtd`actix_http::h1::timer::TimerState::clear (41 samples, 0.33%)</title><rect x="92.7271%" y="293" width="0.3332%" height="15" fill="rgb(237,157,21)" fg:x="11411" fg:w="41"/><text x="92.9771%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.02%)</title><rect x="93.0440%" y="277" width="0.0163%" height="15" fill="rgb(222,94,11)" fg:x="11450" fg:w="2"/><text x="93.2940%" y="287.50"></text></g><g><title>jwtd`&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (5 samples, 0.04%)</title><rect x="93.1659%" y="245" width="0.0406%" height="15" fill="rgb(249,113,6)" fg:x="11465" fg:w="5"/><text x="93.4159%" y="255.50"></text></g><g><title>jwtd`std::time::Instant::checked_duration_since (3 samples, 0.02%)</title><rect x="93.2066%" y="245" width="0.0244%" height="15" fill="rgb(238,137,36)" fg:x="11470" fg:w="3"/><text x="93.4566%" y="255.50"></text></g><g><title>jwtd`tokio::runtime::task::waker::clone_waker (3 samples, 0.02%)</title><rect x="93.2309%" y="245" width="0.0244%" height="15" fill="rgb(210,102,26)" fg:x="11473" fg:w="3"/><text x="93.4809%" y="255.50"></text></g><g><title>jwtd`tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (5 samples, 0.04%)</title><rect x="93.2553%" y="245" width="0.0406%" height="15" fill="rgb(218,30,30)" fg:x="11476" fg:w="5"/><text x="93.5053%" y="255.50"></text></g><g><title>jwtd`tokio::runtime::task::waker::clone_waker (3 samples, 0.02%)</title><rect x="93.2716%" y="229" width="0.0244%" height="15" fill="rgb(214,67,26)" fg:x="11478" fg:w="3"/><text x="93.5216%" y="239.50"></text></g><g><title>jwtd`tokio::runtime::task::state::State::ref_inc (2 samples, 0.02%)</title><rect x="93.2797%" y="213" width="0.0163%" height="15" fill="rgb(251,9,53)" fg:x="11479" fg:w="2"/><text x="93.5297%" y="223.50"></text></g><g><title>jwtd`tokio::time::driver::entry::TimerEntry::poll_elapsed (30 samples, 0.24%)</title><rect x="93.1253%" y="261" width="0.2438%" height="15" fill="rgb(228,204,25)" fg:x="11460" fg:w="30"/><text x="93.3753%" y="271.50"></text></g><g><title>jwtd`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::reregister (9 samples, 0.07%)</title><rect x="93.2960%" y="245" width="0.0731%" height="15" fill="rgb(207,153,8)" fg:x="11481" fg:w="9"/><text x="93.5460%" y="255.50"></text></g><g><title>jwtd`&lt;tokio::time::driver::sleep::Sleep as core::future::future::Future&gt;::poll (39 samples, 0.32%)</title><rect x="93.0684%" y="277" width="0.3169%" height="15" fill="rgb(242,9,16)" fg:x="11453" fg:w="39"/><text x="93.3184%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.02%)</title><rect x="93.3691%" y="261" width="0.0163%" height="15" fill="rgb(217,211,10)" fg:x="11490" fg:w="2"/><text x="93.6191%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_memalign (3 samples, 0.02%)</title><rect x="93.3935%" y="261" width="0.0244%" height="15" fill="rgb(219,228,52)" fg:x="11493" fg:w="3"/><text x="93.6435%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="93.4910%" y="229" width="0.0163%" height="15" fill="rgb(231,92,29)" fg:x="11505" fg:w="2"/><text x="93.7410%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.07%)</title><rect x="93.5641%" y="213" width="0.0650%" height="15" fill="rgb(232,8,23)" fg:x="11514" fg:w="8"/><text x="93.8141%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.03%)</title><rect x="93.5966%" y="197" width="0.0325%" height="15" fill="rgb(216,211,34)" fg:x="11518" fg:w="4"/><text x="93.8466%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="93.7023%" y="197" width="0.0163%" height="15" fill="rgb(236,151,0)" fg:x="11531" fg:w="2"/><text x="93.9523%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_memalign (42 samples, 0.34%)</title><rect x="93.4341%" y="245" width="0.3413%" height="15" fill="rgb(209,168,3)" fg:x="11498" fg:w="42"/><text x="93.6841%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_memalign (32 samples, 0.26%)</title><rect x="93.5154%" y="229" width="0.2600%" height="15" fill="rgb(208,129,28)" fg:x="11508" fg:w="32"/><text x="93.7654%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.15%)</title><rect x="93.6291%" y="213" width="0.1463%" height="15" fill="rgb(229,78,22)" fg:x="11522" fg:w="18"/><text x="93.8791%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.06%)</title><rect x="93.7185%" y="197" width="0.0569%" height="15" fill="rgb(228,187,13)" fg:x="11533" fg:w="7"/><text x="93.9685%" y="207.50"></text></g><g><title>jwtd`__rdl_alloc (49 samples, 0.40%)</title><rect x="93.3853%" y="277" width="0.3982%" height="15" fill="rgb(240,119,24)" fg:x="11492" fg:w="49"/><text x="93.6353%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (45 samples, 0.37%)</title><rect x="93.4178%" y="261" width="0.3657%" height="15" fill="rgb(209,194,42)" fg:x="11496" fg:w="45"/><text x="93.6678%" y="271.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;tokio::time::driver::sleep::Sleep&gt;&gt;&gt; (7 samples, 0.06%)</title><rect x="93.7835%" y="277" width="0.0569%" height="15" fill="rgb(247,200,46)" fg:x="11541" fg:w="7"/><text x="94.0335%" y="287.50"></text></g><g><title>jwtd`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::clear_entry (5 samples, 0.04%)</title><rect x="93.7998%" y="261" width="0.0406%" height="15" fill="rgb(218,76,16)" fg:x="11543" fg:w="5"/><text x="94.0498%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.02%)</title><rect x="93.8567%" y="277" width="0.0163%" height="15" fill="rgb(225,21,48)" fg:x="11550" fg:w="2"/><text x="94.1067%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="93.8729%" y="277" width="0.0244%" height="15" fill="rgb(239,223,50)" fg:x="11552" fg:w="3"/><text x="94.1229%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.02%)</title><rect x="93.8729%" y="261" width="0.0244%" height="15" fill="rgb(244,45,21)" fg:x="11552" fg:w="3"/><text x="94.1229%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.06%)</title><rect x="93.8973%" y="277" width="0.0569%" height="15" fill="rgb(232,33,43)" fg:x="11555" fg:w="7"/><text x="94.1473%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.04%)</title><rect x="93.9135%" y="261" width="0.0406%" height="15" fill="rgb(209,8,3)" fg:x="11557" fg:w="5"/><text x="94.1635%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (2 samples, 0.02%)</title><rect x="93.9542%" y="277" width="0.0163%" height="15" fill="rgb(214,25,53)" fg:x="11562" fg:w="2"/><text x="94.2042%" y="287.50"></text></g><g><title>jwtd`actix_http::h1::timer::TimerState::set_and_init (125 samples, 1.02%)</title><rect x="93.0603%" y="293" width="1.0158%" height="15" fill="rgb(254,186,54)" fg:x="11452" fg:w="125"/><text x="93.3103%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.11%)</title><rect x="93.9704%" y="277" width="0.1056%" height="15" fill="rgb(208,174,49)" fg:x="11564" fg:w="13"/><text x="94.2204%" y="287.50"></text></g><g><title>jwtd`bytes::bytes_mut::BytesMut::clear (3 samples, 0.02%)</title><rect x="94.0923%" y="293" width="0.0244%" height="15" fill="rgb(233,191,51)" fg:x="11579" fg:w="3"/><text x="94.3423%" y="303.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;actix_http::h1::dispatcher::State&lt;actix_service::map_err::MapErr&lt;actix_web::app_service::AppInitService&lt;actix_web::app_service::AppRouting,actix_http::body::boxed::BoxBody&gt;,actix_http::requests::request::Request&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn futures_core::stream::Stream+Item = core::result::Result&lt;bytes::bytes::Bytes,actix_http::error::PayloadError&gt;&gt;&gt;&gt;,actix_web::server::HttpServer&lt;jwtd::main::{{closure}}::{{closure}},actix_web::app::App&lt;actix_web::app_service::AppEntry&gt;,actix_web::app_service::AppInit&lt;actix_web::app_service::AppEntry,actix_http::body::boxed::BoxBody&gt;,actix_http::body::boxed::BoxBody&gt;::listen::{{closure}}::{{closure}},actix_web::response::response::HttpResponse&gt;,actix_http::body::boxed::BoxBody,actix_http::h1::expect::ExpectHandler&gt;&gt; (5 samples, 0.04%)</title><rect x="94.1167%" y="293" width="0.0406%" height="15" fill="rgb(222,134,10)" fg:x="11582" fg:w="5"/><text x="94.3667%" y="303.50"></text></g><g><title>jwtd`core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;tokio::time::driver::sleep::Sleep&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="94.1573%" y="293" width="0.0163%" height="15" fill="rgb(230,226,20)" fg:x="11587" fg:w="2"/><text x="94.4073%" y="303.50"></text></g><g><title>jwtd`tokio::io::read_buf::slice_assume_init (4 samples, 0.03%)</title><rect x="94.1817%" y="293" width="0.0325%" height="15" fill="rgb(251,111,25)" fg:x="11590" fg:w="4"/><text x="94.4317%" y="303.50"></text></g><g><title>jwtd`tokio::runtime::context::time_handle (5 samples, 0.04%)</title><rect x="94.2142%" y="293" width="0.0406%" height="15" fill="rgb(224,40,46)" fg:x="11594" fg:w="5"/><text x="94.4642%" y="303.50"></text></g><g><title>jwtd`tokio::runtime::context::time_handle (8 samples, 0.07%)</title><rect x="94.3198%" y="277" width="0.0650%" height="15" fill="rgb(236,108,47)" fg:x="11607" fg:w="8"/><text x="94.5698%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.02%)</title><rect x="94.3849%" y="277" width="0.0244%" height="15" fill="rgb(234,93,0)" fg:x="11615" fg:w="3"/><text x="94.6349%" y="287.50"></text></g><g><title>jwtd`tokio::time::driver::sleep::sleep_until (19 samples, 0.15%)</title><rect x="94.2630%" y="293" width="0.1544%" height="15" fill="rgb(224,213,32)" fg:x="11600" fg:w="19"/><text x="94.5130%" y="303.50"></text></g><g><title>jwtd`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2 samples, 0.02%)</title><rect x="94.5149%" y="261" width="0.0163%" height="15" fill="rgb(251,11,48)" fg:x="11631" fg:w="2"/><text x="94.7649%" y="271.50"></text></g><g><title>jwtd`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (9 samples, 0.07%)</title><rect x="94.6043%" y="229" width="0.0731%" height="15" fill="rgb(236,173,5)" fg:x="11642" fg:w="9"/><text x="94.8543%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit_if_canceled (4 samples, 0.03%)</title><rect x="94.6449%" y="213" width="0.0325%" height="15" fill="rgb(230,95,12)" fg:x="11647" fg:w="4"/><text x="94.8949%" y="223.50"></text></g><g><title>libsystem_c.dylib`recv (5 samples, 0.04%)</title><rect x="94.6774%" y="229" width="0.0406%" height="15" fill="rgb(232,209,1)" fg:x="11651" fg:w="5"/><text x="94.9274%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (394 samples, 3.20%)</title><rect x="94.7180%" y="229" width="3.2017%" height="15" fill="rgb(232,6,1)" fg:x="11656" fg:w="394"/><text x="94.9680%" y="239.50">lib..</text></g><g><title>jwtd`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (413 samples, 3.36%)</title><rect x="94.5799%" y="245" width="3.3561%" height="15" fill="rgb(210,224,50)" fg:x="11639" fg:w="413"/><text x="94.8299%" y="255.50">jwt..</text></g><g><title>libsystem_kernel.dylib`cerror (2 samples, 0.02%)</title><rect x="97.9197%" y="229" width="0.0163%" height="15" fill="rgb(228,127,35)" fg:x="12050" fg:w="2"/><text x="98.1697%" y="239.50"></text></g><g><title>jwtd`std::sys::unix::decode_error_kind (2 samples, 0.02%)</title><rect x="97.9441%" y="245" width="0.0163%" height="15" fill="rgb(245,102,45)" fg:x="12053" fg:w="2"/><text x="98.1941%" y="255.50"></text></g><g><title>jwtd`tokio::io::driver::registration::Registration::poll_ready (30 samples, 0.24%)</title><rect x="97.9685%" y="245" width="0.2438%" height="15" fill="rgb(214,1,49)" fg:x="12056" fg:w="30"/><text x="98.2185%" y="255.50"></text></g><g><title>jwtd`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (21 samples, 0.17%)</title><rect x="98.0416%" y="229" width="0.1706%" height="15" fill="rgb(226,163,40)" fg:x="12065" fg:w="21"/><text x="98.2916%" y="239.50"></text></g><g><title>jwtd`tokio::runtime::task::waker::clone_waker (4 samples, 0.03%)</title><rect x="98.1797%" y="213" width="0.0325%" height="15" fill="rgb(239,212,28)" fg:x="12082" fg:w="4"/><text x="98.4297%" y="223.50"></text></g><g><title>jwtd`tokio::runtime::task::state::State::ref_inc (3 samples, 0.02%)</title><rect x="98.1879%" y="197" width="0.0244%" height="15" fill="rgb(220,20,13)" fg:x="12083" fg:w="3"/><text x="98.4379%" y="207.50"></text></g><g><title>jwtd`tokio::io::driver::registration::Registration::poll_read_io (458 samples, 3.72%)</title><rect x="94.5311%" y="261" width="3.7218%" height="15" fill="rgb(210,164,35)" fg:x="11633" fg:w="458"/><text x="94.7811%" y="271.50">jwtd..</text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.04%)</title><rect x="98.2123%" y="245" width="0.0406%" height="15" fill="rgb(248,109,41)" fg:x="12086" fg:w="5"/><text x="98.4623%" y="255.50"></text></g><g><title>jwtd`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (464 samples, 3.77%)</title><rect x="94.4905%" y="277" width="3.7705%" height="15" fill="rgb(238,23,50)" fg:x="11628" fg:w="464"/><text x="94.7405%" y="287.50">jwtd..</text></g><g><title>jwtd`tokio_util::util::poll_read_buf (474 samples, 3.85%)</title><rect x="94.4174%" y="293" width="3.8518%" height="15" fill="rgb(211,48,49)" fg:x="11619" fg:w="474"/><text x="94.6674%" y="303.50">jwtd..</text></g><g><title>jwtd`&lt;actix_http::h1::dispatcher::Dispatcher&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (6,663 samples, 54.14%)</title><rect x="44.1492%" y="309" width="54.1443%" height="15" fill="rgb(223,36,21)" fg:x="5433" fg:w="6663"/><text x="44.3992%" y="319.50">jwtd`&lt;actix_http::h1::dispatcher::Dispatcher&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;:..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="98.2773%" y="293" width="0.0163%" height="15" fill="rgb(207,123,46)" fg:x="12094" fg:w="2"/><text x="98.5273%" y="303.50"></text></g><g><title>jwtd`&lt;actix_http::service::HttpServiceHandlerResponse&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="98.3016%" y="309" width="0.0163%" height="15" fill="rgb(240,218,32)" fg:x="12097" fg:w="2"/><text x="98.5516%" y="319.50"></text></g><g><title>jwtd`actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_request (2 samples, 0.02%)</title><rect x="98.3260%" y="277" width="0.0163%" height="15" fill="rgb(252,5,43)" fg:x="12100" fg:w="2"/><text x="98.5760%" y="287.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::Elem&lt;M&gt;::into_modulus (3 samples, 0.02%)</title><rect x="98.3504%" y="133" width="0.0244%" height="15" fill="rgb(252,84,19)" fg:x="12103" fg:w="3"/><text x="98.6004%" y="143.50"></text></g><g><title>jwtd`ring::rsa::signing::RsaKeyPair::from_der (5 samples, 0.04%)</title><rect x="98.3504%" y="181" width="0.0406%" height="15" fill="rgb(243,152,39)" fg:x="12103" fg:w="5"/><text x="98.6004%" y="191.50"></text></g><g><title>jwtd`untrusted::Input::read_all (5 samples, 0.04%)</title><rect x="98.3504%" y="165" width="0.0406%" height="15" fill="rgb(234,160,15)" fg:x="12103" fg:w="5"/><text x="98.6004%" y="175.50"></text></g><g><title>jwtd`ring::rsa::signing::RsaKeyPair::from_der_reader (5 samples, 0.04%)</title><rect x="98.3504%" y="149" width="0.0406%" height="15" fill="rgb(237,34,20)" fg:x="12103" fg:w="5"/><text x="98.6004%" y="159.50"></text></g><g><title>jwtd`ring::rsa::signing::PrivatePrime&lt;M&gt;::new (2 samples, 0.02%)</title><rect x="98.3748%" y="133" width="0.0163%" height="15" fill="rgb(229,97,13)" fg:x="12106" fg:w="2"/><text x="98.6248%" y="143.50"></text></g><g><title>jwtd`jsonwebtoken::crypto::sign (8 samples, 0.07%)</title><rect x="98.3504%" y="213" width="0.0650%" height="15" fill="rgb(234,71,50)" fg:x="12103" fg:w="8"/><text x="98.6004%" y="223.50"></text></g><g><title>jwtd`jsonwebtoken::crypto::rsa::sign (8 samples, 0.07%)</title><rect x="98.3504%" y="197" width="0.0650%" height="15" fill="rgb(253,155,4)" fg:x="12103" fg:w="8"/><text x="98.6004%" y="207.50"></text></g><g><title>jwtd`ring::rsa::signing::RsaKeyPair::sign (3 samples, 0.02%)</title><rect x="98.3910%" y="181" width="0.0244%" height="15" fill="rgb(222,185,37)" fg:x="12108" fg:w="3"/><text x="98.6410%" y="191.50"></text></g><g><title>jwtd`ring::arithmetic::bigint::elem_exp_consttime (2 samples, 0.02%)</title><rect x="98.3992%" y="165" width="0.0163%" height="15" fill="rgb(251,177,13)" fg:x="12109" fg:w="2"/><text x="98.6492%" y="175.50"></text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.08%)</title><rect x="98.3423%" y="261" width="0.0813%" height="15" fill="rgb(250,179,40)" fg:x="12102" fg:w="10"/><text x="98.5923%" y="271.50"></text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.08%)</title><rect x="98.3423%" y="245" width="0.0813%" height="15" fill="rgb(242,44,2)" fg:x="12102" fg:w="10"/><text x="98.5923%" y="255.50"></text></g><g><title>jwtd`jsonwebtoken::encoding::encode (9 samples, 0.07%)</title><rect x="98.3504%" y="229" width="0.0731%" height="15" fill="rgb(216,177,13)" fg:x="12103" fg:w="9"/><text x="98.6004%" y="239.50"></text></g><g><title>jwtd`actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_response (11 samples, 0.09%)</title><rect x="98.3423%" y="277" width="0.0894%" height="15" fill="rgb(216,106,43)" fg:x="12102" fg:w="11"/><text x="98.5923%" y="287.50"></text></g><g><title>jwtd`actix_http::h1::timer::TimerState::set_and_init (2 samples, 0.02%)</title><rect x="98.4317%" y="277" width="0.0163%" height="15" fill="rgb(216,183,2)" fg:x="12113" fg:w="2"/><text x="98.6817%" y="287.50"></text></g><g><title>jwtd`&lt;actix_service::and_then::AndThenServiceResponse&lt;A,B,Req&gt; as core::future::future::Future&gt;::poll (19 samples, 0.15%)</title><rect x="98.3179%" y="309" width="0.1544%" height="15" fill="rgb(249,75,3)" fg:x="12099" fg:w="19"/><text x="98.5679%" y="319.50"></text></g><g><title>jwtd`&lt;actix_http::h1::dispatcher::Dispatcher&lt;T,S,B,X,U&gt; as core::future::future::Future&gt;::poll (19 samples, 0.15%)</title><rect x="98.3179%" y="293" width="0.1544%" height="15" fill="rgb(219,67,39)" fg:x="12099" fg:w="19"/><text x="98.5679%" y="303.50"></text></g><g><title>jwtd`tokio_util::util::poll_read_buf (3 samples, 0.02%)</title><rect x="98.4479%" y="277" width="0.0244%" height="15" fill="rgb(253,228,2)" fg:x="12115" fg:w="3"/><text x="98.6979%" y="287.50"></text></g><g><title>jwtd`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (3 samples, 0.02%)</title><rect x="98.4479%" y="261" width="0.0244%" height="15" fill="rgb(235,138,27)" fg:x="12115" fg:w="3"/><text x="98.6979%" y="271.50"></text></g><g><title>jwtd`tokio::io::driver::registration::Registration::poll_read_io (3 samples, 0.02%)</title><rect x="98.4479%" y="245" width="0.0244%" height="15" fill="rgb(236,97,51)" fg:x="12115" fg:w="3"/><text x="98.6979%" y="255.50"></text></g><g><title>jwtd`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (3 samples, 0.02%)</title><rect x="98.4479%" y="229" width="0.0244%" height="15" fill="rgb(240,80,30)" fg:x="12115" fg:w="3"/><text x="98.6979%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (3 samples, 0.02%)</title><rect x="98.4479%" y="213" width="0.0244%" height="15" fill="rgb(230,178,19)" fg:x="12115" fg:w="3"/><text x="98.6979%" y="223.50"></text></g><g><title>jwtd`__rust_probestack (4 samples, 0.03%)</title><rect x="98.4804%" y="309" width="0.0325%" height="15" fill="rgb(210,190,27)" fg:x="12119" fg:w="4"/><text x="98.7304%" y="319.50"></text></g><g><title>jwtd`actix_http::h1::dispatcher::InnerDispatcher&lt;T,S,B,X,U&gt;::poll_flush (2 samples, 0.02%)</title><rect x="98.5129%" y="309" width="0.0163%" height="15" fill="rgb(222,107,31)" fg:x="12123" fg:w="2"/><text x="98.7629%" y="319.50"></text></g><g><title>jwtd`actix_http::h1::dispatcher::trace_timer_states (2 samples, 0.02%)</title><rect x="98.5454%" y="309" width="0.0163%" height="15" fill="rgb(216,127,34)" fg:x="12127" fg:w="2"/><text x="98.7954%" y="319.50"></text></g><g><title>jwtd`tokio::time::driver::sleep::sleep_until (2 samples, 0.02%)</title><rect x="98.5617%" y="309" width="0.0163%" height="15" fill="rgb(234,116,52)" fg:x="12129" fg:w="2"/><text x="98.8117%" y="319.50"></text></g><g><title>jwtd`tokio::time::instant::Instant::from_std (4 samples, 0.03%)</title><rect x="98.5779%" y="309" width="0.0325%" height="15" fill="rgb(222,124,15)" fg:x="12131" fg:w="4"/><text x="98.8279%" y="319.50"></text></g><g><title>jwtd`&lt;actix_service::and_then::AndThenServiceResponse&lt;A,B,Req&gt; as core::future::future::Future&gt;::poll (6,712 samples, 54.54%)</title><rect x="44.1004%" y="325" width="54.5425%" height="15" fill="rgb(231,179,28)" fg:x="5427" fg:w="6712"/><text x="44.3504%" y="335.50">jwtd`&lt;actix_service::and_then::AndThenServiceResponse&lt;A,B,Req&gt; as core::future::future::Fu..</text></g><g><title>jwtd`tokio_util::util::poll_read_buf (4 samples, 0.03%)</title><rect x="98.6104%" y="309" width="0.0325%" height="15" fill="rgb(226,93,45)" fg:x="12135" fg:w="4"/><text x="98.8604%" y="319.50"></text></g><g><title>jwtd`core::ptr::drop_in_place$LT$actix_service..and_then..AndThenServiceResponse$LT$actix_service..fn_service..FnService$LT$actix_http..service..HttpService$LT$tokio..net..tcp..stream..TcpStream$C$actix_service..map_config..MapConfig$LT$actix_service..map_err..MapErrServiceFactory$LT$actix_web..app_service..AppInit$LT$actix_web..app_service..AppEntry$C$actix_http..body..boxed..BoxBody$GT$$C$actix_http..requests..request..Request$LT$core..pin..Pin$LT$alloc..boxed..Box$LT$dyn$u20$futures_core..stream..Stream$u2b$Item$u20$$u3d$$u20$core..result..Result$LT$bytes..bytes..Bytes$C$actix_http..error..PayloadError$GT$$GT$$GT$$GT$$C$actix_web..server..HttpServer$LT$jwtd..main..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$C$actix_web..app..App$LT$actix_web..app_service..AppEntry$GT$$C$actix_web..app_service..AppInit$LT$actix_web..app_service..AppEntry$C$actix_http..body..boxed..BoxBody$GT$$C$actix_http..body..boxed..BoxBody$GT$..listen..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$C$actix_web..respons� (2 samples, 0.02%)</title><rect x="98.6429%" y="325" width="0.0163%" height="15" fill="rgb(215,8,51)" fg:x="12139" fg:w="2"/><text x="98.8929%" y="335.50"></text></g><g><title>jwtd`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (6,733 samples, 54.71%)</title><rect x="43.9542%" y="357" width="54.7131%" height="15" fill="rgb(223,106,5)" fg:x="5409" fg:w="6733"/><text x="44.2042%" y="367.50">jwtd`tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,724 samples, 54.64%)</title><rect x="44.0273%" y="341" width="54.6400%" height="15" fill="rgb(250,191,5)" fg:x="5418" fg:w="6724"/><text x="44.2773%" y="351.50">jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>jwtd`tokio::runtime::task::state::State::transition_to_idle (2 samples, 0.02%)</title><rect x="98.6754%" y="357" width="0.0163%" height="15" fill="rgb(242,132,44)" fg:x="12143" fg:w="2"/><text x="98.9254%" y="367.50"></text></g><g><title>jwtd`tokio::runtime::task::state::State::transition_to_running (2 samples, 0.02%)</title><rect x="98.6917%" y="357" width="0.0163%" height="15" fill="rgb(251,152,29)" fg:x="12145" fg:w="2"/><text x="98.9417%" y="367.50"></text></g><g><title>jwtd`tokio::task::local::Shared::schedule (6 samples, 0.05%)</title><rect x="98.7079%" y="357" width="0.0488%" height="15" fill="rgb(218,179,5)" fg:x="12147" fg:w="6"/><text x="98.9579%" y="367.50"></text></g><g><title>jwtd`tokio::task::local::Shared::schedule::_{{closure}} (4 samples, 0.03%)</title><rect x="98.7242%" y="341" width="0.0325%" height="15" fill="rgb(227,67,19)" fg:x="12149" fg:w="4"/><text x="98.9742%" y="351.50"></text></g><g><title>jwtd`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6,771 samples, 55.02%)</title><rect x="43.7754%" y="373" width="55.0219%" height="15" fill="rgb(233,119,31)" fg:x="5387" fg:w="6771"/><text x="44.0254%" y="383.50">jwtd`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.04%)</title><rect x="98.7567%" y="357" width="0.0406%" height="15" fill="rgb(241,120,22)" fg:x="12153" fg:w="5"/><text x="99.0067%" y="367.50"></text></g><g><title>jwtd`tokio::task::local::Shared::schedule (3 samples, 0.02%)</title><rect x="98.8136%" y="373" width="0.0244%" height="15" fill="rgb(224,102,30)" fg:x="12160" fg:w="3"/><text x="99.0636%" y="383.50"></text></g><g><title>jwtd`std::thread::local::LocalKey&lt;T&gt;::with (6,782 samples, 55.11%)</title><rect x="43.7429%" y="389" width="55.1113%" height="15" fill="rgb(210,164,37)" fg:x="5383" fg:w="6782"/><text x="43.9929%" y="399.50">jwtd`std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.02%)</title><rect x="98.8380%" y="373" width="0.0163%" height="15" fill="rgb(226,191,16)" fg:x="12163" fg:w="2"/><text x="99.0880%" y="383.50"></text></g><g><title>jwtd`tokio::task::local::LocalSet::tick (6,800 samples, 55.26%)</title><rect x="43.6291%" y="405" width="55.2576%" height="15" fill="rgb(214,40,45)" fg:x="5369" fg:w="6800"/><text x="43.8791%" y="415.50">jwtd`tokio::task::local::LocalSet::tick</text></g><g><title>jwtd`tokio::runtime::task::raw::poll (3 samples, 0.02%)</title><rect x="98.8623%" y="389" width="0.0244%" height="15" fill="rgb(244,29,26)" fg:x="12166" fg:w="3"/><text x="99.1123%" y="399.50"></text></g><g><title>jwtd`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (6,811 samples, 55.35%)</title><rect x="43.5479%" y="421" width="55.3470%" height="15" fill="rgb(216,16,5)" fg:x="5359" fg:w="6811"/><text x="43.7979%" y="431.50">jwtd`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>jwtd`tokio::runtime::basic_scheduler::Context::enter (6,817 samples, 55.40%)</title><rect x="43.5154%" y="469" width="55.3957%" height="15" fill="rgb(249,76,35)" fg:x="5355" fg:w="6817"/><text x="43.7654%" y="479.50">jwtd`tokio::runtime::basic_scheduler::Context::enter</text></g><g><title>jwtd`std::thread::local::LocalKey&lt;T&gt;::with (6,816 samples, 55.39%)</title><rect x="43.5235%" y="453" width="55.3876%" height="15" fill="rgb(207,11,44)" fg:x="5356" fg:w="6816"/><text x="43.7735%" y="463.50">jwtd`std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,816 samples, 55.39%)</title><rect x="43.5235%" y="437" width="55.3876%" height="15" fill="rgb(228,190,49)" fg:x="5356" fg:w="6816"/><text x="43.7735%" y="447.50">jwtd`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>jwtd`tokio::runtime::task::state::State::transition_to_notified_by_val (5 samples, 0.04%)</title><rect x="99.0411%" y="389" width="0.0406%" height="15" fill="rgb(214,173,12)" fg:x="12188" fg:w="5"/><text x="99.2911%" y="399.50"></text></g><g><title>jwtd`tokio::task::local::Shared::schedule::_{{closure}} (7 samples, 0.06%)</title><rect x="99.0817%" y="373" width="0.0569%" height="15" fill="rgb(218,26,35)" fg:x="12193" fg:w="7"/><text x="99.3317%" y="383.50"></text></g><g><title>jwtd`tokio::util::wake::wake_arc_raw (6 samples, 0.05%)</title><rect x="99.0899%" y="357" width="0.0488%" height="15" fill="rgb(220,200,19)" fg:x="12194" fg:w="6"/><text x="99.3399%" y="367.50"></text></g><g><title>jwtd`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Unpark&gt;::unpark (5 samples, 0.04%)</title><rect x="99.0980%" y="341" width="0.0406%" height="15" fill="rgb(239,95,49)" fg:x="12195" fg:w="5"/><text x="99.3480%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`kevent (5 samples, 0.04%)</title><rect x="99.0980%" y="325" width="0.0406%" height="15" fill="rgb(235,85,53)" fg:x="12195" fg:w="5"/><text x="99.3480%" y="335.50"></text></g><g><title>jwtd`tokio::io::driver::scheduled_io::ScheduledIo::wake0 (19 samples, 0.15%)</title><rect x="98.9924%" y="421" width="0.1544%" height="15" fill="rgb(233,133,31)" fg:x="12182" fg:w="19"/><text x="99.2424%" y="431.50"></text></g><g><title>jwtd`tokio::runtime::task::waker::wake_by_val (15 samples, 0.12%)</title><rect x="99.0249%" y="405" width="0.1219%" height="15" fill="rgb(218,25,20)" fg:x="12186" fg:w="15"/><text x="99.2749%" y="415.50"></text></g><g><title>jwtd`tokio::task::local::Shared::schedule (8 samples, 0.07%)</title><rect x="99.0817%" y="389" width="0.0650%" height="15" fill="rgb(252,210,38)" fg:x="12193" fg:w="8"/><text x="99.3317%" y="399.50"></text></g><g><title>jwtd`tokio::io::driver::Driver::turn (127 samples, 1.03%)</title><rect x="98.9192%" y="437" width="1.0320%" height="15" fill="rgb(242,134,21)" fg:x="12173" fg:w="127"/><text x="99.1692%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`kevent (99 samples, 0.80%)</title><rect x="99.1468%" y="421" width="0.8045%" height="15" fill="rgb(213,28,48)" fg:x="12201" fg:w="99"/><text x="99.3968%" y="431.50"></text></g><g><title>jwtd`tokio::time::driver::Driver&lt;P&gt;::park_internal (132 samples, 1.07%)</title><rect x="98.9111%" y="453" width="1.0726%" height="15" fill="rgb(250,196,2)" fg:x="12172" fg:w="132"/><text x="99.1611%" y="463.50"></text></g><g><title>jwtd`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (3 samples, 0.02%)</title><rect x="99.9594%" y="437" width="0.0244%" height="15" fill="rgb(227,5,17)" fg:x="12301" fg:w="3"/><text x="100.2094%" y="447.50"></text></g><g><title>jwtd`tokio::runtime::task::waker::wake_by_val (2 samples, 0.02%)</title><rect x="99.9675%" y="421" width="0.0163%" height="15" fill="rgb(221,226,24)" fg:x="12302" fg:w="2"/><text x="100.2175%" y="431.50"></text></g><g><title>jwtd`tokio::task::local::Shared::schedule (2 samples, 0.02%)</title><rect x="99.9675%" y="405" width="0.0163%" height="15" fill="rgb(211,5,48)" fg:x="12302" fg:w="2"/><text x="100.2175%" y="415.50"></text></g><g><title>jwtd`tokio::task::local::Shared::schedule::_{{closure}} (2 samples, 0.02%)</title><rect x="99.9675%" y="389" width="0.0163%" height="15" fill="rgb(219,150,6)" fg:x="12302" fg:w="2"/><text x="100.2175%" y="399.50"></text></g><g><title>all (12,306 samples, 100%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(251,46,16)" fg:x="0" fg:w="12306"/><text x="0.2500%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (6,964 samples, 56.59%)</title><rect x="43.4097%" y="597" width="56.5903%" height="15" fill="rgb(220,204,40)" fg:x="5342" fg:w="6964"/><text x="43.6597%" y="607.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (6,964 samples, 56.59%)</title><rect x="43.4097%" y="581" width="56.5903%" height="15" fill="rgb(211,85,2)" fg:x="5342" fg:w="6964"/><text x="43.6597%" y="591.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_body (6,964 samples, 56.59%)</title><rect x="43.4097%" y="565" width="56.5903%" height="15" fill="rgb(229,17,7)" fg:x="5342" fg:w="6964"/><text x="43.6597%" y="575.50">libsystem_pthread.dylib`_pthread_body</text></g><g><title>jwtd`std::sys::unix::thread::Thread::new::thread_start (6,964 samples, 56.59%)</title><rect x="43.4097%" y="549" width="56.5903%" height="15" fill="rgb(239,72,28)" fg:x="5342" fg:w="6964"/><text x="43.6597%" y="559.50">jwtd`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>jwtd`core::ops::function::FnOnce::call_once{{vtable.shim}} (6,964 samples, 56.59%)</title><rect x="43.4097%" y="533" width="56.5903%" height="15" fill="rgb(230,47,54)" fg:x="5342" fg:w="6964"/><text x="43.6597%" y="543.50">jwtd`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>jwtd`std::sys_common::backtrace::__rust_begin_short_backtrace (6,964 samples, 56.59%)</title><rect x="43.4097%" y="517" width="56.5903%" height="15" fill="rgb(214,50,8)" fg:x="5342" fg:w="6964"/><text x="43.6597%" y="527.50">jwtd`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>jwtd`tokio::runtime::Runtime::block_on (6,952 samples, 56.49%)</title><rect x="43.5072%" y="501" width="56.4928%" height="15" fill="rgb(216,198,43)" fg:x="5354" fg:w="6952"/><text x="43.7572%" y="511.50">jwtd`tokio::runtime::Runtime::block_on</text></g><g><title>jwtd`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (6,952 samples, 56.49%)</title><rect x="43.5072%" y="485" width="56.4928%" height="15" fill="rgb(234,20,35)" fg:x="5354" fg:w="6952"/><text x="43.7572%" y="495.50">jwtd`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>jwtd`tokio::runtime::basic_scheduler::Context::park (134 samples, 1.09%)</title><rect x="98.9111%" y="469" width="1.0889%" height="15" fill="rgb(254,45,19)" fg:x="12172" fg:w="134"/><text x="99.1611%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (2 samples, 0.02%)</title><rect x="99.9837%" y="453" width="0.0163%" height="15" fill="rgb(219,14,44)" fg:x="12304" fg:w="2"/><text x="100.2337%" y="463.50"></text></g></svg></svg>